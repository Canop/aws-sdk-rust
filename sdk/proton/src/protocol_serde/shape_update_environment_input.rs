// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_update_environment_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::update_environment::UpdateEnvironmentInput,
) -> Result<(), ::aws_smithy_http::operation::error::SerializationError> {
    {
        object.key("name").string(input.name.as_str());
    }
    if let Some(var_1) = &input.description {
        object.key("description").string(var_1.as_str());
    }
    if let Some(var_2) = &input.spec {
        object.key("spec").string(var_2.as_str());
    }
    if let Some(var_3) = &input.template_major_version {
        object.key("templateMajorVersion").string(var_3.as_str());
    }
    if let Some(var_4) = &input.template_minor_version {
        object.key("templateMinorVersion").string(var_4.as_str());
    }
    if let Some(var_5) = &input.proton_service_role_arn {
        object.key("protonServiceRoleArn").string(var_5.as_str());
    }
    {
        object.key("deploymentType").string(input.deployment_type.as_str());
    }
    if let Some(var_6) = &input.environment_account_connection_id {
        object.key("environmentAccountConnectionId").string(var_6.as_str());
    }
    if let Some(var_7) = &input.provisioning_repository {
        #[allow(unused_mut)]
        let mut object_8 = object.key("provisioningRepository").start_object();
        crate::protocol_serde::shape_repository_branch_input::ser_repository_branch_input(&mut object_8, var_7)?;
        object_8.finish();
    }
    if let Some(var_9) = &input.component_role_arn {
        object.key("componentRoleArn").string(var_9.as_str());
    }
    if let Some(var_10) = &input.codebuild_role_arn {
        object.key("codebuildRoleArn").string(var_10.as_str());
    }
    Ok(())
}
