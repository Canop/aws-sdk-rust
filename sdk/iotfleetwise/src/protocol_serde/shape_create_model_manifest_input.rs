// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_create_model_manifest_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::create_model_manifest::CreateModelManifestInput,
) -> Result<(), ::aws_smithy_http::operation::error::SerializationError> {
    {
        object.key("name").string(input.name.as_str());
    }
    if let Some(var_1) = &input.description {
        object.key("description").string(var_1.as_str());
    }
    {
        let mut array_2 = object.key("nodes").start_array();
        for item_3 in &input.nodes {
            {
                array_2.value().string(item_3.as_str());
            }
        }
        array_2.finish();
    }
    {
        object.key("signalCatalogArn").string(input.signal_catalog_arn.as_str());
    }
    if let Some(var_4) = &input.tags {
        let mut array_5 = object.key("tags").start_array();
        for item_6 in var_4 {
            {
                #[allow(unused_mut)]
                let mut object_7 = array_5.value().start_object();
                crate::protocol_serde::shape_tag::ser_tag(&mut object_7, item_6)?;
                object_7.finish();
            }
        }
        array_5.finish();
    }
    Ok(())
}
