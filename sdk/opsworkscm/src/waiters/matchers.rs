// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Matcher union: {"output":{"path":"NodeAssociationStatus","expected":"SUCCESS","comparator":"stringEquals"}}
pub(crate) fn match_describe_node_association_status_846591fca8cc0ea85(
    _result: ::std::result::Result<
        &crate::operation::describe_node_association_status::DescribeNodeAssociationStatusOutput,
        &crate::operation::describe_node_association_status::DescribeNodeAssociationStatusError,
    >,
) -> bool {
    fn path_traversal<'a>(
        _output: &'a crate::operation::describe_node_association_status::DescribeNodeAssociationStatusOutput,
    ) -> ::std::option::Option<&'a crate::types::NodeAssociationStatus> {
        let _fld_1 = _output.node_association_status.as_ref()?;
        ::std::option::Option::Some(_fld_1)
    }
    _result
        .as_ref()
        .ok()
        .and_then(|output| path_traversal(output))
        .map(|value| {
            let _tmp_2 = value.as_str();
            let right = "SUCCESS";
            let _cmp_1 = _tmp_2 == right;
            _cmp_1
        })
        .unwrap_or_default()
}

/// Matcher union: {"output":{"path":"NodeAssociationStatus","expected":"FAILED","comparator":"stringEquals"}}
pub(crate) fn match_describe_node_association_status_bbe8351531f1c2e8b(
    _result: ::std::result::Result<
        &crate::operation::describe_node_association_status::DescribeNodeAssociationStatusOutput,
        &crate::operation::describe_node_association_status::DescribeNodeAssociationStatusError,
    >,
) -> bool {
    fn path_traversal<'a>(
        _output: &'a crate::operation::describe_node_association_status::DescribeNodeAssociationStatusOutput,
    ) -> ::std::option::Option<&'a crate::types::NodeAssociationStatus> {
        let _fld_1 = _output.node_association_status.as_ref()?;
        ::std::option::Option::Some(_fld_1)
    }
    _result
        .as_ref()
        .ok()
        .and_then(|output| path_traversal(output))
        .map(|value| {
            let _tmp_2 = value.as_str();
            let right = "FAILED";
            let _cmp_1 = _tmp_2 == right;
            _cmp_1
        })
        .unwrap_or_default()
}
