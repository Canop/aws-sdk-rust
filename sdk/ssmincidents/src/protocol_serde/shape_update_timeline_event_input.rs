// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_update_timeline_event_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::update_timeline_event::UpdateTimelineEventInput,
) -> Result<(), ::aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.client_token {
        object.key("clientToken").string(var_1.as_str());
    }
    if let Some(var_2) = &input.event_data {
        object.key("eventData").string(var_2.as_str());
    }
    {
        object.key("eventId").string(input.event_id.as_str());
    }
    if let Some(var_3) = &input.event_references {
        let mut array_4 = object.key("eventReferences").start_array();
        for item_5 in var_3 {
            {
                #[allow(unused_mut)]
                let mut object_6 = array_4.value().start_object();
                crate::protocol_serde::shape_event_reference::ser_event_reference(&mut object_6, item_5)?;
                object_6.finish();
            }
        }
        array_4.finish();
    }
    if let Some(var_7) = &input.event_time {
        object
            .key("eventTime")
            .date_time(var_7, ::aws_smithy_types::date_time::Format::EpochSeconds)?;
    }
    if let Some(var_8) = &input.event_type {
        object.key("eventType").string(var_8.as_str());
    }
    {
        object.key("incidentRecordArn").string(input.incident_record_arn.as_str());
    }
    Ok(())
}
