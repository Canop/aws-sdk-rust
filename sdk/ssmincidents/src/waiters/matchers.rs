// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Matcher union: {"output":{"path":"replicationSet.status","expected":"ACTIVE","comparator":"stringEquals"}}
pub(crate) fn match_get_replication_set_871d2946ee9e2eb50(
    _result: ::std::result::Result<
        &crate::operation::get_replication_set::GetReplicationSetOutput,
        &crate::operation::get_replication_set::GetReplicationSetError,
    >,
) -> bool {
    fn path_traversal<'a>(
        _output: &'a crate::operation::get_replication_set::GetReplicationSetOutput,
    ) -> ::std::option::Option<&'a crate::types::ReplicationSetStatus> {
        let _fld_1 = _output.replication_set.as_ref()?;
        let _fld_2 = &_fld_1.status;
        ::std::option::Option::Some(_fld_2)
    }
    _result
        .as_ref()
        .ok()
        .and_then(|output| path_traversal(output))
        .map(|value| {
            let _tmp_2 = value.as_str();
            let right = "ACTIVE";
            let _cmp_1 = _tmp_2 == right;
            _cmp_1
        })
        .unwrap_or_default()
}

/// Matcher union: {"output":{"path":"replicationSet.status","expected":"CREATING","comparator":"stringEquals"}}
pub(crate) fn match_get_replication_set_31d8927410e7dc15d(
    _result: ::std::result::Result<
        &crate::operation::get_replication_set::GetReplicationSetOutput,
        &crate::operation::get_replication_set::GetReplicationSetError,
    >,
) -> bool {
    fn path_traversal<'a>(
        _output: &'a crate::operation::get_replication_set::GetReplicationSetOutput,
    ) -> ::std::option::Option<&'a crate::types::ReplicationSetStatus> {
        let _fld_1 = _output.replication_set.as_ref()?;
        let _fld_2 = &_fld_1.status;
        ::std::option::Option::Some(_fld_2)
    }
    _result
        .as_ref()
        .ok()
        .and_then(|output| path_traversal(output))
        .map(|value| {
            let _tmp_2 = value.as_str();
            let right = "CREATING";
            let _cmp_1 = _tmp_2 == right;
            _cmp_1
        })
        .unwrap_or_default()
}

/// Matcher union: {"output":{"path":"replicationSet.status","expected":"UPDATING","comparator":"stringEquals"}}
pub(crate) fn match_get_replication_set_90e4fe107315e2058(
    _result: ::std::result::Result<
        &crate::operation::get_replication_set::GetReplicationSetOutput,
        &crate::operation::get_replication_set::GetReplicationSetError,
    >,
) -> bool {
    fn path_traversal<'a>(
        _output: &'a crate::operation::get_replication_set::GetReplicationSetOutput,
    ) -> ::std::option::Option<&'a crate::types::ReplicationSetStatus> {
        let _fld_1 = _output.replication_set.as_ref()?;
        let _fld_2 = &_fld_1.status;
        ::std::option::Option::Some(_fld_2)
    }
    _result
        .as_ref()
        .ok()
        .and_then(|output| path_traversal(output))
        .map(|value| {
            let _tmp_2 = value.as_str();
            let right = "UPDATING";
            let _cmp_1 = _tmp_2 == right;
            _cmp_1
        })
        .unwrap_or_default()
}

/// Matcher union: {"output":{"path":"replicationSet.status","expected":"FAILED","comparator":"stringEquals"}}
pub(crate) fn match_get_replication_set_a14806ee44b52f0c3(
    _result: ::std::result::Result<
        &crate::operation::get_replication_set::GetReplicationSetOutput,
        &crate::operation::get_replication_set::GetReplicationSetError,
    >,
) -> bool {
    fn path_traversal<'a>(
        _output: &'a crate::operation::get_replication_set::GetReplicationSetOutput,
    ) -> ::std::option::Option<&'a crate::types::ReplicationSetStatus> {
        let _fld_1 = _output.replication_set.as_ref()?;
        let _fld_2 = &_fld_1.status;
        ::std::option::Option::Some(_fld_2)
    }
    _result
        .as_ref()
        .ok()
        .and_then(|output| path_traversal(output))
        .map(|value| {
            let _tmp_2 = value.as_str();
            let right = "FAILED";
            let _cmp_1 = _tmp_2 == right;
            _cmp_1
        })
        .unwrap_or_default()
}

/// Matcher union: {"errorType":"ResourceNotFoundException"}
pub(crate) fn match_get_replication_set_1cce2c05524fb92d4(
    _result: ::std::result::Result<
        &crate::operation::get_replication_set::GetReplicationSetOutput,
        &crate::operation::get_replication_set::GetReplicationSetError,
    >,
) -> bool {
    if let ::std::result::Result::Err(err) = _result {
        if let ::std::option::Option::Some(code) = ::aws_smithy_types::error::metadata::ProvideErrorMetadata::code(err) {
            return code == "ResourceNotFoundException";
        }
    }
    false
}

/// Matcher union: {"output":{"path":"replicationSet.status","expected":"DELETING","comparator":"stringEquals"}}
pub(crate) fn match_get_replication_set_efd9ba6bffd3a1b10(
    _result: ::std::result::Result<
        &crate::operation::get_replication_set::GetReplicationSetOutput,
        &crate::operation::get_replication_set::GetReplicationSetError,
    >,
) -> bool {
    fn path_traversal<'a>(
        _output: &'a crate::operation::get_replication_set::GetReplicationSetOutput,
    ) -> ::std::option::Option<&'a crate::types::ReplicationSetStatus> {
        let _fld_1 = _output.replication_set.as_ref()?;
        let _fld_2 = &_fld_1.status;
        ::std::option::Option::Some(_fld_2)
    }
    _result
        .as_ref()
        .ok()
        .and_then(|output| path_traversal(output))
        .map(|value| {
            let _tmp_2 = value.as_str();
            let right = "DELETING";
            let _cmp_1 = _tmp_2 == right;
            _cmp_1
        })
        .unwrap_or_default()
}
