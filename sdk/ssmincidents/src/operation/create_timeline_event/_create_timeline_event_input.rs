// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CreateTimelineEventInput {
    /// <p>A token that ensures that a client calls the action only once with the specified details.</p>
    pub client_token: ::std::option::Option<::std::string::String>,
    /// <p>The Amazon Resource Name (ARN) of the incident record that the action adds the incident to.</p>
    pub incident_record_arn: ::std::string::String,
    /// <p>The time that the event occurred.</p>
    pub event_time: ::aws_smithy_types::DateTime,
    /// <p>The type of event. You can create timeline events of type <code>Custom Event</code>.</p>
    pub event_type: ::std::string::String,
    /// <p>A short description of the event.</p>
    pub event_data: ::std::string::String,
    /// <p>Adds one or more references to the <code>TimelineEvent</code>. A reference is an Amazon Web Services resource involved or associated with the incident. To specify a reference, enter its Amazon Resource Name (ARN). You can also specify a related item associated with a resource. For example, to specify an Amazon DynamoDB (DynamoDB) table as a resource, use the table's ARN. You can also specify an Amazon CloudWatch metric associated with the DynamoDB table as a related item.</p>
    pub event_references: ::std::option::Option<::std::vec::Vec<crate::types::EventReference>>,
}
impl CreateTimelineEventInput {
    /// <p>A token that ensures that a client calls the action only once with the specified details.</p>
    pub fn client_token(&self) -> ::std::option::Option<&str> {
        self.client_token.as_deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the incident record that the action adds the incident to.</p>
    pub fn incident_record_arn(&self) -> &str {
        use std::ops::Deref;
        self.incident_record_arn.deref()
    }
    /// <p>The time that the event occurred.</p>
    pub fn event_time(&self) -> &::aws_smithy_types::DateTime {
        &self.event_time
    }
    /// <p>The type of event. You can create timeline events of type <code>Custom Event</code>.</p>
    pub fn event_type(&self) -> &str {
        use std::ops::Deref;
        self.event_type.deref()
    }
    /// <p>A short description of the event.</p>
    pub fn event_data(&self) -> &str {
        use std::ops::Deref;
        self.event_data.deref()
    }
    /// <p>Adds one or more references to the <code>TimelineEvent</code>. A reference is an Amazon Web Services resource involved or associated with the incident. To specify a reference, enter its Amazon Resource Name (ARN). You can also specify a related item associated with a resource. For example, to specify an Amazon DynamoDB (DynamoDB) table as a resource, use the table's ARN. You can also specify an Amazon CloudWatch metric associated with the DynamoDB table as a related item.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.event_references.is_none()`.
    pub fn event_references(&self) -> &[crate::types::EventReference] {
        self.event_references.as_deref().unwrap_or_default()
    }
}
impl CreateTimelineEventInput {
    /// Creates a new builder-style object to manufacture [`CreateTimelineEventInput`](crate::operation::create_timeline_event::CreateTimelineEventInput).
    pub fn builder() -> crate::operation::create_timeline_event::builders::CreateTimelineEventInputBuilder {
        crate::operation::create_timeline_event::builders::CreateTimelineEventInputBuilder::default()
    }
}

/// A builder for [`CreateTimelineEventInput`](crate::operation::create_timeline_event::CreateTimelineEventInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct CreateTimelineEventInputBuilder {
    pub(crate) client_token: ::std::option::Option<::std::string::String>,
    pub(crate) incident_record_arn: ::std::option::Option<::std::string::String>,
    pub(crate) event_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) event_type: ::std::option::Option<::std::string::String>,
    pub(crate) event_data: ::std::option::Option<::std::string::String>,
    pub(crate) event_references: ::std::option::Option<::std::vec::Vec<crate::types::EventReference>>,
}
impl CreateTimelineEventInputBuilder {
    /// <p>A token that ensures that a client calls the action only once with the specified details.</p>
    pub fn client_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.client_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A token that ensures that a client calls the action only once with the specified details.</p>
    pub fn set_client_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.client_token = input;
        self
    }
    /// <p>A token that ensures that a client calls the action only once with the specified details.</p>
    pub fn get_client_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.client_token
    }
    /// <p>The Amazon Resource Name (ARN) of the incident record that the action adds the incident to.</p>
    /// This field is required.
    pub fn incident_record_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.incident_record_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the incident record that the action adds the incident to.</p>
    pub fn set_incident_record_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.incident_record_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the incident record that the action adds the incident to.</p>
    pub fn get_incident_record_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.incident_record_arn
    }
    /// <p>The time that the event occurred.</p>
    /// This field is required.
    pub fn event_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.event_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The time that the event occurred.</p>
    pub fn set_event_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.event_time = input;
        self
    }
    /// <p>The time that the event occurred.</p>
    pub fn get_event_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.event_time
    }
    /// <p>The type of event. You can create timeline events of type <code>Custom Event</code>.</p>
    /// This field is required.
    pub fn event_type(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.event_type = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The type of event. You can create timeline events of type <code>Custom Event</code>.</p>
    pub fn set_event_type(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.event_type = input;
        self
    }
    /// <p>The type of event. You can create timeline events of type <code>Custom Event</code>.</p>
    pub fn get_event_type(&self) -> &::std::option::Option<::std::string::String> {
        &self.event_type
    }
    /// <p>A short description of the event.</p>
    /// This field is required.
    pub fn event_data(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.event_data = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A short description of the event.</p>
    pub fn set_event_data(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.event_data = input;
        self
    }
    /// <p>A short description of the event.</p>
    pub fn get_event_data(&self) -> &::std::option::Option<::std::string::String> {
        &self.event_data
    }
    /// Appends an item to `event_references`.
    ///
    /// To override the contents of this collection use [`set_event_references`](Self::set_event_references).
    ///
    /// <p>Adds one or more references to the <code>TimelineEvent</code>. A reference is an Amazon Web Services resource involved or associated with the incident. To specify a reference, enter its Amazon Resource Name (ARN). You can also specify a related item associated with a resource. For example, to specify an Amazon DynamoDB (DynamoDB) table as a resource, use the table's ARN. You can also specify an Amazon CloudWatch metric associated with the DynamoDB table as a related item.</p>
    pub fn event_references(mut self, input: crate::types::EventReference) -> Self {
        let mut v = self.event_references.unwrap_or_default();
        v.push(input);
        self.event_references = ::std::option::Option::Some(v);
        self
    }
    /// <p>Adds one or more references to the <code>TimelineEvent</code>. A reference is an Amazon Web Services resource involved or associated with the incident. To specify a reference, enter its Amazon Resource Name (ARN). You can also specify a related item associated with a resource. For example, to specify an Amazon DynamoDB (DynamoDB) table as a resource, use the table's ARN. You can also specify an Amazon CloudWatch metric associated with the DynamoDB table as a related item.</p>
    pub fn set_event_references(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::EventReference>>) -> Self {
        self.event_references = input;
        self
    }
    /// <p>Adds one or more references to the <code>TimelineEvent</code>. A reference is an Amazon Web Services resource involved or associated with the incident. To specify a reference, enter its Amazon Resource Name (ARN). You can also specify a related item associated with a resource. For example, to specify an Amazon DynamoDB (DynamoDB) table as a resource, use the table's ARN. You can also specify an Amazon CloudWatch metric associated with the DynamoDB table as a related item.</p>
    pub fn get_event_references(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::EventReference>> {
        &self.event_references
    }
    /// Consumes the builder and constructs a [`CreateTimelineEventInput`](crate::operation::create_timeline_event::CreateTimelineEventInput).
    /// This method will fail if any of the following fields are not set:
    /// - [`incident_record_arn`](crate::operation::create_timeline_event::builders::CreateTimelineEventInputBuilder::incident_record_arn)
    /// - [`event_time`](crate::operation::create_timeline_event::builders::CreateTimelineEventInputBuilder::event_time)
    /// - [`event_type`](crate::operation::create_timeline_event::builders::CreateTimelineEventInputBuilder::event_type)
    /// - [`event_data`](crate::operation::create_timeline_event::builders::CreateTimelineEventInputBuilder::event_data)
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::create_timeline_event::CreateTimelineEventInput, ::aws_smithy_http::operation::error::BuildError>
    {
        ::std::result::Result::Ok(crate::operation::create_timeline_event::CreateTimelineEventInput {
            client_token: self.client_token,
            incident_record_arn: self.incident_record_arn.ok_or_else(|| {
                ::aws_smithy_http::operation::error::BuildError::missing_field(
                    "incident_record_arn",
                    "incident_record_arn was not specified but it is required when building CreateTimelineEventInput",
                )
            })?,
            event_time: self.event_time.ok_or_else(|| {
                ::aws_smithy_http::operation::error::BuildError::missing_field(
                    "event_time",
                    "event_time was not specified but it is required when building CreateTimelineEventInput",
                )
            })?,
            event_type: self.event_type.ok_or_else(|| {
                ::aws_smithy_http::operation::error::BuildError::missing_field(
                    "event_type",
                    "event_type was not specified but it is required when building CreateTimelineEventInput",
                )
            })?,
            event_data: self.event_data.ok_or_else(|| {
                ::aws_smithy_http::operation::error::BuildError::missing_field(
                    "event_data",
                    "event_data was not specified but it is required when building CreateTimelineEventInput",
                )
            })?,
            event_references: self.event_references,
        })
    }
}
