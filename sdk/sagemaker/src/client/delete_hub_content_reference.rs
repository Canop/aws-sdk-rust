// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteHubContentReference`](crate::operation::delete_hub_content_reference::builders::DeleteHubContentReferenceFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`hub_name(impl Into<String>)`](crate::operation::delete_hub_content_reference::builders::DeleteHubContentReferenceFluentBuilder::hub_name) / [`set_hub_name(Option<String>)`](crate::operation::delete_hub_content_reference::builders::DeleteHubContentReferenceFluentBuilder::set_hub_name):<br>required: **true**<br><p>The name of the hub to delete the hub content reference from.</p><br>
    ///   - [`hub_content_type(HubContentType)`](crate::operation::delete_hub_content_reference::builders::DeleteHubContentReferenceFluentBuilder::hub_content_type) / [`set_hub_content_type(Option<HubContentType>)`](crate::operation::delete_hub_content_reference::builders::DeleteHubContentReferenceFluentBuilder::set_hub_content_type):<br>required: **true**<br><p>The type of hub content to delete.</p><br>
    ///   - [`hub_content_name(impl Into<String>)`](crate::operation::delete_hub_content_reference::builders::DeleteHubContentReferenceFluentBuilder::hub_content_name) / [`set_hub_content_name(Option<String>)`](crate::operation::delete_hub_content_reference::builders::DeleteHubContentReferenceFluentBuilder::set_hub_content_name):<br>required: **true**<br><p>The name of the hub content to delete.</p><br>
    /// - On success, responds with [`DeleteHubContentReferenceOutput`](crate::operation::delete_hub_content_reference::DeleteHubContentReferenceOutput)
    /// - On failure, responds with [`SdkError<DeleteHubContentReferenceError>`](crate::operation::delete_hub_content_reference::DeleteHubContentReferenceError)
    pub fn delete_hub_content_reference(&self) -> crate::operation::delete_hub_content_reference::builders::DeleteHubContentReferenceFluentBuilder {
        crate::operation::delete_hub_content_reference::builders::DeleteHubContentReferenceFluentBuilder::new(self.handle.clone())
    }
}
