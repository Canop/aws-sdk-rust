// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains information about attribute-based access control (ABAC) for a training job.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct SessionChainingConfig {
    /// <p>Set to <code>True</code> to allow SageMaker to extract session tags from a training job creation role and reuse these tags when assuming the training job execution role.</p>
    pub enable_session_tag_chaining: ::std::option::Option<bool>,
}
impl SessionChainingConfig {
    /// <p>Set to <code>True</code> to allow SageMaker to extract session tags from a training job creation role and reuse these tags when assuming the training job execution role.</p>
    pub fn enable_session_tag_chaining(&self) -> ::std::option::Option<bool> {
        self.enable_session_tag_chaining
    }
}
impl SessionChainingConfig {
    /// Creates a new builder-style object to manufacture [`SessionChainingConfig`](crate::types::SessionChainingConfig).
    pub fn builder() -> crate::types::builders::SessionChainingConfigBuilder {
        crate::types::builders::SessionChainingConfigBuilder::default()
    }
}

/// A builder for [`SessionChainingConfig`](crate::types::SessionChainingConfig).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct SessionChainingConfigBuilder {
    pub(crate) enable_session_tag_chaining: ::std::option::Option<bool>,
}
impl SessionChainingConfigBuilder {
    /// <p>Set to <code>True</code> to allow SageMaker to extract session tags from a training job creation role and reuse these tags when assuming the training job execution role.</p>
    pub fn enable_session_tag_chaining(mut self, input: bool) -> Self {
        self.enable_session_tag_chaining = ::std::option::Option::Some(input);
        self
    }
    /// <p>Set to <code>True</code> to allow SageMaker to extract session tags from a training job creation role and reuse these tags when assuming the training job execution role.</p>
    pub fn set_enable_session_tag_chaining(mut self, input: ::std::option::Option<bool>) -> Self {
        self.enable_session_tag_chaining = input;
        self
    }
    /// <p>Set to <code>True</code> to allow SageMaker to extract session tags from a training job creation role and reuse these tags when assuming the training job execution role.</p>
    pub fn get_enable_session_tag_chaining(&self) -> &::std::option::Option<bool> {
        &self.enable_session_tag_chaining
    }
    /// Consumes the builder and constructs a [`SessionChainingConfig`](crate::types::SessionChainingConfig).
    pub fn build(self) -> crate::types::SessionChainingConfig {
        crate::types::SessionChainingConfig {
            enable_session_tag_chaining: self.enable_session_tag_chaining,
        }
    }
}
