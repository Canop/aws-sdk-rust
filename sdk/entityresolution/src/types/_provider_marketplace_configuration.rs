// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The identifiers of the provider service, from Data Exchange.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ProviderMarketplaceConfiguration {
    /// <p>The dataset ID on Data Exchange.</p>
    pub data_set_id: ::std::option::Option<::std::string::String>,
    /// <p>The revision ID on Data Exchange.</p>
    pub revision_id: ::std::option::Option<::std::string::String>,
    /// <p>The asset ID on Data Exchange.</p>
    pub asset_id: ::std::option::Option<::std::string::String>,
    /// <p>The listing ID on Data Exchange.</p>
    pub listing_id: ::std::option::Option<::std::string::String>,
}
impl ProviderMarketplaceConfiguration {
    /// <p>The dataset ID on Data Exchange.</p>
    pub fn data_set_id(&self) -> ::std::option::Option<&str> {
        self.data_set_id.as_deref()
    }
    /// <p>The revision ID on Data Exchange.</p>
    pub fn revision_id(&self) -> ::std::option::Option<&str> {
        self.revision_id.as_deref()
    }
    /// <p>The asset ID on Data Exchange.</p>
    pub fn asset_id(&self) -> ::std::option::Option<&str> {
        self.asset_id.as_deref()
    }
    /// <p>The listing ID on Data Exchange.</p>
    pub fn listing_id(&self) -> ::std::option::Option<&str> {
        self.listing_id.as_deref()
    }
}
impl ProviderMarketplaceConfiguration {
    /// Creates a new builder-style object to manufacture [`ProviderMarketplaceConfiguration`](crate::types::ProviderMarketplaceConfiguration).
    pub fn builder() -> crate::types::builders::ProviderMarketplaceConfigurationBuilder {
        crate::types::builders::ProviderMarketplaceConfigurationBuilder::default()
    }
}

/// A builder for [`ProviderMarketplaceConfiguration`](crate::types::ProviderMarketplaceConfiguration).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ProviderMarketplaceConfigurationBuilder {
    pub(crate) data_set_id: ::std::option::Option<::std::string::String>,
    pub(crate) revision_id: ::std::option::Option<::std::string::String>,
    pub(crate) asset_id: ::std::option::Option<::std::string::String>,
    pub(crate) listing_id: ::std::option::Option<::std::string::String>,
}
impl ProviderMarketplaceConfigurationBuilder {
    /// <p>The dataset ID on Data Exchange.</p>
    pub fn data_set_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.data_set_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The dataset ID on Data Exchange.</p>
    pub fn set_data_set_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.data_set_id = input;
        self
    }
    /// <p>The dataset ID on Data Exchange.</p>
    pub fn get_data_set_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.data_set_id
    }
    /// <p>The revision ID on Data Exchange.</p>
    pub fn revision_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.revision_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The revision ID on Data Exchange.</p>
    pub fn set_revision_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.revision_id = input;
        self
    }
    /// <p>The revision ID on Data Exchange.</p>
    pub fn get_revision_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.revision_id
    }
    /// <p>The asset ID on Data Exchange.</p>
    pub fn asset_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.asset_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The asset ID on Data Exchange.</p>
    pub fn set_asset_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.asset_id = input;
        self
    }
    /// <p>The asset ID on Data Exchange.</p>
    pub fn get_asset_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.asset_id
    }
    /// <p>The listing ID on Data Exchange.</p>
    pub fn listing_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.listing_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The listing ID on Data Exchange.</p>
    pub fn set_listing_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.listing_id = input;
        self
    }
    /// <p>The listing ID on Data Exchange.</p>
    pub fn get_listing_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.listing_id
    }
    /// Consumes the builder and constructs a [`ProviderMarketplaceConfiguration`](crate::types::ProviderMarketplaceConfiguration).
    pub fn build(self) -> crate::types::ProviderMarketplaceConfiguration {
        crate::types::ProviderMarketplaceConfiguration {
            data_set_id: self.data_set_id,
            revision_id: self.revision_id,
            asset_id: self.asset_id,
            listing_id: self.listing_id,
        }
    }
}
