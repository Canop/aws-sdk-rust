// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub use crate::operation::describe_featured_results_set::_describe_featured_results_set_output::DescribeFeaturedResultsSetOutputBuilder;

pub use crate::operation::describe_featured_results_set::_describe_featured_results_set_input::DescribeFeaturedResultsSetInputBuilder;

/// Fluent builder constructing a request to `DescribeFeaturedResultsSet`.
/// 
/// <p>Gets information about a set of featured results. Features results are placed above all other results for certain queries. If there's an exact match of a query, then one or more specific documents are featured in the search results.</p>
#[derive(std::clone::Clone, std::fmt::Debug)]
pub struct DescribeFeaturedResultsSetFluentBuilder {
                handle: std::sync::Arc<crate::client::Handle>,
                inner: crate::operation::describe_featured_results_set::builders::DescribeFeaturedResultsSetInputBuilder
            }
impl DescribeFeaturedResultsSetFluentBuilder  {
    /// Creates a new `DescribeFeaturedResultsSet`.
                    pub(crate) fn new(handle: std::sync::Arc<crate::client::Handle>) -> Self {
                        Self { handle, inner: Default::default() }
                    }
    
                    /// Consume this builder, creating a customizable operation that can be modified before being
                    /// sent. The operation's inner [http::Request] can be modified as well.
                    pub async fn customize(self) -> std::result::Result<
                        crate::client::customize::CustomizableOperation<crate::operation::describe_featured_results_set::DescribeFeaturedResultsSet, aws_http::retry::AwsResponseRetryClassifier,>,
                        aws_smithy_http::result::SdkError<crate::operation::describe_featured_results_set::DescribeFeaturedResultsSetError>
                    >  {
                        let handle = self.handle.clone();
                        let operation = self.inner.build().map_err(aws_smithy_http::result::SdkError::construction_failure)?
                            .make_operation(&handle.conf)
                            .await
                            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
                        Ok(crate::client::customize::CustomizableOperation { handle, operation })
                    }
    
                    /// Sends the request and returns the response.
                    ///
                    /// If an error occurs, an `SdkError` will be returned with additional details that
                    /// can be matched against.
                    ///
                    /// By default, any retryable failures will be retried twice. Retry behavior
                    /// is configurable with the [RetryConfig](aws_smithy_types::retry::RetryConfig), which can be
                    /// set when configuring the client.
                    pub async fn send(self) -> std::result::Result<crate::operation::describe_featured_results_set::DescribeFeaturedResultsSetOutput, aws_smithy_http::result::SdkError<crate::operation::describe_featured_results_set::DescribeFeaturedResultsSetError>>
                     {
                        let op = self.inner.build().map_err(aws_smithy_http::result::SdkError::construction_failure)?
                            .make_operation(&self.handle.conf)
                            .await
                            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
                        self.handle.client.call(op).await
                    }
    /// <p>The identifier of the index used for featuring results.</p>
    pub fn index_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.index_id(input.into());
        self
    }
    /// <p>The identifier of the index used for featuring results.</p>
    pub fn set_index_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.inner = self.inner.set_index_id(input);
        self
    }
    /// <p>The identifier of the set of featured results that you want to get information on.</p>
    pub fn featured_results_set_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.featured_results_set_id(input.into());
        self
    }
    /// <p>The identifier of the set of featured results that you want to get information on.</p>
    pub fn set_featured_results_set_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.inner = self.inner.set_featured_results_set_id(input);
        self
    }
}

