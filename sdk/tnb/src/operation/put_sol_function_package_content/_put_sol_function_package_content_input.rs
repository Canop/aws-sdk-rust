// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct PutSolFunctionPackageContentInput {
    /// <p>Function package ID.</p>
    #[doc(hidden)]
    pub vnf_pkg_id: std::option::Option<std::string::String>,
    /// <p>Function package content type.</p>
    #[doc(hidden)]
    pub content_type: std::option::Option<crate::types::PackageContentType>,
    /// <p>Function package file.</p>
    #[doc(hidden)]
    pub file: std::option::Option<aws_smithy_types::Blob>,
}
impl PutSolFunctionPackageContentInput {
    /// <p>Function package ID.</p>
    pub fn vnf_pkg_id(&self) -> std::option::Option<&str> {
        self.vnf_pkg_id.as_deref()
    }
    /// <p>Function package content type.</p>
    pub fn content_type(&self) -> std::option::Option<&crate::types::PackageContentType> {
        self.content_type.as_ref()
    }
    /// <p>Function package file.</p>
    pub fn file(&self) -> std::option::Option<&aws_smithy_types::Blob> {
        self.file.as_ref()
    }
}
impl PutSolFunctionPackageContentInput {
    /// Creates a new builder-style object to manufacture [`PutSolFunctionPackageContentInput`](crate::operation::put_sol_function_package_content::PutSolFunctionPackageContentInput).
    pub fn builder() -> crate::operation::put_sol_function_package_content::builders::PutSolFunctionPackageContentInputBuilder{
        crate::operation::put_sol_function_package_content::builders::PutSolFunctionPackageContentInputBuilder::default()
    }
}

/// A builder for [`PutSolFunctionPackageContentInput`](crate::operation::put_sol_function_package_content::PutSolFunctionPackageContentInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct PutSolFunctionPackageContentInputBuilder {
    pub(crate) vnf_pkg_id: std::option::Option<std::string::String>,
    pub(crate) content_type: std::option::Option<crate::types::PackageContentType>,
    pub(crate) file: std::option::Option<aws_smithy_types::Blob>,
}
impl PutSolFunctionPackageContentInputBuilder {
    /// <p>Function package ID.</p>
    pub fn vnf_pkg_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.vnf_pkg_id = Some(input.into());
        self
    }
    /// <p>Function package ID.</p>
    pub fn set_vnf_pkg_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.vnf_pkg_id = input;
        self
    }
    /// <p>Function package content type.</p>
    pub fn content_type(mut self, input: crate::types::PackageContentType) -> Self {
        self.content_type = Some(input);
        self
    }
    /// <p>Function package content type.</p>
    pub fn set_content_type(
        mut self,
        input: std::option::Option<crate::types::PackageContentType>,
    ) -> Self {
        self.content_type = input;
        self
    }
    /// <p>Function package file.</p>
    pub fn file(mut self, input: aws_smithy_types::Blob) -> Self {
        self.file = Some(input);
        self
    }
    /// <p>Function package file.</p>
    pub fn set_file(mut self, input: std::option::Option<aws_smithy_types::Blob>) -> Self {
        self.file = input;
        self
    }
    /// Consumes the builder and constructs a [`PutSolFunctionPackageContentInput`](crate::operation::put_sol_function_package_content::PutSolFunctionPackageContentInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::put_sol_function_package_content::PutSolFunctionPackageContentInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::put_sol_function_package_content::PutSolFunctionPackageContentInput {
                vnf_pkg_id: self.vnf_pkg_id,
                content_type: self.content_type,
                file: self.file,
            },
        )
    }
}
