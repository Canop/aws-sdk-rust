// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub use crate::operation::get_savings_plan_purchase_recommendation_details::_get_savings_plan_purchase_recommendation_details_output::GetSavingsPlanPurchaseRecommendationDetailsOutputBuilder;

pub use crate::operation::get_savings_plan_purchase_recommendation_details::_get_savings_plan_purchase_recommendation_details_input::GetSavingsPlanPurchaseRecommendationDetailsInputBuilder;

impl GetSavingsPlanPurchaseRecommendationDetailsInputBuilder {
    /// Sends a request with this input using the given client.
                    pub async fn send_with(
                        self,
                        client: &crate::Client
                    ) -> ::std::result::Result<
                        crate::operation::get_savings_plan_purchase_recommendation_details::GetSavingsPlanPurchaseRecommendationDetailsOutput,
                        ::aws_smithy_http::result::SdkError<
                            crate::operation::get_savings_plan_purchase_recommendation_details::GetSavingsPlanPurchaseRecommendationDetailsError,
                            ::aws_smithy_http::operation::Response
                        >
    >{
        let mut fluent_builder = client.get_savings_plan_purchase_recommendation_details();
        fluent_builder.inner = self;
        fluent_builder.send().await
    }
}
/// Fluent builder constructing a request to `GetSavingsPlanPurchaseRecommendationDetails`.
///
/// <p>Retrieves the details for a Savings Plan recommendation. These details include the hourly data-points that construct the new cost, coverage, and utilization charts.</p>
#[derive(::std::clone::Clone, ::std::fmt::Debug)]
pub struct GetSavingsPlanPurchaseRecommendationDetailsFluentBuilder {
    handle: ::std::sync::Arc<crate::client::Handle>,
                    inner: crate::operation::get_savings_plan_purchase_recommendation_details::builders::GetSavingsPlanPurchaseRecommendationDetailsInputBuilder,
}
impl GetSavingsPlanPurchaseRecommendationDetailsFluentBuilder {
    /// Creates a new `GetSavingsPlanPurchaseRecommendationDetails`.
    pub(crate) fn new(handle: ::std::sync::Arc<crate::client::Handle>) -> Self {
        Self {
            handle,
            inner: ::std::default::Default::default(),
        }
    }
    /// Access the GetSavingsPlanPurchaseRecommendationDetails as a reference.
    pub fn as_input(&self) -> &crate::operation::get_savings_plan_purchase_recommendation_details::builders::GetSavingsPlanPurchaseRecommendationDetailsInputBuilder{
        &self.inner
    }
    // This function will go away in the near future. Do not rely on it.
    #[doc(hidden)]
                        pub async fn customize_middleware(self) -> ::std::result::Result<
                            crate::client::customize::CustomizableOperation<crate::operation::get_savings_plan_purchase_recommendation_details::GetSavingsPlanPurchaseRecommendationDetails, ::aws_http::retry::AwsResponseRetryClassifier,>,
                            ::aws_smithy_http::result::SdkError<crate::operation::get_savings_plan_purchase_recommendation_details::GetSavingsPlanPurchaseRecommendationDetailsError>
    >{
        let handle = self.handle.clone();
        let operation = self
            .inner
            .build()
            .map_err(::aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&handle.conf)
            .await
            .map_err(::aws_smithy_http::result::SdkError::construction_failure)?;
        ::std::result::Result::Ok(crate::client::customize::CustomizableOperation {
            handle,
            operation,
        })
    }

    // This function will go away in the near future. Do not rely on it.
    #[doc(hidden)]
                        pub async fn send_middleware(self) -> ::std::result::Result<crate::operation::get_savings_plan_purchase_recommendation_details::GetSavingsPlanPurchaseRecommendationDetailsOutput, ::aws_smithy_http::result::SdkError<crate::operation::get_savings_plan_purchase_recommendation_details::GetSavingsPlanPurchaseRecommendationDetailsError>>
                         {
        let op = self
            .inner
            .build()
            .map_err(::aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&self.handle.conf)
            .await
            .map_err(::aws_smithy_http::result::SdkError::construction_failure)?;
        self.handle.client.call(op).await
    }
    /// Sends the request and returns the response.
    ///
    /// If an error occurs, an `SdkError` will be returned with additional details that
    /// can be matched against.
    ///
    /// By default, any retryable failures will be retried twice. Retry behavior
    /// is configurable with the [RetryConfig](aws_smithy_types::retry::RetryConfig), which can be
    /// set when configuring the client.
                            pub async fn send(self) -> ::std::result::Result<crate::operation::get_savings_plan_purchase_recommendation_details::GetSavingsPlanPurchaseRecommendationDetailsOutput, ::aws_smithy_http::result::SdkError<crate::operation::get_savings_plan_purchase_recommendation_details::GetSavingsPlanPurchaseRecommendationDetailsError>>
                             {
        self.send_middleware().await
    }

    /// Consumes this builder, creating a customizable operation that can be modified before being
    /// sent. The operation's inner [http::Request] can be modified as well.
                            pub async fn customize(self) -> ::std::result::Result<
                                crate::client::customize::CustomizableOperation<crate::operation::get_savings_plan_purchase_recommendation_details::GetSavingsPlanPurchaseRecommendationDetails, ::aws_http::retry::AwsResponseRetryClassifier,>,
                                ::aws_smithy_http::result::SdkError<crate::operation::get_savings_plan_purchase_recommendation_details::GetSavingsPlanPurchaseRecommendationDetailsError>
    >{
        self.customize_middleware().await
    }
    /// <p>The ID that is associated with the Savings Plan recommendation.</p>
    pub fn recommendation_detail_id(
        mut self,
        input: impl ::std::convert::Into<::std::string::String>,
    ) -> Self {
        self.inner = self.inner.recommendation_detail_id(input.into());
        self
    }
    /// <p>The ID that is associated with the Savings Plan recommendation.</p>
    pub fn set_recommendation_detail_id(
        mut self,
        input: ::std::option::Option<::std::string::String>,
    ) -> Self {
        self.inner = self.inner.set_recommendation_detail_id(input);
        self
    }
    /// <p>The ID that is associated with the Savings Plan recommendation.</p>
    pub fn get_recommendation_detail_id(&self) -> &::std::option::Option<::std::string::String> {
        self.inner.get_recommendation_detail_id()
    }
}
