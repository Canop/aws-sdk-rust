// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Represents the input of a PutRuleGroupsNamespace operation.
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct PutRuleGroupsNamespaceInput {
    /// The ID of the workspace in which to update the rule group namespace.
    pub workspace_id: ::std::string::String,
    /// The rule groups namespace name.
    pub name: ::std::string::String,
    /// The namespace data that define the rule groups.
    pub data: ::aws_smithy_types::Blob,
    /// Optional, unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.
    pub client_token: ::std::option::Option<::std::string::String>,
}
impl PutRuleGroupsNamespaceInput {
    /// The ID of the workspace in which to update the rule group namespace.
    pub fn workspace_id(&self) -> &str {
        use std::ops::Deref;
        self.workspace_id.deref()
    }
    /// The rule groups namespace name.
    pub fn name(&self) -> &str {
        use std::ops::Deref;
        self.name.deref()
    }
    /// The namespace data that define the rule groups.
    pub fn data(&self) -> &::aws_smithy_types::Blob {
        &self.data
    }
    /// Optional, unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.
    pub fn client_token(&self) -> ::std::option::Option<&str> {
        self.client_token.as_deref()
    }
}
impl PutRuleGroupsNamespaceInput {
    /// Creates a new builder-style object to manufacture [`PutRuleGroupsNamespaceInput`](crate::operation::put_rule_groups_namespace::PutRuleGroupsNamespaceInput).
    pub fn builder() -> crate::operation::put_rule_groups_namespace::builders::PutRuleGroupsNamespaceInputBuilder {
        crate::operation::put_rule_groups_namespace::builders::PutRuleGroupsNamespaceInputBuilder::default()
    }
}

/// A builder for [`PutRuleGroupsNamespaceInput`](crate::operation::put_rule_groups_namespace::PutRuleGroupsNamespaceInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct PutRuleGroupsNamespaceInputBuilder {
    pub(crate) workspace_id: ::std::option::Option<::std::string::String>,
    pub(crate) name: ::std::option::Option<::std::string::String>,
    pub(crate) data: ::std::option::Option<::aws_smithy_types::Blob>,
    pub(crate) client_token: ::std::option::Option<::std::string::String>,
}
impl PutRuleGroupsNamespaceInputBuilder {
    /// The ID of the workspace in which to update the rule group namespace.
    /// This field is required.
    pub fn workspace_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.workspace_id = ::std::option::Option::Some(input.into());
        self
    }
    /// The ID of the workspace in which to update the rule group namespace.
    pub fn set_workspace_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.workspace_id = input;
        self
    }
    /// The ID of the workspace in which to update the rule group namespace.
    pub fn get_workspace_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.workspace_id
    }
    /// The rule groups namespace name.
    /// This field is required.
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    /// The rule groups namespace name.
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// The rule groups namespace name.
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// The namespace data that define the rule groups.
    /// This field is required.
    pub fn data(mut self, input: ::aws_smithy_types::Blob) -> Self {
        self.data = ::std::option::Option::Some(input);
        self
    }
    /// The namespace data that define the rule groups.
    pub fn set_data(mut self, input: ::std::option::Option<::aws_smithy_types::Blob>) -> Self {
        self.data = input;
        self
    }
    /// The namespace data that define the rule groups.
    pub fn get_data(&self) -> &::std::option::Option<::aws_smithy_types::Blob> {
        &self.data
    }
    /// Optional, unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.
    pub fn client_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.client_token = ::std::option::Option::Some(input.into());
        self
    }
    /// Optional, unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.
    pub fn set_client_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.client_token = input;
        self
    }
    /// Optional, unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.
    pub fn get_client_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.client_token
    }
    /// Consumes the builder and constructs a [`PutRuleGroupsNamespaceInput`](crate::operation::put_rule_groups_namespace::PutRuleGroupsNamespaceInput).
    /// This method will fail if any of the following fields are not set:
    /// - [`workspace_id`](crate::operation::put_rule_groups_namespace::builders::PutRuleGroupsNamespaceInputBuilder::workspace_id)
    /// - [`name`](crate::operation::put_rule_groups_namespace::builders::PutRuleGroupsNamespaceInputBuilder::name)
    /// - [`data`](crate::operation::put_rule_groups_namespace::builders::PutRuleGroupsNamespaceInputBuilder::data)
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::put_rule_groups_namespace::PutRuleGroupsNamespaceInput,
        ::aws_smithy_http::operation::error::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::put_rule_groups_namespace::PutRuleGroupsNamespaceInput {
            workspace_id: self.workspace_id.ok_or_else(|| {
                ::aws_smithy_http::operation::error::BuildError::missing_field(
                    "workspace_id",
                    "workspace_id was not specified but it is required when building PutRuleGroupsNamespaceInput",
                )
            })?,
            name: self.name.ok_or_else(|| {
                ::aws_smithy_http::operation::error::BuildError::missing_field(
                    "name",
                    "name was not specified but it is required when building PutRuleGroupsNamespaceInput",
                )
            })?,
            data: self.data.ok_or_else(|| {
                ::aws_smithy_http::operation::error::BuildError::missing_field(
                    "data",
                    "data was not specified but it is required when building PutRuleGroupsNamespaceInput",
                )
            })?,
            client_token: self.client_token,
        })
    }
}
