// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetChallengePassword`](crate::operation::get_challenge_password::builders::GetChallengePasswordFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`challenge_arn(impl Into<String>)`](crate::operation::get_challenge_password::builders::GetChallengePasswordFluentBuilder::challenge_arn) / [`set_challenge_arn(Option<String>)`](crate::operation::get_challenge_password::builders::GetChallengePasswordFluentBuilder::set_challenge_arn):<br>required: **true**<br><p>The Amazon Resource Name (ARN) of the challenge.</p><br>
    /// - On success, responds with [`GetChallengePasswordOutput`](crate::operation::get_challenge_password::GetChallengePasswordOutput) with field(s):
    ///   - [`password(Option<String>)`](crate::operation::get_challenge_password::GetChallengePasswordOutput::password): <p>The SCEP challenge password.</p>
    /// - On failure, responds with [`SdkError<GetChallengePasswordError>`](crate::operation::get_challenge_password::GetChallengePasswordError)
    pub fn get_challenge_password(&self) -> crate::operation::get_challenge_password::builders::GetChallengePasswordFluentBuilder {
        crate::operation::get_challenge_password::builders::GetChallengePasswordFluentBuilder::new(self.handle.clone())
    }
}
