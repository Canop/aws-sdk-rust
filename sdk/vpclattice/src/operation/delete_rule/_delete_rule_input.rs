// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DeleteRuleInput {
    /// <p>The ID or Amazon Resource Name (ARN) of the service.</p>
    pub service_identifier: ::std::string::String,
    /// <p>The ID or Amazon Resource Name (ARN) of the listener.</p>
    pub listener_identifier: ::std::string::String,
    /// <p>The ID or Amazon Resource Name (ARN) of the rule.</p>
    pub rule_identifier: ::std::string::String,
}
impl DeleteRuleInput {
    /// <p>The ID or Amazon Resource Name (ARN) of the service.</p>
    pub fn service_identifier(&self) -> &str {
        use std::ops::Deref;
        self.service_identifier.deref()
    }
    /// <p>The ID or Amazon Resource Name (ARN) of the listener.</p>
    pub fn listener_identifier(&self) -> &str {
        use std::ops::Deref;
        self.listener_identifier.deref()
    }
    /// <p>The ID or Amazon Resource Name (ARN) of the rule.</p>
    pub fn rule_identifier(&self) -> &str {
        use std::ops::Deref;
        self.rule_identifier.deref()
    }
}
impl DeleteRuleInput {
    /// Creates a new builder-style object to manufacture [`DeleteRuleInput`](crate::operation::delete_rule::DeleteRuleInput).
    pub fn builder() -> crate::operation::delete_rule::builders::DeleteRuleInputBuilder {
        crate::operation::delete_rule::builders::DeleteRuleInputBuilder::default()
    }
}

/// A builder for [`DeleteRuleInput`](crate::operation::delete_rule::DeleteRuleInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DeleteRuleInputBuilder {
    pub(crate) service_identifier: ::std::option::Option<::std::string::String>,
    pub(crate) listener_identifier: ::std::option::Option<::std::string::String>,
    pub(crate) rule_identifier: ::std::option::Option<::std::string::String>,
}
impl DeleteRuleInputBuilder {
    /// <p>The ID or Amazon Resource Name (ARN) of the service.</p>
    /// This field is required.
    pub fn service_identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.service_identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID or Amazon Resource Name (ARN) of the service.</p>
    pub fn set_service_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.service_identifier = input;
        self
    }
    /// <p>The ID or Amazon Resource Name (ARN) of the service.</p>
    pub fn get_service_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.service_identifier
    }
    /// <p>The ID or Amazon Resource Name (ARN) of the listener.</p>
    /// This field is required.
    pub fn listener_identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.listener_identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID or Amazon Resource Name (ARN) of the listener.</p>
    pub fn set_listener_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.listener_identifier = input;
        self
    }
    /// <p>The ID or Amazon Resource Name (ARN) of the listener.</p>
    pub fn get_listener_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.listener_identifier
    }
    /// <p>The ID or Amazon Resource Name (ARN) of the rule.</p>
    /// This field is required.
    pub fn rule_identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.rule_identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID or Amazon Resource Name (ARN) of the rule.</p>
    pub fn set_rule_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.rule_identifier = input;
        self
    }
    /// <p>The ID or Amazon Resource Name (ARN) of the rule.</p>
    pub fn get_rule_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.rule_identifier
    }
    /// Consumes the builder and constructs a [`DeleteRuleInput`](crate::operation::delete_rule::DeleteRuleInput).
    /// This method will fail if any of the following fields are not set:
    /// - [`service_identifier`](crate::operation::delete_rule::builders::DeleteRuleInputBuilder::service_identifier)
    /// - [`listener_identifier`](crate::operation::delete_rule::builders::DeleteRuleInputBuilder::listener_identifier)
    /// - [`rule_identifier`](crate::operation::delete_rule::builders::DeleteRuleInputBuilder::rule_identifier)
    pub fn build(self) -> ::std::result::Result<crate::operation::delete_rule::DeleteRuleInput, ::aws_smithy_http::operation::error::BuildError> {
        ::std::result::Result::Ok(crate::operation::delete_rule::DeleteRuleInput {
            service_identifier: self.service_identifier.ok_or_else(|| {
                ::aws_smithy_http::operation::error::BuildError::missing_field(
                    "service_identifier",
                    "service_identifier was not specified but it is required when building DeleteRuleInput",
                )
            })?,
            listener_identifier: self.listener_identifier.ok_or_else(|| {
                ::aws_smithy_http::operation::error::BuildError::missing_field(
                    "listener_identifier",
                    "listener_identifier was not specified but it is required when building DeleteRuleInput",
                )
            })?,
            rule_identifier: self.rule_identifier.ok_or_else(|| {
                ::aws_smithy_http::operation::error::BuildError::missing_field(
                    "rule_identifier",
                    "rule_identifier was not specified but it is required when building DeleteRuleInput",
                )
            })?,
        })
    }
}
