// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> An object representing the agent or data collector that failed to delete, each containing agentId, errorMessage, and errorCode. </p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct BatchDeleteAgentError {
    /// <p> The ID of the agent or data collector to delete. </p>
    pub agent_id: ::std::option::Option<::std::string::String>,
    /// <p> The description of the error that occurred for the delete failed agent. </p>
    pub error_message: ::std::option::Option<::std::string::String>,
    /// <p> The type of error that occurred for the delete failed agent. Valid status are: AGENT_IN_USE | NOT_FOUND | INTERNAL_SERVER_ERROR. </p>
    pub error_code: ::std::option::Option<crate::types::DeleteAgentErrorCode>,
}
impl BatchDeleteAgentError {
    /// <p> The ID of the agent or data collector to delete. </p>
    pub fn agent_id(&self) -> ::std::option::Option<&str> {
        self.agent_id.as_deref()
    }
    /// <p> The description of the error that occurred for the delete failed agent. </p>
    pub fn error_message(&self) -> ::std::option::Option<&str> {
        self.error_message.as_deref()
    }
    /// <p> The type of error that occurred for the delete failed agent. Valid status are: AGENT_IN_USE | NOT_FOUND | INTERNAL_SERVER_ERROR. </p>
    pub fn error_code(&self) -> ::std::option::Option<&crate::types::DeleteAgentErrorCode> {
        self.error_code.as_ref()
    }
}
impl BatchDeleteAgentError {
    /// Creates a new builder-style object to manufacture [`BatchDeleteAgentError`](crate::types::BatchDeleteAgentError).
    pub fn builder() -> crate::types::builders::BatchDeleteAgentErrorBuilder {
        crate::types::builders::BatchDeleteAgentErrorBuilder::default()
    }
}

/// A builder for [`BatchDeleteAgentError`](crate::types::BatchDeleteAgentError).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct BatchDeleteAgentErrorBuilder {
    pub(crate) agent_id: ::std::option::Option<::std::string::String>,
    pub(crate) error_message: ::std::option::Option<::std::string::String>,
    pub(crate) error_code: ::std::option::Option<crate::types::DeleteAgentErrorCode>,
}
impl BatchDeleteAgentErrorBuilder {
    /// <p> The ID of the agent or data collector to delete. </p>
    pub fn agent_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.agent_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p> The ID of the agent or data collector to delete. </p>
    pub fn set_agent_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.agent_id = input;
        self
    }
    /// <p> The ID of the agent or data collector to delete. </p>
    pub fn get_agent_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.agent_id
    }
    /// <p> The description of the error that occurred for the delete failed agent. </p>
    pub fn error_message(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.error_message = ::std::option::Option::Some(input.into());
        self
    }
    /// <p> The description of the error that occurred for the delete failed agent. </p>
    pub fn set_error_message(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.error_message = input;
        self
    }
    /// <p> The description of the error that occurred for the delete failed agent. </p>
    pub fn get_error_message(&self) -> &::std::option::Option<::std::string::String> {
        &self.error_message
    }
    /// <p> The type of error that occurred for the delete failed agent. Valid status are: AGENT_IN_USE | NOT_FOUND | INTERNAL_SERVER_ERROR. </p>
    pub fn error_code(mut self, input: crate::types::DeleteAgentErrorCode) -> Self {
        self.error_code = ::std::option::Option::Some(input);
        self
    }
    /// <p> The type of error that occurred for the delete failed agent. Valid status are: AGENT_IN_USE | NOT_FOUND | INTERNAL_SERVER_ERROR. </p>
    pub fn set_error_code(mut self, input: ::std::option::Option<crate::types::DeleteAgentErrorCode>) -> Self {
        self.error_code = input;
        self
    }
    /// <p> The type of error that occurred for the delete failed agent. Valid status are: AGENT_IN_USE | NOT_FOUND | INTERNAL_SERVER_ERROR. </p>
    pub fn get_error_code(&self) -> &::std::option::Option<crate::types::DeleteAgentErrorCode> {
        &self.error_code
    }
    /// Consumes the builder and constructs a [`BatchDeleteAgentError`](crate::types::BatchDeleteAgentError).
    pub fn build(self) -> crate::types::BatchDeleteAgentError {
        crate::types::BatchDeleteAgentError {
            agent_id: self.agent_id,
            error_message: self.error_message,
            error_code: self.error_code,
        }
    }
}
