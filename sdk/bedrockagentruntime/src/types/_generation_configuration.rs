// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains configurations for response generation based on the knowledge base query results.</p>
/// <p>This data type is used in the following API operations:</p>
/// <ul>
/// <li>
/// <p><a href="https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_RetrieveAndGenerate.html#API_agent-runtime_RetrieveAndGenerate_RequestSyntax">RetrieveAndGenerate request</a></p></li>
/// </ul>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GenerationConfiguration {
    /// <p>Contains the template for the prompt that's sent to the model for response generation.</p>
    pub prompt_template: ::std::option::Option<crate::types::PromptTemplate>,
}
impl GenerationConfiguration {
    /// <p>Contains the template for the prompt that's sent to the model for response generation.</p>
    pub fn prompt_template(&self) -> ::std::option::Option<&crate::types::PromptTemplate> {
        self.prompt_template.as_ref()
    }
}
impl GenerationConfiguration {
    /// Creates a new builder-style object to manufacture [`GenerationConfiguration`](crate::types::GenerationConfiguration).
    pub fn builder() -> crate::types::builders::GenerationConfigurationBuilder {
        crate::types::builders::GenerationConfigurationBuilder::default()
    }
}

/// A builder for [`GenerationConfiguration`](crate::types::GenerationConfiguration).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct GenerationConfigurationBuilder {
    pub(crate) prompt_template: ::std::option::Option<crate::types::PromptTemplate>,
}
impl GenerationConfigurationBuilder {
    /// <p>Contains the template for the prompt that's sent to the model for response generation.</p>
    pub fn prompt_template(mut self, input: crate::types::PromptTemplate) -> Self {
        self.prompt_template = ::std::option::Option::Some(input);
        self
    }
    /// <p>Contains the template for the prompt that's sent to the model for response generation.</p>
    pub fn set_prompt_template(mut self, input: ::std::option::Option<crate::types::PromptTemplate>) -> Self {
        self.prompt_template = input;
        self
    }
    /// <p>Contains the template for the prompt that's sent to the model for response generation.</p>
    pub fn get_prompt_template(&self) -> &::std::option::Option<crate::types::PromptTemplate> {
        &self.prompt_template
    }
    /// Consumes the builder and constructs a [`GenerationConfiguration`](crate::types::GenerationConfiguration).
    pub fn build(self) -> crate::types::GenerationConfiguration {
        crate::types::GenerationConfiguration {
            prompt_template: self.prompt_template,
        }
    }
}
