// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_retrieval_filter(
    object_3: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::RetrievalFilter,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    match input {
        crate::types::RetrievalFilter::Equals(inner) => {
            #[allow(unused_mut)]
            let mut object_1 = object_3.key("equals").start_object();
            crate::protocol_serde::shape_filter_attribute::ser_filter_attribute(&mut object_1, inner)?;
            object_1.finish();
        }
        crate::types::RetrievalFilter::NotEquals(inner) => {
            #[allow(unused_mut)]
            let mut object_2 = object_3.key("notEquals").start_object();
            crate::protocol_serde::shape_filter_attribute::ser_filter_attribute(&mut object_2, inner)?;
            object_2.finish();
        }
        crate::types::RetrievalFilter::GreaterThan(inner) => {
            #[allow(unused_mut)]
            let mut object_3 = object_3.key("greaterThan").start_object();
            crate::protocol_serde::shape_filter_attribute::ser_filter_attribute(&mut object_3, inner)?;
            object_3.finish();
        }
        crate::types::RetrievalFilter::GreaterThanOrEquals(inner) => {
            #[allow(unused_mut)]
            let mut object_4 = object_3.key("greaterThanOrEquals").start_object();
            crate::protocol_serde::shape_filter_attribute::ser_filter_attribute(&mut object_4, inner)?;
            object_4.finish();
        }
        crate::types::RetrievalFilter::LessThan(inner) => {
            #[allow(unused_mut)]
            let mut object_5 = object_3.key("lessThan").start_object();
            crate::protocol_serde::shape_filter_attribute::ser_filter_attribute(&mut object_5, inner)?;
            object_5.finish();
        }
        crate::types::RetrievalFilter::LessThanOrEquals(inner) => {
            #[allow(unused_mut)]
            let mut object_6 = object_3.key("lessThanOrEquals").start_object();
            crate::protocol_serde::shape_filter_attribute::ser_filter_attribute(&mut object_6, inner)?;
            object_6.finish();
        }
        crate::types::RetrievalFilter::In(inner) => {
            #[allow(unused_mut)]
            let mut object_7 = object_3.key("in").start_object();
            crate::protocol_serde::shape_filter_attribute::ser_filter_attribute(&mut object_7, inner)?;
            object_7.finish();
        }
        crate::types::RetrievalFilter::NotIn(inner) => {
            #[allow(unused_mut)]
            let mut object_8 = object_3.key("notIn").start_object();
            crate::protocol_serde::shape_filter_attribute::ser_filter_attribute(&mut object_8, inner)?;
            object_8.finish();
        }
        crate::types::RetrievalFilter::StartsWith(inner) => {
            #[allow(unused_mut)]
            let mut object_9 = object_3.key("startsWith").start_object();
            crate::protocol_serde::shape_filter_attribute::ser_filter_attribute(&mut object_9, inner)?;
            object_9.finish();
        }
        crate::types::RetrievalFilter::AndAll(inner) => {
            let mut array_10 = object_3.key("andAll").start_array();
            for item_11 in inner {
                {
                    #[allow(unused_mut)]
                    let mut object_12 = array_10.value().start_object();
                    crate::protocol_serde::shape_retrieval_filter::ser_retrieval_filter(&mut object_12, item_11)?;
                    object_12.finish();
                }
            }
            array_10.finish();
        }
        crate::types::RetrievalFilter::OrAll(inner) => {
            let mut array_13 = object_3.key("orAll").start_array();
            for item_14 in inner {
                {
                    #[allow(unused_mut)]
                    let mut object_15 = array_13.value().start_object();
                    crate::protocol_serde::shape_retrieval_filter::ser_retrieval_filter(&mut object_15, item_14)?;
                    object_15.finish();
                }
            }
            array_13.finish();
        }
        crate::types::RetrievalFilter::Unknown => {
            return Err(::aws_smithy_types::error::operation::SerializationError::unknown_variant(
                "RetrievalFilter",
            ))
        }
    }
    Ok(())
}
