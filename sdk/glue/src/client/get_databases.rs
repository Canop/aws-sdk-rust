// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetDatabases`](crate::operation::get_databases::builders::GetDatabasesFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::get_databases::builders::GetDatabasesFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`catalog_id(impl Into<String>)`](crate::operation::get_databases::builders::GetDatabasesFluentBuilder::catalog_id) / [`set_catalog_id(Option<String>)`](crate::operation::get_databases::builders::GetDatabasesFluentBuilder::set_catalog_id):<br>required: **false**<br><p>The ID of the Data Catalog from which to retrieve <code>Databases</code>. If none is provided, the Amazon Web Services account ID is used by default.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::get_databases::builders::GetDatabasesFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::get_databases::builders::GetDatabasesFluentBuilder::set_next_token):<br>required: **false**<br><p>A continuation token, if this is a continuation call.</p><br>
    ///   - [`max_results(i32)`](crate::operation::get_databases::builders::GetDatabasesFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::get_databases::builders::GetDatabasesFluentBuilder::set_max_results):<br>required: **false**<br><p>The maximum number of databases to return in one response.</p><br>
    ///   - [`resource_share_type(ResourceShareType)`](crate::operation::get_databases::builders::GetDatabasesFluentBuilder::resource_share_type) / [`set_resource_share_type(Option<ResourceShareType>)`](crate::operation::get_databases::builders::GetDatabasesFluentBuilder::set_resource_share_type):<br>required: **false**<br><p>Allows you to specify that you want to list the databases shared with your account. The allowable values are <code>FEDERATED</code>, <code>FOREIGN</code> or <code>ALL</code>.</p> <ul>  <li>   <p>If set to <code>FEDERATED</code>, will list the federated databases (referencing an external entity) shared with your account.</p></li>  <li>   <p>If set to <code>FOREIGN</code>, will list the databases shared with your account.</p></li>  <li>   <p>If set to <code>ALL</code>, will list the databases shared with your account, as well as the databases in yor local account.</p></li> </ul><br>
    ///   - [`attributes_to_get(DatabaseAttributes)`](crate::operation::get_databases::builders::GetDatabasesFluentBuilder::attributes_to_get) / [`set_attributes_to_get(Option<Vec::<DatabaseAttributes>>)`](crate::operation::get_databases::builders::GetDatabasesFluentBuilder::set_attributes_to_get):<br>required: **false**<br><p>Specifies the database fields returned by the <code>GetDatabases</code> call. This parameter doesnâ€™t accept an empty list. The request must include the <code>NAME</code>.</p><br>
    /// - On success, responds with [`GetDatabasesOutput`](crate::operation::get_databases::GetDatabasesOutput) with field(s):
    ///   - [`database_list(Vec::<Database>)`](crate::operation::get_databases::GetDatabasesOutput::database_list): <p>A list of <code>Database</code> objects from the specified catalog.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::get_databases::GetDatabasesOutput::next_token): <p>A continuation token for paginating the returned list of tokens, returned if the current segment of the list is not the last.</p>
    /// - On failure, responds with [`SdkError<GetDatabasesError>`](crate::operation::get_databases::GetDatabasesError)
    pub fn get_databases(&self) -> crate::operation::get_databases::builders::GetDatabasesFluentBuilder {
        crate::operation::get_databases::builders::GetDatabasesFluentBuilder::new(self.handle.clone())
    }
}
