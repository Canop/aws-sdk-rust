// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_create_app_version_resource_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::create_app_version_resource::CreateAppVersionResourceInput,
) -> Result<(), ::aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.additional_info {
        #[allow(unused_mut)]
        let mut object_2 = object.key("additionalInfo").start_object();
        for (key_3, value_4) in var_1 {
            {
                let mut array_5 = object_2.key(key_3.as_str()).start_array();
                for item_6 in value_4 {
                    {
                        array_5.value().string(item_6.as_str());
                    }
                }
                array_5.finish();
            }
        }
        object_2.finish();
    }
    {
        object.key("appArn").string(input.app_arn.as_str());
    }
    {
        let mut array_7 = object.key("appComponents").start_array();
        for item_8 in &input.app_components {
            {
                array_7.value().string(item_8.as_str());
            }
        }
        array_7.finish();
    }
    if let Some(var_9) = &input.aws_account_id {
        object.key("awsAccountId").string(var_9.as_str());
    }
    if let Some(var_10) = &input.aws_region {
        object.key("awsRegion").string(var_10.as_str());
    }
    if let Some(var_11) = &input.client_token {
        object.key("clientToken").string(var_11.as_str());
    }
    if let Some(var_12) = &input.logical_resource_id {
        #[allow(unused_mut)]
        let mut object_13 = object.key("logicalResourceId").start_object();
        crate::protocol_serde::shape_logical_resource_id::ser_logical_resource_id(&mut object_13, var_12)?;
        object_13.finish();
    }
    {
        object.key("physicalResourceId").string(input.physical_resource_id.as_str());
    }
    if let Some(var_14) = &input.resource_name {
        object.key("resourceName").string(var_14.as_str());
    }
    {
        object.key("resourceType").string(input.resource_type.as_str());
    }
    Ok(())
}
