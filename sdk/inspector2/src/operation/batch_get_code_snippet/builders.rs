// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub use crate::operation::batch_get_code_snippet::_batch_get_code_snippet_output::BatchGetCodeSnippetOutputBuilder;

pub use crate::operation::batch_get_code_snippet::_batch_get_code_snippet_input::BatchGetCodeSnippetInputBuilder;

/// Fluent builder constructing a request to `BatchGetCodeSnippet`.
///
/// <p>Retrieves code snippets from findings that Amazon Inspector detected code vulnerabilities in.</p>
#[derive(::std::clone::Clone, ::std::fmt::Debug)]
pub struct BatchGetCodeSnippetFluentBuilder {
    handle: ::std::sync::Arc<crate::client::Handle>,
    inner: crate::operation::batch_get_code_snippet::builders::BatchGetCodeSnippetInputBuilder,
}
impl BatchGetCodeSnippetFluentBuilder {
    /// Creates a new `BatchGetCodeSnippet`.
    pub(crate) fn new(handle: ::std::sync::Arc<crate::client::Handle>) -> Self {
        Self {
            handle,
            inner: ::std::default::Default::default(),
        }
    }
    // This function will go away in the near future. Do not rely on it.
    #[doc(hidden)]
    pub async fn customize_middleware(
        self,
    ) -> ::std::result::Result<
        crate::client::customize::CustomizableOperation<
            crate::operation::batch_get_code_snippet::BatchGetCodeSnippet,
            ::aws_http::retry::AwsResponseRetryClassifier,
        >,
        ::aws_smithy_http::result::SdkError<
            crate::operation::batch_get_code_snippet::BatchGetCodeSnippetError,
        >,
    > {
        let handle = self.handle.clone();
        let operation = self
            .inner
            .build()
            .map_err(::aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&handle.conf)
            .await
            .map_err(::aws_smithy_http::result::SdkError::construction_failure)?;
        ::std::result::Result::Ok(crate::client::customize::CustomizableOperation {
            handle,
            operation,
        })
    }

    // This function will go away in the near future. Do not rely on it.
    #[doc(hidden)]
    pub async fn send_middleware(
        self,
    ) -> ::std::result::Result<
        crate::operation::batch_get_code_snippet::BatchGetCodeSnippetOutput,
        ::aws_smithy_http::result::SdkError<
            crate::operation::batch_get_code_snippet::BatchGetCodeSnippetError,
        >,
    > {
        let op = self
            .inner
            .build()
            .map_err(::aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&self.handle.conf)
            .await
            .map_err(::aws_smithy_http::result::SdkError::construction_failure)?;
        self.handle.client.call(op).await
    }
    /// Sends the request and returns the response.
    ///
    /// If an error occurs, an `SdkError` will be returned with additional details that
    /// can be matched against.
    ///
    /// By default, any retryable failures will be retried twice. Retry behavior
    /// is configurable with the [RetryConfig](aws_smithy_types::retry::RetryConfig), which can be
    /// set when configuring the client.
    pub async fn send(
        self,
    ) -> ::std::result::Result<
        crate::operation::batch_get_code_snippet::BatchGetCodeSnippetOutput,
        ::aws_smithy_http::result::SdkError<
            crate::operation::batch_get_code_snippet::BatchGetCodeSnippetError,
        >,
    > {
        self.send_middleware().await
    }

    /// Consumes this builder, creating a customizable operation that can be modified before being
    /// sent. The operation's inner [http::Request] can be modified as well.
    pub async fn customize(
        self,
    ) -> ::std::result::Result<
        crate::client::customize::CustomizableOperation<
            crate::operation::batch_get_code_snippet::BatchGetCodeSnippet,
            ::aws_http::retry::AwsResponseRetryClassifier,
        >,
        ::aws_smithy_http::result::SdkError<
            crate::operation::batch_get_code_snippet::BatchGetCodeSnippetError,
        >,
    > {
        self.customize_middleware().await
    }
    /// Appends an item to `findingArns`.
    ///
    /// To override the contents of this collection use [`set_finding_arns`](Self::set_finding_arns).
    ///
    /// <p>An array of finding ARNs for the findings you want to retrieve code snippets from.</p>
    pub fn finding_arns(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.inner = self.inner.finding_arns(input.into());
        self
    }
    /// <p>An array of finding ARNs for the findings you want to retrieve code snippets from.</p>
    pub fn set_finding_arns(
        mut self,
        input: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
    ) -> Self {
        self.inner = self.inner.set_finding_arns(input);
        self
    }
}
