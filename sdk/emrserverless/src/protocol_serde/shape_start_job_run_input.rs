// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_start_job_run_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::start_job_run::StartJobRunInput,
) -> Result<(), ::aws_smithy_http::operation::error::SerializationError> {
    {
        object.key("clientToken").string(input.client_token.as_str());
    }
    if let Some(var_1) = &input.configuration_overrides {
        #[allow(unused_mut)]
        let mut object_2 = object.key("configurationOverrides").start_object();
        crate::protocol_serde::shape_configuration_overrides::ser_configuration_overrides(&mut object_2, var_1)?;
        object_2.finish();
    }
    {
        object.key("executionRoleArn").string(input.execution_role_arn.as_str());
    }
    if let Some(var_3) = &input.execution_timeout_minutes {
        object.key("executionTimeoutMinutes").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_3).into()),
        );
    }
    if let Some(var_4) = &input.job_driver {
        #[allow(unused_mut)]
        let mut object_5 = object.key("jobDriver").start_object();
        crate::protocol_serde::shape_job_driver::ser_job_driver(&mut object_5, var_4)?;
        object_5.finish();
    }
    if let Some(var_6) = &input.name {
        object.key("name").string(var_6.as_str());
    }
    if let Some(var_7) = &input.tags {
        #[allow(unused_mut)]
        let mut object_8 = object.key("tags").start_object();
        for (key_9, value_10) in var_7 {
            {
                object_8.key(key_9.as_str()).string(value_10.as_str());
            }
        }
        object_8.finish();
    }
    Ok(())
}
