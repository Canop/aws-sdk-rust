// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UpdateTopicRefreshScheduleInput {
    /// <p>The ID of the Amazon Web Services account that contains the topic whose refresh schedule you want to update.</p>
    #[doc(hidden)]
    pub aws_account_id: std::option::Option<std::string::String>,
    /// <p>The ID of the topic that you want to modify. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.</p>
    #[doc(hidden)]
    pub topic_id: std::option::Option<std::string::String>,
    /// <p>The ID of the dataset.</p>
    #[doc(hidden)]
    pub dataset_id: std::option::Option<std::string::String>,
    /// <p>The definition of a refresh schedule.</p>
    #[doc(hidden)]
    pub refresh_schedule: std::option::Option<crate::types::TopicRefreshSchedule>,
}
impl UpdateTopicRefreshScheduleInput {
    /// <p>The ID of the Amazon Web Services account that contains the topic whose refresh schedule you want to update.</p>
    pub fn aws_account_id(&self) -> std::option::Option<&str> {
        self.aws_account_id.as_deref()
    }
    /// <p>The ID of the topic that you want to modify. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.</p>
    pub fn topic_id(&self) -> std::option::Option<&str> {
        self.topic_id.as_deref()
    }
    /// <p>The ID of the dataset.</p>
    pub fn dataset_id(&self) -> std::option::Option<&str> {
        self.dataset_id.as_deref()
    }
    /// <p>The definition of a refresh schedule.</p>
    pub fn refresh_schedule(&self) -> std::option::Option<&crate::types::TopicRefreshSchedule> {
        self.refresh_schedule.as_ref()
    }
}
impl UpdateTopicRefreshScheduleInput {
    /// Creates a new builder-style object to manufacture [`UpdateTopicRefreshScheduleInput`](crate::operation::update_topic_refresh_schedule::UpdateTopicRefreshScheduleInput).
    pub fn builder() -> crate::operation::update_topic_refresh_schedule::builders::UpdateTopicRefreshScheduleInputBuilder{
        crate::operation::update_topic_refresh_schedule::builders::UpdateTopicRefreshScheduleInputBuilder::default()
    }
}

/// A builder for [`UpdateTopicRefreshScheduleInput`](crate::operation::update_topic_refresh_schedule::UpdateTopicRefreshScheduleInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UpdateTopicRefreshScheduleInputBuilder {
    pub(crate) aws_account_id: std::option::Option<std::string::String>,
    pub(crate) topic_id: std::option::Option<std::string::String>,
    pub(crate) dataset_id: std::option::Option<std::string::String>,
    pub(crate) refresh_schedule: std::option::Option<crate::types::TopicRefreshSchedule>,
}
impl UpdateTopicRefreshScheduleInputBuilder {
    /// <p>The ID of the Amazon Web Services account that contains the topic whose refresh schedule you want to update.</p>
    pub fn aws_account_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.aws_account_id = Some(input.into());
        self
    }
    /// <p>The ID of the Amazon Web Services account that contains the topic whose refresh schedule you want to update.</p>
    pub fn set_aws_account_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.aws_account_id = input;
        self
    }
    /// <p>The ID of the topic that you want to modify. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.</p>
    pub fn topic_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.topic_id = Some(input.into());
        self
    }
    /// <p>The ID of the topic that you want to modify. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.</p>
    pub fn set_topic_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.topic_id = input;
        self
    }
    /// <p>The ID of the dataset.</p>
    pub fn dataset_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.dataset_id = Some(input.into());
        self
    }
    /// <p>The ID of the dataset.</p>
    pub fn set_dataset_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.dataset_id = input;
        self
    }
    /// <p>The definition of a refresh schedule.</p>
    pub fn refresh_schedule(mut self, input: crate::types::TopicRefreshSchedule) -> Self {
        self.refresh_schedule = Some(input);
        self
    }
    /// <p>The definition of a refresh schedule.</p>
    pub fn set_refresh_schedule(
        mut self,
        input: std::option::Option<crate::types::TopicRefreshSchedule>,
    ) -> Self {
        self.refresh_schedule = input;
        self
    }
    /// Consumes the builder and constructs a [`UpdateTopicRefreshScheduleInput`](crate::operation::update_topic_refresh_schedule::UpdateTopicRefreshScheduleInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::update_topic_refresh_schedule::UpdateTopicRefreshScheduleInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::update_topic_refresh_schedule::UpdateTopicRefreshScheduleInput {
                aws_account_id: self.aws_account_id,
                topic_id: self.topic_id,
                dataset_id: self.dataset_id,
                refresh_schedule: self.refresh_schedule,
            },
        )
    }
}
