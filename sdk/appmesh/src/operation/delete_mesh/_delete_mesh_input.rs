// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DeleteMeshInput {
    /// <p>The name of the service mesh to delete.</p>
    pub mesh_name: ::std::string::String,
}
impl DeleteMeshInput {
    /// <p>The name of the service mesh to delete.</p>
    pub fn mesh_name(&self) -> &str {
        use std::ops::Deref;
        self.mesh_name.deref()
    }
}
impl DeleteMeshInput {
    /// Creates a new builder-style object to manufacture [`DeleteMeshInput`](crate::operation::delete_mesh::DeleteMeshInput).
    pub fn builder() -> crate::operation::delete_mesh::builders::DeleteMeshInputBuilder {
        crate::operation::delete_mesh::builders::DeleteMeshInputBuilder::default()
    }
}

/// A builder for [`DeleteMeshInput`](crate::operation::delete_mesh::DeleteMeshInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DeleteMeshInputBuilder {
    pub(crate) mesh_name: ::std::option::Option<::std::string::String>,
}
impl DeleteMeshInputBuilder {
    /// <p>The name of the service mesh to delete.</p>
    /// This field is required.
    pub fn mesh_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.mesh_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the service mesh to delete.</p>
    pub fn set_mesh_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.mesh_name = input;
        self
    }
    /// <p>The name of the service mesh to delete.</p>
    pub fn get_mesh_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.mesh_name
    }
    /// Consumes the builder and constructs a [`DeleteMeshInput`](crate::operation::delete_mesh::DeleteMeshInput).
    /// This method will fail if any of the following fields are not set:
    /// - [`mesh_name`](crate::operation::delete_mesh::builders::DeleteMeshInputBuilder::mesh_name)
    pub fn build(self) -> ::std::result::Result<crate::operation::delete_mesh::DeleteMeshInput, ::aws_smithy_http::operation::error::BuildError> {
        ::std::result::Result::Ok(crate::operation::delete_mesh::DeleteMeshInput {
            mesh_name: self.mesh_name.ok_or_else(|| {
                ::aws_smithy_http::operation::error::BuildError::missing_field(
                    "mesh_name",
                    "mesh_name was not specified but it is required when building DeleteMeshInput",
                )
            })?,
        })
    }
}
