// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub use crate::operation::describe_storage_system_resource_metrics::_describe_storage_system_resource_metrics_output::DescribeStorageSystemResourceMetricsOutputBuilder;

pub use crate::operation::describe_storage_system_resource_metrics::_describe_storage_system_resource_metrics_input::DescribeStorageSystemResourceMetricsInputBuilder;

/// Fluent builder constructing a request to `DescribeStorageSystemResourceMetrics`.
///
/// <p>Returns information, including performance data and capacity usage, which DataSync Discovery collects about a specific resource in your-premises storage system.</p>
#[derive(std::clone::Clone, std::fmt::Debug)]
pub struct DescribeStorageSystemResourceMetricsFluentBuilder {
    handle: std::sync::Arc<crate::client::Handle>,
                    inner: crate::operation::describe_storage_system_resource_metrics::builders::DescribeStorageSystemResourceMetricsInputBuilder,
}
impl DescribeStorageSystemResourceMetricsFluentBuilder {
    /// Creates a new `DescribeStorageSystemResourceMetrics`.
    pub(crate) fn new(handle: std::sync::Arc<crate::client::Handle>) -> Self {
        Self {
            handle,
            inner: Default::default(),
        }
    }
    /// Consume this builder, creating a customizable operation that can be modified before being
    /// sent. The operation's inner [http::Request] can be modified as well.
                    pub async fn customize(self) -> std::result::Result<
                        crate::client::customize::CustomizableOperation<crate::operation::describe_storage_system_resource_metrics::DescribeStorageSystemResourceMetrics, aws_http::retry::AwsResponseRetryClassifier,>,
                        aws_smithy_http::result::SdkError<crate::operation::describe_storage_system_resource_metrics::DescribeStorageSystemResourceMetricsError>
    >{
        let handle = self.handle.clone();
        let operation = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        Ok(crate::client::customize::CustomizableOperation { handle, operation })
    }

    /// Sends the request and returns the response.
    ///
    /// If an error occurs, an `SdkError` will be returned with additional details that
    /// can be matched against.
    ///
    /// By default, any retryable failures will be retried twice. Retry behavior
    /// is configurable with the [RetryConfig](aws_smithy_types::retry::RetryConfig), which can be
    /// set when configuring the client.
                    pub async fn send(self) -> std::result::Result<crate::operation::describe_storage_system_resource_metrics::DescribeStorageSystemResourceMetricsOutput, aws_smithy_http::result::SdkError<crate::operation::describe_storage_system_resource_metrics::DescribeStorageSystemResourceMetricsError>>
                     {
        let op = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&self.handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        self.handle.client.call(op).await
    }
    /// Create a paginator for this request
    ///
    /// Paginators are used by calling [`send().await`](crate::operation::describe_storage_system_resource_metrics::paginator::DescribeStorageSystemResourceMetricsPaginator::send) which returns a `Stream`.
    pub fn into_paginator(self) -> crate::operation::describe_storage_system_resource_metrics::paginator::DescribeStorageSystemResourceMetricsPaginator{
        crate::operation::describe_storage_system_resource_metrics::paginator::DescribeStorageSystemResourceMetricsPaginator::new(self.handle, self.inner)
    }
    /// <p>Specifies the Amazon Resource Name (ARN) of the discovery job that collects information about your on-premises storage system.</p>
    pub fn discovery_job_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.discovery_job_arn(input.into());
        self
    }
    /// <p>Specifies the Amazon Resource Name (ARN) of the discovery job that collects information about your on-premises storage system.</p>
    pub fn set_discovery_job_arn(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.inner = self.inner.set_discovery_job_arn(input);
        self
    }
    /// <p>Specifies the kind of storage system resource that you want information about.</p>
    pub fn resource_type(mut self, input: crate::types::DiscoveryResourceType) -> Self {
        self.inner = self.inner.resource_type(input);
        self
    }
    /// <p>Specifies the kind of storage system resource that you want information about.</p>
    pub fn set_resource_type(
        mut self,
        input: std::option::Option<crate::types::DiscoveryResourceType>,
    ) -> Self {
        self.inner = self.inner.set_resource_type(input);
        self
    }
    /// <p>Specifies the universally unique identifier (UUID) of the storage system resource that you want information about.</p>
    pub fn resource_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.resource_id(input.into());
        self
    }
    /// <p>Specifies the universally unique identifier (UUID) of the storage system resource that you want information about.</p>
    pub fn set_resource_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.inner = self.inner.set_resource_id(input);
        self
    }
    /// <p>Specifies a time within the total duration that the discovery job ran. To see information gathered during a certain time frame, use this parameter with <code>EndTime</code>.</p>
    pub fn start_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.inner = self.inner.start_time(input);
        self
    }
    /// <p>Specifies a time within the total duration that the discovery job ran. To see information gathered during a certain time frame, use this parameter with <code>EndTime</code>.</p>
    pub fn set_start_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.inner = self.inner.set_start_time(input);
        self
    }
    /// <p>Specifies a time within the total duration that the discovery job ran. To see information gathered during a certain time frame, use this parameter with <code>StartTime</code>.</p>
    pub fn end_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.inner = self.inner.end_time(input);
        self
    }
    /// <p>Specifies a time within the total duration that the discovery job ran. To see information gathered during a certain time frame, use this parameter with <code>StartTime</code>.</p>
    pub fn set_end_time(mut self, input: std::option::Option<aws_smithy_types::DateTime>) -> Self {
        self.inner = self.inner.set_end_time(input);
        self
    }
    /// <p>Specifies how many results that you want in the response.</p>
    pub fn max_results(mut self, input: i32) -> Self {
        self.inner = self.inner.max_results(input);
        self
    }
    /// <p>Specifies how many results that you want in the response.</p>
    pub fn set_max_results(mut self, input: std::option::Option<i32>) -> Self {
        self.inner = self.inner.set_max_results(input);
        self
    }
    /// <p>Specifies an opaque string that indicates the position to begin the next list of results in the response.</p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.next_token(input.into());
        self
    }
    /// <p>Specifies an opaque string that indicates the position to begin the next list of results in the response.</p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.inner = self.inner.set_next_token(input);
        self
    }
}
