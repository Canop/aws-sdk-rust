// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdateProtectedQueryInput {
    /// <p>The identifier for a member of a protected query instance.</p>
    pub membership_identifier: ::std::string::String,
    /// <p>The identifier for a protected query instance.</p>
    pub protected_query_identifier: ::std::string::String,
    /// <p>The target status of a query. Used to update the execution status of a currently running query.</p>
    pub target_status: crate::types::TargetProtectedQueryStatus,
}
impl UpdateProtectedQueryInput {
    /// <p>The identifier for a member of a protected query instance.</p>
    pub fn membership_identifier(&self) -> &str {
        use std::ops::Deref;
        self.membership_identifier.deref()
    }
    /// <p>The identifier for a protected query instance.</p>
    pub fn protected_query_identifier(&self) -> &str {
        use std::ops::Deref;
        self.protected_query_identifier.deref()
    }
    /// <p>The target status of a query. Used to update the execution status of a currently running query.</p>
    pub fn target_status(&self) -> &crate::types::TargetProtectedQueryStatus {
        &self.target_status
    }
}
impl UpdateProtectedQueryInput {
    /// Creates a new builder-style object to manufacture [`UpdateProtectedQueryInput`](crate::operation::update_protected_query::UpdateProtectedQueryInput).
    pub fn builder() -> crate::operation::update_protected_query::builders::UpdateProtectedQueryInputBuilder {
        crate::operation::update_protected_query::builders::UpdateProtectedQueryInputBuilder::default()
    }
}

/// A builder for [`UpdateProtectedQueryInput`](crate::operation::update_protected_query::UpdateProtectedQueryInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct UpdateProtectedQueryInputBuilder {
    pub(crate) membership_identifier: ::std::option::Option<::std::string::String>,
    pub(crate) protected_query_identifier: ::std::option::Option<::std::string::String>,
    pub(crate) target_status: ::std::option::Option<crate::types::TargetProtectedQueryStatus>,
}
impl UpdateProtectedQueryInputBuilder {
    /// <p>The identifier for a member of a protected query instance.</p>
    /// This field is required.
    pub fn membership_identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.membership_identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The identifier for a member of a protected query instance.</p>
    pub fn set_membership_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.membership_identifier = input;
        self
    }
    /// <p>The identifier for a member of a protected query instance.</p>
    pub fn get_membership_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.membership_identifier
    }
    /// <p>The identifier for a protected query instance.</p>
    /// This field is required.
    pub fn protected_query_identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.protected_query_identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The identifier for a protected query instance.</p>
    pub fn set_protected_query_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.protected_query_identifier = input;
        self
    }
    /// <p>The identifier for a protected query instance.</p>
    pub fn get_protected_query_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.protected_query_identifier
    }
    /// <p>The target status of a query. Used to update the execution status of a currently running query.</p>
    /// This field is required.
    pub fn target_status(mut self, input: crate::types::TargetProtectedQueryStatus) -> Self {
        self.target_status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The target status of a query. Used to update the execution status of a currently running query.</p>
    pub fn set_target_status(mut self, input: ::std::option::Option<crate::types::TargetProtectedQueryStatus>) -> Self {
        self.target_status = input;
        self
    }
    /// <p>The target status of a query. Used to update the execution status of a currently running query.</p>
    pub fn get_target_status(&self) -> &::std::option::Option<crate::types::TargetProtectedQueryStatus> {
        &self.target_status
    }
    /// Consumes the builder and constructs a [`UpdateProtectedQueryInput`](crate::operation::update_protected_query::UpdateProtectedQueryInput).
    /// This method will fail if any of the following fields are not set:
    /// - [`membership_identifier`](crate::operation::update_protected_query::builders::UpdateProtectedQueryInputBuilder::membership_identifier)
    /// - [`protected_query_identifier`](crate::operation::update_protected_query::builders::UpdateProtectedQueryInputBuilder::protected_query_identifier)
    /// - [`target_status`](crate::operation::update_protected_query::builders::UpdateProtectedQueryInputBuilder::target_status)
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::update_protected_query::UpdateProtectedQueryInput, ::aws_smithy_http::operation::error::BuildError>
    {
        ::std::result::Result::Ok(crate::operation::update_protected_query::UpdateProtectedQueryInput {
            membership_identifier: self.membership_identifier.ok_or_else(|| {
                ::aws_smithy_http::operation::error::BuildError::missing_field(
                    "membership_identifier",
                    "membership_identifier was not specified but it is required when building UpdateProtectedQueryInput",
                )
            })?,
            protected_query_identifier: self.protected_query_identifier.ok_or_else(|| {
                ::aws_smithy_http::operation::error::BuildError::missing_field(
                    "protected_query_identifier",
                    "protected_query_identifier was not specified but it is required when building UpdateProtectedQueryInput",
                )
            })?,
            target_status: self.target_status.ok_or_else(|| {
                ::aws_smithy_http::operation::error::BuildError::missing_field(
                    "target_status",
                    "target_status was not specified but it is required when building UpdateProtectedQueryInput",
                )
            })?,
        })
    }
}
