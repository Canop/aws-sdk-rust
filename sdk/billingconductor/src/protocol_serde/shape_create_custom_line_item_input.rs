// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_create_custom_line_item_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::create_custom_line_item::CreateCustomLineItemInput,
) -> Result<(), ::aws_smithy_http::operation::error::SerializationError> {
    {
        object.key("BillingGroupArn").string(input.billing_group_arn.as_str());
    }
    if let Some(var_1) = &input.billing_period_range {
        #[allow(unused_mut)]
        let mut object_2 = object.key("BillingPeriodRange").start_object();
        crate::protocol_serde::shape_custom_line_item_billing_period_range::ser_custom_line_item_billing_period_range(&mut object_2, var_1)?;
        object_2.finish();
    }
    if let Some(var_3) = &input.charge_details {
        #[allow(unused_mut)]
        let mut object_4 = object.key("ChargeDetails").start_object();
        crate::protocol_serde::shape_custom_line_item_charge_details::ser_custom_line_item_charge_details(&mut object_4, var_3)?;
        object_4.finish();
    }
    {
        object.key("Description").string(input.description.as_str());
    }
    {
        object.key("Name").string(input.name.as_str());
    }
    if let Some(var_5) = &input.tags {
        #[allow(unused_mut)]
        let mut object_6 = object.key("Tags").start_object();
        for (key_7, value_8) in var_5 {
            {
                object_6.key(key_7.as_str()).string(value_8.as_str());
            }
        }
        object_6.finish();
    }
    Ok(())
}
