// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_create_pricing_rule_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::create_pricing_rule::CreatePricingRuleInput,
) -> Result<(), ::aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.billing_entity {
        object.key("BillingEntity").string(var_1.as_str());
    }
    if let Some(var_2) = &input.description {
        object.key("Description").string(var_2.as_str());
    }
    if let Some(var_3) = &input.modifier_percentage {
        object.key("ModifierPercentage").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::Float((*var_3).into()),
        );
    }
    {
        object.key("Name").string(input.name.as_str());
    }
    if let Some(var_4) = &input.operation {
        object.key("Operation").string(var_4.as_str());
    }
    {
        object.key("Scope").string(input.scope.as_str());
    }
    if let Some(var_5) = &input.service {
        object.key("Service").string(var_5.as_str());
    }
    if let Some(var_6) = &input.tags {
        #[allow(unused_mut)]
        let mut object_7 = object.key("Tags").start_object();
        for (key_8, value_9) in var_6 {
            {
                object_7.key(key_8.as_str()).string(value_9.as_str());
            }
        }
        object_7.finish();
    }
    if let Some(var_10) = &input.tiering {
        #[allow(unused_mut)]
        let mut object_11 = object.key("Tiering").start_object();
        crate::protocol_serde::shape_create_tiering_input::ser_create_tiering_input(&mut object_11, var_10)?;
        object_11.finish();
    }
    {
        object.key("Type").string(input.r#type.as_str());
    }
    if let Some(var_12) = &input.usage_type {
        object.key("UsageType").string(var_12.as_str());
    }
    Ok(())
}
