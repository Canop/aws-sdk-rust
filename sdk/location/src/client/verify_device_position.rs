// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`VerifyDevicePosition`](crate::operation::verify_device_position::builders::VerifyDevicePositionFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`tracker_name(impl Into<String>)`](crate::operation::verify_device_position::builders::VerifyDevicePositionFluentBuilder::tracker_name) / [`set_tracker_name(Option<String>)`](crate::operation::verify_device_position::builders::VerifyDevicePositionFluentBuilder::set_tracker_name):<br>required: **true**<br><p>The name of the tracker resource to be associated with verification request.</p><br>
    ///   - [`device_state(DeviceState)`](crate::operation::verify_device_position::builders::VerifyDevicePositionFluentBuilder::device_state) / [`set_device_state(Option<DeviceState>)`](crate::operation::verify_device_position::builders::VerifyDevicePositionFluentBuilder::set_device_state):<br>required: **true**<br><p>The device's state, including position, IP address, cell signals and Wi-Fi access points.</p><br>
    ///   - [`distance_unit(DistanceUnit)`](crate::operation::verify_device_position::builders::VerifyDevicePositionFluentBuilder::distance_unit) / [`set_distance_unit(Option<DistanceUnit>)`](crate::operation::verify_device_position::builders::VerifyDevicePositionFluentBuilder::set_distance_unit):<br>required: **false**<br><p>The distance unit for the verification request.</p> <p>Default Value: <code>Kilometers</code></p><br>
    /// - On success, responds with [`VerifyDevicePositionOutput`](crate::operation::verify_device_position::VerifyDevicePositionOutput) with field(s):
    ///   - [`inferred_state(Option<InferredState>)`](crate::operation::verify_device_position::VerifyDevicePositionOutput::inferred_state): <p>The inferred state of the device, given the provided position, IP address, cellular signals, and Wi-Fi- access points.</p>
    ///   - [`device_id(String)`](crate::operation::verify_device_position::VerifyDevicePositionOutput::device_id): <p>The device identifier.</p>
    ///   - [`sample_time(DateTime)`](crate::operation::verify_device_position::VerifyDevicePositionOutput::sample_time): <p>The timestamp at which the device's position was determined. Uses <a href="https://www.iso.org/iso-8601-date-and-time-format.html"> ISO 8601 </a> format: <code>YYYY-MM-DDThh:mm:ss.sssZ</code>.</p>
    ///   - [`received_time(DateTime)`](crate::operation::verify_device_position::VerifyDevicePositionOutput::received_time): <p>The timestamp for when the tracker resource received the device position in <a href="https://www.iso.org/iso-8601-date-and-time-format.html"> ISO 8601 </a> format: <code>YYYY-MM-DDThh:mm:ss.sssZ</code>.</p>
    ///   - [`distance_unit(DistanceUnit)`](crate::operation::verify_device_position::VerifyDevicePositionOutput::distance_unit): <p>The distance unit for the verification response.</p>
    /// - On failure, responds with [`SdkError<VerifyDevicePositionError>`](crate::operation::verify_device_position::VerifyDevicePositionError)
    pub fn verify_device_position(&self) -> crate::operation::verify_device_position::builders::VerifyDevicePositionFluentBuilder {
        crate::operation::verify_device_position::builders::VerifyDevicePositionFluentBuilder::new(self.handle.clone())
    }
}
