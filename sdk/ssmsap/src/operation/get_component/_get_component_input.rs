// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetComponentInput {
    /// <p>The ID of the application.</p>
    pub application_id: ::std::string::String,
    /// <p>The ID of the component.</p>
    pub component_id: ::std::string::String,
}
impl GetComponentInput {
    /// <p>The ID of the application.</p>
    pub fn application_id(&self) -> &str {
        use std::ops::Deref;
        self.application_id.deref()
    }
    /// <p>The ID of the component.</p>
    pub fn component_id(&self) -> &str {
        use std::ops::Deref;
        self.component_id.deref()
    }
}
impl GetComponentInput {
    /// Creates a new builder-style object to manufacture [`GetComponentInput`](crate::operation::get_component::GetComponentInput).
    pub fn builder() -> crate::operation::get_component::builders::GetComponentInputBuilder {
        crate::operation::get_component::builders::GetComponentInputBuilder::default()
    }
}

/// A builder for [`GetComponentInput`](crate::operation::get_component::GetComponentInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct GetComponentInputBuilder {
    pub(crate) application_id: ::std::option::Option<::std::string::String>,
    pub(crate) component_id: ::std::option::Option<::std::string::String>,
}
impl GetComponentInputBuilder {
    /// <p>The ID of the application.</p>
    /// This field is required.
    pub fn application_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.application_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the application.</p>
    pub fn set_application_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.application_id = input;
        self
    }
    /// <p>The ID of the application.</p>
    pub fn get_application_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.application_id
    }
    /// <p>The ID of the component.</p>
    /// This field is required.
    pub fn component_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.component_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the component.</p>
    pub fn set_component_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.component_id = input;
        self
    }
    /// <p>The ID of the component.</p>
    pub fn get_component_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.component_id
    }
    /// Consumes the builder and constructs a [`GetComponentInput`](crate::operation::get_component::GetComponentInput).
    /// This method will fail if any of the following fields are not set:
    /// - [`application_id`](crate::operation::get_component::builders::GetComponentInputBuilder::application_id)
    /// - [`component_id`](crate::operation::get_component::builders::GetComponentInputBuilder::component_id)
    pub fn build(self) -> ::std::result::Result<crate::operation::get_component::GetComponentInput, ::aws_smithy_http::operation::error::BuildError> {
        ::std::result::Result::Ok(crate::operation::get_component::GetComponentInput {
            application_id: self.application_id.ok_or_else(|| {
                ::aws_smithy_http::operation::error::BuildError::missing_field(
                    "application_id",
                    "application_id was not specified but it is required when building GetComponentInput",
                )
            })?,
            component_id: self.component_id.ok_or_else(|| {
                ::aws_smithy_http::operation::error::BuildError::missing_field(
                    "component_id",
                    "component_id was not specified but it is required when building GetComponentInput",
                )
            })?,
        })
    }
}
