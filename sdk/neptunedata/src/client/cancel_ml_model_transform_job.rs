// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CancelMLModelTransformJob`](crate::operation::cancel_ml_model_transform_job::builders::CancelMLModelTransformJobFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`id(impl Into<String>)`](crate::operation::cancel_ml_model_transform_job::builders::CancelMLModelTransformJobFluentBuilder::id) / [`set_id(Option<String>)`](crate::operation::cancel_ml_model_transform_job::builders::CancelMLModelTransformJobFluentBuilder::set_id): <p>The unique ID of the model transform job to be canceled.</p>
    ///   - [`neptune_iam_role_arn(impl Into<String>)`](crate::operation::cancel_ml_model_transform_job::builders::CancelMLModelTransformJobFluentBuilder::neptune_iam_role_arn) / [`set_neptune_iam_role_arn(Option<String>)`](crate::operation::cancel_ml_model_transform_job::builders::CancelMLModelTransformJobFluentBuilder::set_neptune_iam_role_arn): <p>The ARN of an IAM role that provides Neptune access to SageMaker and Amazon S3 resources. This must be listed in your DB cluster parameter group or an error will occur.</p>
    ///   - [`clean(bool)`](crate::operation::cancel_ml_model_transform_job::builders::CancelMLModelTransformJobFluentBuilder::clean) / [`set_clean(Option<bool>)`](crate::operation::cancel_ml_model_transform_job::builders::CancelMLModelTransformJobFluentBuilder::set_clean): <p>If this flag is set to <code>TRUE</code>, all Neptune ML S3 artifacts should be deleted when the job is stopped. The default is <code>FALSE</code>.</p>
    /// - On success, responds with [`CancelMlModelTransformJobOutput`](crate::operation::cancel_ml_model_transform_job::CancelMlModelTransformJobOutput) with field(s):
    ///   - [`status(Option<String>)`](crate::operation::cancel_ml_model_transform_job::CancelMlModelTransformJobOutput::status): <p>the status of the cancelation.</p>
    /// - On failure, responds with [`SdkError<CancelMLModelTransformJobError>`](crate::operation::cancel_ml_model_transform_job::CancelMLModelTransformJobError)
    pub fn cancel_ml_model_transform_job(&self) -> crate::operation::cancel_ml_model_transform_job::builders::CancelMLModelTransformJobFluentBuilder {
        crate::operation::cancel_ml_model_transform_job::builders::CancelMLModelTransformJobFluentBuilder::new(self.handle.clone())
    }
}
