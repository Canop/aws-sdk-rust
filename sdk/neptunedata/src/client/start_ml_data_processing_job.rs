// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`StartMLDataProcessingJob`](crate::operation::start_ml_data_processing_job::builders::StartMLDataProcessingJobFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`id(impl Into<String>)`](crate::operation::start_ml_data_processing_job::builders::StartMLDataProcessingJobFluentBuilder::id) / [`set_id(Option<String>)`](crate::operation::start_ml_data_processing_job::builders::StartMLDataProcessingJobFluentBuilder::set_id): <p>A unique identifier for the new job. The default is an autogenerated UUID.</p>
    ///   - [`previous_data_processing_job_id(impl Into<String>)`](crate::operation::start_ml_data_processing_job::builders::StartMLDataProcessingJobFluentBuilder::previous_data_processing_job_id) / [`set_previous_data_processing_job_id(Option<String>)`](crate::operation::start_ml_data_processing_job::builders::StartMLDataProcessingJobFluentBuilder::set_previous_data_processing_job_id): <p>The job ID of a completed data processing job run on an earlier version of the data.</p>
    ///   - [`input_data_s3_location(impl Into<String>)`](crate::operation::start_ml_data_processing_job::builders::StartMLDataProcessingJobFluentBuilder::input_data_s3_location) / [`set_input_data_s3_location(Option<String>)`](crate::operation::start_ml_data_processing_job::builders::StartMLDataProcessingJobFluentBuilder::set_input_data_s3_location): <p>The URI of the Amazon S3 location where you want SageMaker to download the data needed to run the data processing job.</p>
    ///   - [`processed_data_s3_location(impl Into<String>)`](crate::operation::start_ml_data_processing_job::builders::StartMLDataProcessingJobFluentBuilder::processed_data_s3_location) / [`set_processed_data_s3_location(Option<String>)`](crate::operation::start_ml_data_processing_job::builders::StartMLDataProcessingJobFluentBuilder::set_processed_data_s3_location): <p>The URI of the Amazon S3 location where you want SageMaker to save the results of a data processing job.</p>
    ///   - [`sagemaker_iam_role_arn(impl Into<String>)`](crate::operation::start_ml_data_processing_job::builders::StartMLDataProcessingJobFluentBuilder::sagemaker_iam_role_arn) / [`set_sagemaker_iam_role_arn(Option<String>)`](crate::operation::start_ml_data_processing_job::builders::StartMLDataProcessingJobFluentBuilder::set_sagemaker_iam_role_arn): <p>The ARN of an IAM role for SageMaker execution. This must be listed in your DB cluster parameter group or an error will occur.</p>
    ///   - [`neptune_iam_role_arn(impl Into<String>)`](crate::operation::start_ml_data_processing_job::builders::StartMLDataProcessingJobFluentBuilder::neptune_iam_role_arn) / [`set_neptune_iam_role_arn(Option<String>)`](crate::operation::start_ml_data_processing_job::builders::StartMLDataProcessingJobFluentBuilder::set_neptune_iam_role_arn): <p>The Amazon Resource Name (ARN) of an IAM role that SageMaker can assume to perform tasks on your behalf. This must be listed in your DB cluster parameter group or an error will occur.</p>
    ///   - [`processing_instance_type(impl Into<String>)`](crate::operation::start_ml_data_processing_job::builders::StartMLDataProcessingJobFluentBuilder::processing_instance_type) / [`set_processing_instance_type(Option<String>)`](crate::operation::start_ml_data_processing_job::builders::StartMLDataProcessingJobFluentBuilder::set_processing_instance_type): <p>The type of ML instance used during data processing. Its memory should be large enough to hold the processed dataset. The default is the smallest ml.r5 type whose memory is ten times larger than the size of the exported graph data on disk.</p>
    ///   - [`processing_instance_volume_size_in_gb(i32)`](crate::operation::start_ml_data_processing_job::builders::StartMLDataProcessingJobFluentBuilder::processing_instance_volume_size_in_gb) / [`set_processing_instance_volume_size_in_gb(Option<i32>)`](crate::operation::start_ml_data_processing_job::builders::StartMLDataProcessingJobFluentBuilder::set_processing_instance_volume_size_in_gb): <p>The disk volume size of the processing instance. Both input data and processed data are stored on disk, so the volume size must be large enough to hold both data sets. The default is 0. If not specified or 0, Neptune ML chooses the volume size automatically based on the data size.</p>
    ///   - [`processing_time_out_in_seconds(i32)`](crate::operation::start_ml_data_processing_job::builders::StartMLDataProcessingJobFluentBuilder::processing_time_out_in_seconds) / [`set_processing_time_out_in_seconds(Option<i32>)`](crate::operation::start_ml_data_processing_job::builders::StartMLDataProcessingJobFluentBuilder::set_processing_time_out_in_seconds): <p>Timeout in seconds for the data processing job. The default is 86,400 (1 day).</p>
    ///   - [`model_type(impl Into<String>)`](crate::operation::start_ml_data_processing_job::builders::StartMLDataProcessingJobFluentBuilder::model_type) / [`set_model_type(Option<String>)`](crate::operation::start_ml_data_processing_job::builders::StartMLDataProcessingJobFluentBuilder::set_model_type): <p>One of the two model types that Neptune ML currently supports: heterogeneous graph models (<code>heterogeneous</code>), and knowledge graph (<code>kge</code>). The default is none. If not specified, Neptune ML chooses the model type automatically based on the data.</p>
    ///   - [`config_file_name(impl Into<String>)`](crate::operation::start_ml_data_processing_job::builders::StartMLDataProcessingJobFluentBuilder::config_file_name) / [`set_config_file_name(Option<String>)`](crate::operation::start_ml_data_processing_job::builders::StartMLDataProcessingJobFluentBuilder::set_config_file_name): <p>A data specification file that describes how to load the exported graph data for training. The file is automatically generated by the Neptune export toolkit. The default is <code>training-data-configuration.json</code>.</p>
    ///   - [`subnets(impl Into<String>)`](crate::operation::start_ml_data_processing_job::builders::StartMLDataProcessingJobFluentBuilder::subnets) / [`set_subnets(Option<Vec<String>>)`](crate::operation::start_ml_data_processing_job::builders::StartMLDataProcessingJobFluentBuilder::set_subnets): <p>The IDs of the subnets in the Neptune VPC. The default is None.</p>
    ///   - [`security_group_ids(impl Into<String>)`](crate::operation::start_ml_data_processing_job::builders::StartMLDataProcessingJobFluentBuilder::security_group_ids) / [`set_security_group_ids(Option<Vec<String>>)`](crate::operation::start_ml_data_processing_job::builders::StartMLDataProcessingJobFluentBuilder::set_security_group_ids): <p>The VPC security group IDs. The default is None.</p>
    ///   - [`volume_encryption_kms_key(impl Into<String>)`](crate::operation::start_ml_data_processing_job::builders::StartMLDataProcessingJobFluentBuilder::volume_encryption_kms_key) / [`set_volume_encryption_kms_key(Option<String>)`](crate::operation::start_ml_data_processing_job::builders::StartMLDataProcessingJobFluentBuilder::set_volume_encryption_kms_key): <p>The Amazon Key Management Service (Amazon KMS) key that SageMaker uses to encrypt data on the storage volume attached to the ML compute instances that run the training job. The default is None.</p>
    ///   - [`s3_output_encryption_kms_key(impl Into<String>)`](crate::operation::start_ml_data_processing_job::builders::StartMLDataProcessingJobFluentBuilder::s3_output_encryption_kms_key) / [`set_s3_output_encryption_kms_key(Option<String>)`](crate::operation::start_ml_data_processing_job::builders::StartMLDataProcessingJobFluentBuilder::set_s3_output_encryption_kms_key): <p>The Amazon Key Management Service (Amazon KMS) key that SageMaker uses to encrypt the output of the processing job. The default is none.</p>
    /// - On success, responds with [`StartMlDataProcessingJobOutput`](crate::operation::start_ml_data_processing_job::StartMlDataProcessingJobOutput) with field(s):
    ///   - [`id(Option<String>)`](crate::operation::start_ml_data_processing_job::StartMlDataProcessingJobOutput::id): <p>The unique ID of the new data processing job.</p>
    ///   - [`arn(Option<String>)`](crate::operation::start_ml_data_processing_job::StartMlDataProcessingJobOutput::arn): <p>The ARN of the data processing job.</p>
    ///   - [`creation_time_in_millis(Option<i64>)`](crate::operation::start_ml_data_processing_job::StartMlDataProcessingJobOutput::creation_time_in_millis): <p>The time it took to create the new processing job, in milliseconds.</p>
    /// - On failure, responds with [`SdkError<StartMLDataProcessingJobError>`](crate::operation::start_ml_data_processing_job::StartMLDataProcessingJobError)
    pub fn start_ml_data_processing_job(&self) -> crate::operation::start_ml_data_processing_job::builders::StartMLDataProcessingJobFluentBuilder {
        crate::operation::start_ml_data_processing_job::builders::StartMLDataProcessingJobFluentBuilder::new(self.handle.clone())
    }
}
