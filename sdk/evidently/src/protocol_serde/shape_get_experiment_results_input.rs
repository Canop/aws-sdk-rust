// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_get_experiment_results_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::get_experiment_results::GetExperimentResultsInput,
) -> Result<(), ::aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.base_stat {
        object.key("baseStat").string(var_1.as_str());
    }
    if let Some(var_2) = &input.end_time {
        object
            .key("endTime")
            .date_time(var_2, ::aws_smithy_types::date_time::Format::EpochSeconds)?;
    }
    {
        let mut array_3 = object.key("metricNames").start_array();
        for item_4 in &input.metric_names {
            {
                array_3.value().string(item_4.as_str());
            }
        }
        array_3.finish();
    }
    if input.period != 0 {
        object.key("period").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((input.period).into()),
        );
    }
    if let Some(var_5) = &input.report_names {
        let mut array_6 = object.key("reportNames").start_array();
        for item_7 in var_5 {
            {
                array_6.value().string(item_7.as_str());
            }
        }
        array_6.finish();
    }
    if let Some(var_8) = &input.result_stats {
        let mut array_9 = object.key("resultStats").start_array();
        for item_10 in var_8 {
            {
                array_9.value().string(item_10.as_str());
            }
        }
        array_9.finish();
    }
    if let Some(var_11) = &input.start_time {
        object
            .key("startTime")
            .date_time(var_11, ::aws_smithy_types::date_time::Format::EpochSeconds)?;
    }
    {
        let mut array_12 = object.key("treatmentNames").start_array();
        for item_13 in &input.treatment_names {
            {
                array_12.value().string(item_13.as_str());
            }
        }
        array_12.finish();
    }
    Ok(())
}
