// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DeleteFeatureInput {
    /// <p>The name or ARN of the project that contains the feature to delete.</p>
    pub project: ::std::string::String,
    /// <p>The name of the feature to delete.</p>
    pub feature: ::std::string::String,
}
impl DeleteFeatureInput {
    /// <p>The name or ARN of the project that contains the feature to delete.</p>
    pub fn project(&self) -> &str {
        use std::ops::Deref;
        self.project.deref()
    }
    /// <p>The name of the feature to delete.</p>
    pub fn feature(&self) -> &str {
        use std::ops::Deref;
        self.feature.deref()
    }
}
impl DeleteFeatureInput {
    /// Creates a new builder-style object to manufacture [`DeleteFeatureInput`](crate::operation::delete_feature::DeleteFeatureInput).
    pub fn builder() -> crate::operation::delete_feature::builders::DeleteFeatureInputBuilder {
        crate::operation::delete_feature::builders::DeleteFeatureInputBuilder::default()
    }
}

/// A builder for [`DeleteFeatureInput`](crate::operation::delete_feature::DeleteFeatureInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DeleteFeatureInputBuilder {
    pub(crate) project: ::std::option::Option<::std::string::String>,
    pub(crate) feature: ::std::option::Option<::std::string::String>,
}
impl DeleteFeatureInputBuilder {
    /// <p>The name or ARN of the project that contains the feature to delete.</p>
    /// This field is required.
    pub fn project(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.project = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name or ARN of the project that contains the feature to delete.</p>
    pub fn set_project(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.project = input;
        self
    }
    /// <p>The name or ARN of the project that contains the feature to delete.</p>
    pub fn get_project(&self) -> &::std::option::Option<::std::string::String> {
        &self.project
    }
    /// <p>The name of the feature to delete.</p>
    /// This field is required.
    pub fn feature(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.feature = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the feature to delete.</p>
    pub fn set_feature(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.feature = input;
        self
    }
    /// <p>The name of the feature to delete.</p>
    pub fn get_feature(&self) -> &::std::option::Option<::std::string::String> {
        &self.feature
    }
    /// Consumes the builder and constructs a [`DeleteFeatureInput`](crate::operation::delete_feature::DeleteFeatureInput).
    /// This method will fail if any of the following fields are not set:
    /// - [`project`](crate::operation::delete_feature::builders::DeleteFeatureInputBuilder::project)
    /// - [`feature`](crate::operation::delete_feature::builders::DeleteFeatureInputBuilder::feature)
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::delete_feature::DeleteFeatureInput, ::aws_smithy_http::operation::error::BuildError> {
        ::std::result::Result::Ok(crate::operation::delete_feature::DeleteFeatureInput {
            project: self.project.ok_or_else(|| {
                ::aws_smithy_http::operation::error::BuildError::missing_field(
                    "project",
                    "project was not specified but it is required when building DeleteFeatureInput",
                )
            })?,
            feature: self.feature.ok_or_else(|| {
                ::aws_smithy_http::operation::error::BuildError::missing_field(
                    "feature",
                    "feature was not specified but it is required when building DeleteFeatureInput",
                )
            })?,
        })
    }
}
