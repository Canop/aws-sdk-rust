// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct TestSegmentPatternInput {
    /// <p>The pattern to test.</p>
    pub pattern: ::std::string::String,
    /// <p>A sample <code>evaluationContext</code> JSON block to test against the specified pattern.</p>
    pub payload: ::std::string::String,
}
impl TestSegmentPatternInput {
    /// <p>The pattern to test.</p>
    pub fn pattern(&self) -> &str {
        use std::ops::Deref;
        self.pattern.deref()
    }
    /// <p>A sample <code>evaluationContext</code> JSON block to test against the specified pattern.</p>
    pub fn payload(&self) -> &str {
        use std::ops::Deref;
        self.payload.deref()
    }
}
impl TestSegmentPatternInput {
    /// Creates a new builder-style object to manufacture [`TestSegmentPatternInput`](crate::operation::test_segment_pattern::TestSegmentPatternInput).
    pub fn builder() -> crate::operation::test_segment_pattern::builders::TestSegmentPatternInputBuilder {
        crate::operation::test_segment_pattern::builders::TestSegmentPatternInputBuilder::default()
    }
}

/// A builder for [`TestSegmentPatternInput`](crate::operation::test_segment_pattern::TestSegmentPatternInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct TestSegmentPatternInputBuilder {
    pub(crate) pattern: ::std::option::Option<::std::string::String>,
    pub(crate) payload: ::std::option::Option<::std::string::String>,
}
impl TestSegmentPatternInputBuilder {
    /// <p>The pattern to test.</p>
    /// This field is required.
    pub fn pattern(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.pattern = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The pattern to test.</p>
    pub fn set_pattern(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.pattern = input;
        self
    }
    /// <p>The pattern to test.</p>
    pub fn get_pattern(&self) -> &::std::option::Option<::std::string::String> {
        &self.pattern
    }
    /// <p>A sample <code>evaluationContext</code> JSON block to test against the specified pattern.</p>
    /// This field is required.
    pub fn payload(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.payload = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A sample <code>evaluationContext</code> JSON block to test against the specified pattern.</p>
    pub fn set_payload(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.payload = input;
        self
    }
    /// <p>A sample <code>evaluationContext</code> JSON block to test against the specified pattern.</p>
    pub fn get_payload(&self) -> &::std::option::Option<::std::string::String> {
        &self.payload
    }
    /// Consumes the builder and constructs a [`TestSegmentPatternInput`](crate::operation::test_segment_pattern::TestSegmentPatternInput).
    /// This method will fail if any of the following fields are not set:
    /// - [`pattern`](crate::operation::test_segment_pattern::builders::TestSegmentPatternInputBuilder::pattern)
    /// - [`payload`](crate::operation::test_segment_pattern::builders::TestSegmentPatternInputBuilder::payload)
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::test_segment_pattern::TestSegmentPatternInput, ::aws_smithy_http::operation::error::BuildError> {
        ::std::result::Result::Ok(crate::operation::test_segment_pattern::TestSegmentPatternInput {
            pattern: self.pattern.ok_or_else(|| {
                ::aws_smithy_http::operation::error::BuildError::missing_field(
                    "pattern",
                    "pattern was not specified but it is required when building TestSegmentPatternInput",
                )
            })?,
            payload: self.payload.ok_or_else(|| {
                ::aws_smithy_http::operation::error::BuildError::missing_field(
                    "payload",
                    "payload was not specified but it is required when building TestSegmentPatternInput",
                )
            })?,
        })
    }
}
