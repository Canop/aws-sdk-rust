// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AssociateSourceServersInput {
    /// <p>Application ID.</p>
    pub application_id: ::std::string::String,
    /// <p>Source server IDs list.</p>
    pub source_server_ids: ::std::vec::Vec<::std::string::String>,
    /// <p>Account ID.</p>
    pub account_id: ::std::option::Option<::std::string::String>,
}
impl AssociateSourceServersInput {
    /// <p>Application ID.</p>
    pub fn application_id(&self) -> &str {
        use std::ops::Deref;
        self.application_id.deref()
    }
    /// <p>Source server IDs list.</p>
    pub fn source_server_ids(&self) -> &[::std::string::String] {
        use std::ops::Deref;
        self.source_server_ids.deref()
    }
    /// <p>Account ID.</p>
    pub fn account_id(&self) -> ::std::option::Option<&str> {
        self.account_id.as_deref()
    }
}
impl AssociateSourceServersInput {
    /// Creates a new builder-style object to manufacture [`AssociateSourceServersInput`](crate::operation::associate_source_servers::AssociateSourceServersInput).
    pub fn builder() -> crate::operation::associate_source_servers::builders::AssociateSourceServersInputBuilder {
        crate::operation::associate_source_servers::builders::AssociateSourceServersInputBuilder::default()
    }
}

/// A builder for [`AssociateSourceServersInput`](crate::operation::associate_source_servers::AssociateSourceServersInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct AssociateSourceServersInputBuilder {
    pub(crate) application_id: ::std::option::Option<::std::string::String>,
    pub(crate) source_server_ids: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
    pub(crate) account_id: ::std::option::Option<::std::string::String>,
}
impl AssociateSourceServersInputBuilder {
    /// <p>Application ID.</p>
    /// This field is required.
    pub fn application_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.application_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Application ID.</p>
    pub fn set_application_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.application_id = input;
        self
    }
    /// <p>Application ID.</p>
    pub fn get_application_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.application_id
    }
    /// Appends an item to `source_server_ids`.
    ///
    /// To override the contents of this collection use [`set_source_server_ids`](Self::set_source_server_ids).
    ///
    /// <p>Source server IDs list.</p>
    pub fn source_server_ids(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.source_server_ids.unwrap_or_default();
        v.push(input.into());
        self.source_server_ids = ::std::option::Option::Some(v);
        self
    }
    /// <p>Source server IDs list.</p>
    pub fn set_source_server_ids(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.source_server_ids = input;
        self
    }
    /// <p>Source server IDs list.</p>
    pub fn get_source_server_ids(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        &self.source_server_ids
    }
    /// <p>Account ID.</p>
    pub fn account_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.account_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Account ID.</p>
    pub fn set_account_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.account_id = input;
        self
    }
    /// <p>Account ID.</p>
    pub fn get_account_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.account_id
    }
    /// Consumes the builder and constructs a [`AssociateSourceServersInput`](crate::operation::associate_source_servers::AssociateSourceServersInput).
    /// This method will fail if any of the following fields are not set:
    /// - [`application_id`](crate::operation::associate_source_servers::builders::AssociateSourceServersInputBuilder::application_id)
    /// - [`source_server_ids`](crate::operation::associate_source_servers::builders::AssociateSourceServersInputBuilder::source_server_ids)
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::associate_source_servers::AssociateSourceServersInput, ::aws_smithy_http::operation::error::BuildError>
    {
        ::std::result::Result::Ok(crate::operation::associate_source_servers::AssociateSourceServersInput {
            application_id: self.application_id.ok_or_else(|| {
                ::aws_smithy_http::operation::error::BuildError::missing_field(
                    "application_id",
                    "application_id was not specified but it is required when building AssociateSourceServersInput",
                )
            })?,
            source_server_ids: self.source_server_ids.ok_or_else(|| {
                ::aws_smithy_http::operation::error::BuildError::missing_field(
                    "source_server_ids",
                    "source_server_ids was not specified but it is required when building AssociateSourceServersInput",
                )
            })?,
            account_id: self.account_id,
        })
    }
}
