// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub use crate::operation::batch_start_viewer_session_revocation::_batch_start_viewer_session_revocation_output::BatchStartViewerSessionRevocationOutputBuilder;

pub use crate::operation::batch_start_viewer_session_revocation::_batch_start_viewer_session_revocation_input::BatchStartViewerSessionRevocationInputBuilder;

/// Fluent builder constructing a request to `BatchStartViewerSessionRevocation`.
///
/// <p>Performs <code>StartViewerSessionRevocation</code> on multiple channel ARN and viewer ID pairs simultaneously.</p>
#[derive(::std::clone::Clone, ::std::fmt::Debug)]
pub struct BatchStartViewerSessionRevocationFluentBuilder {
    handle: ::std::sync::Arc<crate::client::Handle>,
                    inner: crate::operation::batch_start_viewer_session_revocation::builders::BatchStartViewerSessionRevocationInputBuilder,
}
impl BatchStartViewerSessionRevocationFluentBuilder {
    /// Creates a new `BatchStartViewerSessionRevocation`.
    pub(crate) fn new(handle: ::std::sync::Arc<crate::client::Handle>) -> Self {
        Self {
            handle,
            inner: ::std::default::Default::default(),
        }
    }
    // This function will go away in the near future. Do not rely on it.
    #[doc(hidden)]
                        pub async fn customize_middleware(self) -> ::std::result::Result<
                            crate::client::customize::CustomizableOperation<crate::operation::batch_start_viewer_session_revocation::BatchStartViewerSessionRevocation, ::aws_http::retry::AwsResponseRetryClassifier,>,
                            ::aws_smithy_http::result::SdkError<crate::operation::batch_start_viewer_session_revocation::BatchStartViewerSessionRevocationError>
    >{
        let handle = self.handle.clone();
        let operation = self
            .inner
            .build()
            .map_err(::aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&handle.conf)
            .await
            .map_err(::aws_smithy_http::result::SdkError::construction_failure)?;
        ::std::result::Result::Ok(crate::client::customize::CustomizableOperation {
            handle,
            operation,
        })
    }

    // This function will go away in the near future. Do not rely on it.
    #[doc(hidden)]
                        pub async fn send_middleware(self) -> ::std::result::Result<crate::operation::batch_start_viewer_session_revocation::BatchStartViewerSessionRevocationOutput, ::aws_smithy_http::result::SdkError<crate::operation::batch_start_viewer_session_revocation::BatchStartViewerSessionRevocationError>>
                         {
        let op = self
            .inner
            .build()
            .map_err(::aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&self.handle.conf)
            .await
            .map_err(::aws_smithy_http::result::SdkError::construction_failure)?;
        self.handle.client.call(op).await
    }
    /// Sends the request and returns the response.
    ///
    /// If an error occurs, an `SdkError` will be returned with additional details that
    /// can be matched against.
    ///
    /// By default, any retryable failures will be retried twice. Retry behavior
    /// is configurable with the [RetryConfig](aws_smithy_types::retry::RetryConfig), which can be
    /// set when configuring the client.
                            pub async fn send(self) -> ::std::result::Result<crate::operation::batch_start_viewer_session_revocation::BatchStartViewerSessionRevocationOutput, ::aws_smithy_http::result::SdkError<crate::operation::batch_start_viewer_session_revocation::BatchStartViewerSessionRevocationError>>
                             {
        self.send_middleware().await
    }

    /// Consumes this builder, creating a customizable operation that can be modified before being
    /// sent. The operation's inner [http::Request] can be modified as well.
                            pub async fn customize(self) -> ::std::result::Result<
                                crate::client::customize::CustomizableOperation<crate::operation::batch_start_viewer_session_revocation::BatchStartViewerSessionRevocation, ::aws_http::retry::AwsResponseRetryClassifier,>,
                                ::aws_smithy_http::result::SdkError<crate::operation::batch_start_viewer_session_revocation::BatchStartViewerSessionRevocationError>
    >{
        self.customize_middleware().await
    }
    /// Appends an item to `viewerSessions`.
    ///
    /// To override the contents of this collection use [`set_viewer_sessions`](Self::set_viewer_sessions).
    ///
    /// <p>Array of viewer sessions, one per channel-ARN and viewer-ID pair.</p>
    pub fn viewer_sessions(
        mut self,
        input: crate::types::BatchStartViewerSessionRevocationViewerSession,
    ) -> Self {
        self.inner = self.inner.viewer_sessions(input);
        self
    }
    /// <p>Array of viewer sessions, one per channel-ARN and viewer-ID pair.</p>
    pub fn set_viewer_sessions(
        mut self,
        input: ::std::option::Option<
            ::std::vec::Vec<crate::types::BatchStartViewerSessionRevocationViewerSession>,
        >,
    ) -> Self {
        self.inner = self.inner.set_viewer_sessions(input);
        self
    }
}
