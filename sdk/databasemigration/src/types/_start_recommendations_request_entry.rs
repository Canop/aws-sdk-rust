// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Provides information about the source database to analyze and provide target recommendations according to the specified requirements.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct StartRecommendationsRequestEntry {
    /// <p>The identifier of the source database.</p>
    #[doc(hidden)]
    pub database_id: std::option::Option<std::string::String>,
    /// <p>The required target engine settings.</p>
    #[doc(hidden)]
    pub settings: std::option::Option<crate::types::RecommendationSettings>,
}
impl StartRecommendationsRequestEntry {
    /// <p>The identifier of the source database.</p>
    pub fn database_id(&self) -> std::option::Option<&str> {
        self.database_id.as_deref()
    }
    /// <p>The required target engine settings.</p>
    pub fn settings(&self) -> std::option::Option<&crate::types::RecommendationSettings> {
        self.settings.as_ref()
    }
}
impl StartRecommendationsRequestEntry {
    /// Creates a new builder-style object to manufacture [`StartRecommendationsRequestEntry`](crate::types::StartRecommendationsRequestEntry).
    pub fn builder() -> crate::types::builders::StartRecommendationsRequestEntryBuilder {
        crate::types::builders::StartRecommendationsRequestEntryBuilder::default()
    }
}

/// A builder for [`StartRecommendationsRequestEntry`](crate::types::StartRecommendationsRequestEntry).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct StartRecommendationsRequestEntryBuilder {
    pub(crate) database_id: std::option::Option<std::string::String>,
    pub(crate) settings: std::option::Option<crate::types::RecommendationSettings>,
}
impl StartRecommendationsRequestEntryBuilder {
    /// <p>The identifier of the source database.</p>
    pub fn database_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.database_id = Some(input.into());
        self
    }
    /// <p>The identifier of the source database.</p>
    pub fn set_database_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.database_id = input;
        self
    }
    /// <p>The required target engine settings.</p>
    pub fn settings(mut self, input: crate::types::RecommendationSettings) -> Self {
        self.settings = Some(input);
        self
    }
    /// <p>The required target engine settings.</p>
    pub fn set_settings(
        mut self,
        input: std::option::Option<crate::types::RecommendationSettings>,
    ) -> Self {
        self.settings = input;
        self
    }
    /// Consumes the builder and constructs a [`StartRecommendationsRequestEntry`](crate::types::StartRecommendationsRequestEntry).
    pub fn build(self) -> crate::types::StartRecommendationsRequestEntry {
        crate::types::StartRecommendationsRequestEntry {
            database_id: self.database_id,
            settings: self.settings,
        }
    }
}
