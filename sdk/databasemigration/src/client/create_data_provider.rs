// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateDataProvider`](crate::operation::create_data_provider::builders::CreateDataProviderFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`data_provider_name(impl Into<String>)`](crate::operation::create_data_provider::builders::CreateDataProviderFluentBuilder::data_provider_name) / [`set_data_provider_name(Option<String>)`](crate::operation::create_data_provider::builders::CreateDataProviderFluentBuilder::set_data_provider_name): <p>A user-friendly name for the data provider.</p>
    ///   - [`description(impl Into<String>)`](crate::operation::create_data_provider::builders::CreateDataProviderFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::create_data_provider::builders::CreateDataProviderFluentBuilder::set_description): <p>A user-friendly description of the data provider.</p>
    ///   - [`engine(impl Into<String>)`](crate::operation::create_data_provider::builders::CreateDataProviderFluentBuilder::engine) / [`set_engine(Option<String>)`](crate::operation::create_data_provider::builders::CreateDataProviderFluentBuilder::set_engine): <p>The type of database engine for the data provider. Valid values include <code>"aurora"</code>, <code>"aurora_postgresql"</code>, <code>"mysql"</code>, <code>"oracle"</code>, <code>"postgres"</code>, and <code>"sqlserver"</code>. A value of <code>"aurora"</code> represents Amazon Aurora MySQL-Compatible Edition.</p>
    ///   - [`settings(DataProviderSettings)`](crate::operation::create_data_provider::builders::CreateDataProviderFluentBuilder::settings) / [`set_settings(Option<DataProviderSettings>)`](crate::operation::create_data_provider::builders::CreateDataProviderFluentBuilder::set_settings): <p>The settings in JSON format for a data provider.</p>
    ///   - [`tags(Tag)`](crate::operation::create_data_provider::builders::CreateDataProviderFluentBuilder::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::operation::create_data_provider::builders::CreateDataProviderFluentBuilder::set_tags): <p>One or more tags to be assigned to the data provider.</p>
    /// - On success, responds with [`CreateDataProviderOutput`](crate::operation::create_data_provider::CreateDataProviderOutput) with field(s):
    ///   - [`data_provider(Option<DataProvider>)`](crate::operation::create_data_provider::CreateDataProviderOutput::data_provider): <p>The data provider that was created.</p>
    /// - On failure, responds with [`SdkError<CreateDataProviderError>`](crate::operation::create_data_provider::CreateDataProviderError)
    pub fn create_data_provider(&self) -> crate::operation::create_data_provider::builders::CreateDataProviderFluentBuilder {
        crate::operation::create_data_provider::builders::CreateDataProviderFluentBuilder::new(self.handle.clone())
    }
}
