// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListControls`](crate::operation::list_controls::builders::ListControlsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_controls::builders::ListControlsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`control_type(ControlType)`](crate::operation::list_controls::builders::ListControlsFluentBuilder::control_type) / [`set_control_type(Option<ControlType>)`](crate::operation::list_controls::builders::ListControlsFluentBuilder::set_control_type):<br>required: **true**<br><p>A filter that narrows the list of controls to a specific type.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_controls::builders::ListControlsFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_controls::builders::ListControlsFluentBuilder::set_next_token):<br>required: **false**<br><p>The pagination token that's used to fetch the next set of results.</p><br>
    ///   - [`max_results(i32)`](crate::operation::list_controls::builders::ListControlsFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_controls::builders::ListControlsFluentBuilder::set_max_results):<br>required: **false**<br><p>The maximum number of results on a page or for an API request call.</p><br>
    ///   - [`control_catalog_id(impl Into<String>)`](crate::operation::list_controls::builders::ListControlsFluentBuilder::control_catalog_id) / [`set_control_catalog_id(Option<String>)`](crate::operation::list_controls::builders::ListControlsFluentBuilder::set_control_catalog_id):<br>required: **false**<br><p>A filter that narrows the list of controls to a specific resource from the Amazon Web Services Control Catalog.</p> <p>To use this parameter, specify the ARN of the Control Catalog resource. You can specify either a control domain, a control objective, or a common control. For information about how to find the ARNs for these resources, see <a href="https://docs.aws.amazon.com/controlcatalog/latest/APIReference/API_ListDomains.html"> <code>ListDomains</code> </a>, <a href="https://docs.aws.amazon.com/controlcatalog/latest/APIReference/API_ListObjectives.html"> <code>ListObjectives</code> </a>, and <a href="https://docs.aws.amazon.com/controlcatalog/latest/APIReference/API_ListCommonControls.html"> <code>ListCommonControls</code> </a>.</p><note>  <p>You can only filter by one Control Catalog resource at a time. Specifying multiple resource ARNs isnâ€™t currently supported. If you want to filter by more than one ARN, we recommend that you run the <code>ListControls</code> operation separately for each ARN.</p> </note> <p>Alternatively, specify <code>UNCATEGORIZED</code> to list controls that aren't mapped to a Control Catalog resource. For example, this operation might return a list of custom controls that don't belong to any control domain or control objective.</p><br>
    /// - On success, responds with [`ListControlsOutput`](crate::operation::list_controls::ListControlsOutput) with field(s):
    ///   - [`control_metadata_list(Option<Vec::<ControlMetadata>>)`](crate::operation::list_controls::ListControlsOutput::control_metadata_list): <p>A list of metadata that the <code>ListControls</code> API returns for each control.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_controls::ListControlsOutput::next_token): <p>The pagination token that's used to fetch the next set of results.</p>
    /// - On failure, responds with [`SdkError<ListControlsError>`](crate::operation::list_controls::ListControlsError)
    pub fn list_controls(&self) -> crate::operation::list_controls::builders::ListControlsFluentBuilder {
        crate::operation::list_controls::builders::ListControlsFluentBuilder::new(self.handle.clone())
    }
}
