// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_list_contacts_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::list_contacts::ListContactsInput,
) -> Result<(), ::aws_smithy_http::operation::error::SerializationError> {
    {
        object
            .key("endTime")
            .date_time(&input.end_time, ::aws_smithy_types::date_time::Format::EpochSeconds)?;
    }
    if let Some(var_1) = &input.ground_station {
        object.key("groundStation").string(var_1.as_str());
    }
    if let Some(var_2) = &input.max_results {
        object.key("maxResults").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_2).into()),
        );
    }
    if let Some(var_3) = &input.mission_profile_arn {
        object.key("missionProfileArn").string(var_3.as_str());
    }
    if let Some(var_4) = &input.next_token {
        object.key("nextToken").string(var_4.as_str());
    }
    if let Some(var_5) = &input.satellite_arn {
        object.key("satelliteArn").string(var_5.as_str());
    }
    {
        object
            .key("startTime")
            .date_time(&input.start_time, ::aws_smithy_types::date_time::Format::EpochSeconds)?;
    }
    {
        let mut array_6 = object.key("statusList").start_array();
        for item_7 in &input.status_list {
            {
                array_6.value().string(item_7.as_str());
            }
        }
        array_6.finish();
    }
    Ok(())
}
