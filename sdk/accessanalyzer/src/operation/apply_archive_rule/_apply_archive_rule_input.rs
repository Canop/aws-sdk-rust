// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Retroactively applies an archive rule.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ApplyArchiveRuleInput {
    /// <p>The Amazon resource name (ARN) of the analyzer.</p>
    pub analyzer_arn: ::std::string::String,
    /// <p>The name of the rule to apply.</p>
    pub rule_name: ::std::string::String,
    /// <p>A client token.</p>
    pub client_token: ::std::option::Option<::std::string::String>,
}
impl ApplyArchiveRuleInput {
    /// <p>The Amazon resource name (ARN) of the analyzer.</p>
    pub fn analyzer_arn(&self) -> &str {
        use std::ops::Deref;
        self.analyzer_arn.deref()
    }
    /// <p>The name of the rule to apply.</p>
    pub fn rule_name(&self) -> &str {
        use std::ops::Deref;
        self.rule_name.deref()
    }
    /// <p>A client token.</p>
    pub fn client_token(&self) -> ::std::option::Option<&str> {
        self.client_token.as_deref()
    }
}
impl ApplyArchiveRuleInput {
    /// Creates a new builder-style object to manufacture [`ApplyArchiveRuleInput`](crate::operation::apply_archive_rule::ApplyArchiveRuleInput).
    pub fn builder() -> crate::operation::apply_archive_rule::builders::ApplyArchiveRuleInputBuilder {
        crate::operation::apply_archive_rule::builders::ApplyArchiveRuleInputBuilder::default()
    }
}

/// A builder for [`ApplyArchiveRuleInput`](crate::operation::apply_archive_rule::ApplyArchiveRuleInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ApplyArchiveRuleInputBuilder {
    pub(crate) analyzer_arn: ::std::option::Option<::std::string::String>,
    pub(crate) rule_name: ::std::option::Option<::std::string::String>,
    pub(crate) client_token: ::std::option::Option<::std::string::String>,
}
impl ApplyArchiveRuleInputBuilder {
    /// <p>The Amazon resource name (ARN) of the analyzer.</p>
    /// This field is required.
    pub fn analyzer_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.analyzer_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon resource name (ARN) of the analyzer.</p>
    pub fn set_analyzer_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.analyzer_arn = input;
        self
    }
    /// <p>The Amazon resource name (ARN) of the analyzer.</p>
    pub fn get_analyzer_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.analyzer_arn
    }
    /// <p>The name of the rule to apply.</p>
    /// This field is required.
    pub fn rule_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.rule_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the rule to apply.</p>
    pub fn set_rule_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.rule_name = input;
        self
    }
    /// <p>The name of the rule to apply.</p>
    pub fn get_rule_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.rule_name
    }
    /// <p>A client token.</p>
    pub fn client_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.client_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A client token.</p>
    pub fn set_client_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.client_token = input;
        self
    }
    /// <p>A client token.</p>
    pub fn get_client_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.client_token
    }
    /// Consumes the builder and constructs a [`ApplyArchiveRuleInput`](crate::operation::apply_archive_rule::ApplyArchiveRuleInput).
    /// This method will fail if any of the following fields are not set:
    /// - [`analyzer_arn`](crate::operation::apply_archive_rule::builders::ApplyArchiveRuleInputBuilder::analyzer_arn)
    /// - [`rule_name`](crate::operation::apply_archive_rule::builders::ApplyArchiveRuleInputBuilder::rule_name)
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::apply_archive_rule::ApplyArchiveRuleInput, ::aws_smithy_http::operation::error::BuildError> {
        ::std::result::Result::Ok(crate::operation::apply_archive_rule::ApplyArchiveRuleInput {
            analyzer_arn: self.analyzer_arn.ok_or_else(|| {
                ::aws_smithy_http::operation::error::BuildError::missing_field(
                    "analyzer_arn",
                    "analyzer_arn was not specified but it is required when building ApplyArchiveRuleInput",
                )
            })?,
            rule_name: self.rule_name.ok_or_else(|| {
                ::aws_smithy_http::operation::error::BuildError::missing_field(
                    "rule_name",
                    "rule_name was not specified but it is required when building ApplyArchiveRuleInput",
                )
            })?,
            client_token: self.client_token,
        })
    }
}
