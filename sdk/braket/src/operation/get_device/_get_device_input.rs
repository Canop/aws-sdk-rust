// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetDeviceInput {
    /// <p>The ARN of the device to retrieve.</p>
    pub device_arn: ::std::string::String,
}
impl GetDeviceInput {
    /// <p>The ARN of the device to retrieve.</p>
    pub fn device_arn(&self) -> &str {
        use std::ops::Deref;
        self.device_arn.deref()
    }
}
impl GetDeviceInput {
    /// Creates a new builder-style object to manufacture [`GetDeviceInput`](crate::operation::get_device::GetDeviceInput).
    pub fn builder() -> crate::operation::get_device::builders::GetDeviceInputBuilder {
        crate::operation::get_device::builders::GetDeviceInputBuilder::default()
    }
}

/// A builder for [`GetDeviceInput`](crate::operation::get_device::GetDeviceInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct GetDeviceInputBuilder {
    pub(crate) device_arn: ::std::option::Option<::std::string::String>,
}
impl GetDeviceInputBuilder {
    /// <p>The ARN of the device to retrieve.</p>
    /// This field is required.
    pub fn device_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.device_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ARN of the device to retrieve.</p>
    pub fn set_device_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.device_arn = input;
        self
    }
    /// <p>The ARN of the device to retrieve.</p>
    pub fn get_device_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.device_arn
    }
    /// Consumes the builder and constructs a [`GetDeviceInput`](crate::operation::get_device::GetDeviceInput).
    /// This method will fail if any of the following fields are not set:
    /// - [`device_arn`](crate::operation::get_device::builders::GetDeviceInputBuilder::device_arn)
    pub fn build(self) -> ::std::result::Result<crate::operation::get_device::GetDeviceInput, ::aws_smithy_http::operation::error::BuildError> {
        ::std::result::Result::Ok(crate::operation::get_device::GetDeviceInput {
            device_arn: self.device_arn.ok_or_else(|| {
                ::aws_smithy_http::operation::error::BuildError::missing_field(
                    "device_arn",
                    "device_arn was not specified but it is required when building GetDeviceInput",
                )
            })?,
        })
    }
}
