// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The authentication configuration of the Amazon MSK cluster.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AuthenticationConfiguration {
    /// <p>The ARN of the role used to access the Amazon MSK cluster.</p>
    pub role_arn: ::std::option::Option<::std::string::String>,
    /// <p>The type of connectivity used to access the Amazon MSK cluster.</p>
    pub connectivity: ::std::option::Option<crate::types::Connectivity>,
}
impl AuthenticationConfiguration {
    /// <p>The ARN of the role used to access the Amazon MSK cluster.</p>
    pub fn role_arn(&self) -> ::std::option::Option<&str> {
        self.role_arn.as_deref()
    }
    /// <p>The type of connectivity used to access the Amazon MSK cluster.</p>
    pub fn connectivity(&self) -> ::std::option::Option<&crate::types::Connectivity> {
        self.connectivity.as_ref()
    }
}
impl AuthenticationConfiguration {
    /// Creates a new builder-style object to manufacture [`AuthenticationConfiguration`](crate::types::AuthenticationConfiguration).
    pub fn builder() -> crate::types::builders::AuthenticationConfigurationBuilder {
        crate::types::builders::AuthenticationConfigurationBuilder::default()
    }
}

/// A builder for [`AuthenticationConfiguration`](crate::types::AuthenticationConfiguration).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct AuthenticationConfigurationBuilder {
    pub(crate) role_arn: ::std::option::Option<::std::string::String>,
    pub(crate) connectivity: ::std::option::Option<crate::types::Connectivity>,
}
impl AuthenticationConfigurationBuilder {
    /// <p>The ARN of the role used to access the Amazon MSK cluster.</p>
    pub fn role_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.role_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ARN of the role used to access the Amazon MSK cluster.</p>
    pub fn set_role_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.role_arn = input;
        self
    }
    /// <p>The ARN of the role used to access the Amazon MSK cluster.</p>
    pub fn get_role_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.role_arn
    }
    /// <p>The type of connectivity used to access the Amazon MSK cluster.</p>
    pub fn connectivity(mut self, input: crate::types::Connectivity) -> Self {
        self.connectivity = ::std::option::Option::Some(input);
        self
    }
    /// <p>The type of connectivity used to access the Amazon MSK cluster.</p>
    pub fn set_connectivity(mut self, input: ::std::option::Option<crate::types::Connectivity>) -> Self {
        self.connectivity = input;
        self
    }
    /// <p>The type of connectivity used to access the Amazon MSK cluster.</p>
    pub fn get_connectivity(&self) -> &::std::option::Option<crate::types::Connectivity> {
        &self.connectivity
    }
    /// Consumes the builder and constructs a [`AuthenticationConfiguration`](crate::types::AuthenticationConfiguration).
    pub fn build(self) -> crate::types::AuthenticationConfiguration {
        crate::types::AuthenticationConfiguration {
            role_arn: self.role_arn,
            connectivity: self.connectivity,
        }
    }
}
