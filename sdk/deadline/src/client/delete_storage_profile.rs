// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteStorageProfile`](crate::operation::delete_storage_profile::builders::DeleteStorageProfileFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`farm_id(impl Into<String>)`](crate::operation::delete_storage_profile::builders::DeleteStorageProfileFluentBuilder::farm_id) / [`set_farm_id(Option<String>)`](crate::operation::delete_storage_profile::builders::DeleteStorageProfileFluentBuilder::set_farm_id):<br>required: **true**<br><p>The farm ID of the farm from which to remove the storage profile.</p><br>
    ///   - [`storage_profile_id(impl Into<String>)`](crate::operation::delete_storage_profile::builders::DeleteStorageProfileFluentBuilder::storage_profile_id) / [`set_storage_profile_id(Option<String>)`](crate::operation::delete_storage_profile::builders::DeleteStorageProfileFluentBuilder::set_storage_profile_id):<br>required: **true**<br><p>The storage profile ID of the storage profile to delete.</p><br>
    /// - On success, responds with [`DeleteStorageProfileOutput`](crate::operation::delete_storage_profile::DeleteStorageProfileOutput)
    /// - On failure, responds with [`SdkError<DeleteStorageProfileError>`](crate::operation::delete_storage_profile::DeleteStorageProfileError)
    pub fn delete_storage_profile(&self) -> crate::operation::delete_storage_profile::builders::DeleteStorageProfileFluentBuilder {
        crate::operation::delete_storage_profile::builders::DeleteStorageProfileFluentBuilder::new(self.handle.clone())
    }
}
