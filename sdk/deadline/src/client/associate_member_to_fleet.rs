// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`AssociateMemberToFleet`](crate::operation::associate_member_to_fleet::builders::AssociateMemberToFleetFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`farm_id(impl Into<String>)`](crate::operation::associate_member_to_fleet::builders::AssociateMemberToFleetFluentBuilder::farm_id) / [`set_farm_id(Option<String>)`](crate::operation::associate_member_to_fleet::builders::AssociateMemberToFleetFluentBuilder::set_farm_id):<br>required: **true**<br><p>The farm ID of the fleet to associate with the member.</p><br>
    ///   - [`fleet_id(impl Into<String>)`](crate::operation::associate_member_to_fleet::builders::AssociateMemberToFleetFluentBuilder::fleet_id) / [`set_fleet_id(Option<String>)`](crate::operation::associate_member_to_fleet::builders::AssociateMemberToFleetFluentBuilder::set_fleet_id):<br>required: **true**<br><p>The ID of the fleet to associate with a member.</p><br>
    ///   - [`principal_id(impl Into<String>)`](crate::operation::associate_member_to_fleet::builders::AssociateMemberToFleetFluentBuilder::principal_id) / [`set_principal_id(Option<String>)`](crate::operation::associate_member_to_fleet::builders::AssociateMemberToFleetFluentBuilder::set_principal_id):<br>required: **true**<br><p>The member's principal ID to associate with a fleet.</p><br>
    ///   - [`principal_type(DeadlinePrincipalType)`](crate::operation::associate_member_to_fleet::builders::AssociateMemberToFleetFluentBuilder::principal_type) / [`set_principal_type(Option<DeadlinePrincipalType>)`](crate::operation::associate_member_to_fleet::builders::AssociateMemberToFleetFluentBuilder::set_principal_type):<br>required: **true**<br><p>The member's principal type to associate with the fleet.</p><br>
    ///   - [`identity_store_id(impl Into<String>)`](crate::operation::associate_member_to_fleet::builders::AssociateMemberToFleetFluentBuilder::identity_store_id) / [`set_identity_store_id(Option<String>)`](crate::operation::associate_member_to_fleet::builders::AssociateMemberToFleetFluentBuilder::set_identity_store_id):<br>required: **true**<br><p>The member's identity store ID to associate with the fleet.</p><br>
    ///   - [`membership_level(MembershipLevel)`](crate::operation::associate_member_to_fleet::builders::AssociateMemberToFleetFluentBuilder::membership_level) / [`set_membership_level(Option<MembershipLevel>)`](crate::operation::associate_member_to_fleet::builders::AssociateMemberToFleetFluentBuilder::set_membership_level):<br>required: **true**<br><p>The principal's membership level for the associated fleet.</p><br>
    /// - On success, responds with [`AssociateMemberToFleetOutput`](crate::operation::associate_member_to_fleet::AssociateMemberToFleetOutput)
    /// - On failure, responds with [`SdkError<AssociateMemberToFleetError>`](crate::operation::associate_member_to_fleet::AssociateMemberToFleetError)
    pub fn associate_member_to_fleet(&self) -> crate::operation::associate_member_to_fleet::builders::AssociateMemberToFleetFluentBuilder {
        crate::operation::associate_member_to_fleet::builders::AssociateMemberToFleetFluentBuilder::new(self.handle.clone())
    }
}
