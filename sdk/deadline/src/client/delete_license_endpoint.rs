// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteLicenseEndpoint`](crate::operation::delete_license_endpoint::builders::DeleteLicenseEndpointFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`license_endpoint_id(impl Into<String>)`](crate::operation::delete_license_endpoint::builders::DeleteLicenseEndpointFluentBuilder::license_endpoint_id) / [`set_license_endpoint_id(Option<String>)`](crate::operation::delete_license_endpoint::builders::DeleteLicenseEndpointFluentBuilder::set_license_endpoint_id):<br>required: **true**<br><p>The license endpoint ID of the license endpoint to delete.</p><br>
    /// - On success, responds with [`DeleteLicenseEndpointOutput`](crate::operation::delete_license_endpoint::DeleteLicenseEndpointOutput)
    /// - On failure, responds with [`SdkError<DeleteLicenseEndpointError>`](crate::operation::delete_license_endpoint::DeleteLicenseEndpointError)
    pub fn delete_license_endpoint(&self) -> crate::operation::delete_license_endpoint::builders::DeleteLicenseEndpointFluentBuilder {
        crate::operation::delete_license_endpoint::builders::DeleteLicenseEndpointFluentBuilder::new(self.handle.clone())
    }
}
