// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListQueueEnvironments`](crate::operation::list_queue_environments::builders::ListQueueEnvironmentsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_queue_environments::builders::ListQueueEnvironmentsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`farm_id(impl Into<String>)`](crate::operation::list_queue_environments::builders::ListQueueEnvironmentsFluentBuilder::farm_id) / [`set_farm_id(Option<String>)`](crate::operation::list_queue_environments::builders::ListQueueEnvironmentsFluentBuilder::set_farm_id):<br>required: **true**<br><p>The farm ID for the queue environment list.</p><br>
    ///   - [`queue_id(impl Into<String>)`](crate::operation::list_queue_environments::builders::ListQueueEnvironmentsFluentBuilder::queue_id) / [`set_queue_id(Option<String>)`](crate::operation::list_queue_environments::builders::ListQueueEnvironmentsFluentBuilder::set_queue_id):<br>required: **true**<br><p>The queue ID for the queue environment list.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_queue_environments::builders::ListQueueEnvironmentsFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_queue_environments::builders::ListQueueEnvironmentsFluentBuilder::set_next_token):<br>required: **false**<br><p>The token for the next set of results, or <code>null</code> to start from the beginning.</p><br>
    ///   - [`max_results(i32)`](crate::operation::list_queue_environments::builders::ListQueueEnvironmentsFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_queue_environments::builders::ListQueueEnvironmentsFluentBuilder::set_max_results):<br>required: **false**<br><p>The maximum number of results to return. Use this parameter with <code>NextToken</code> to get results as a set of sequential pages.</p><br>
    /// - On success, responds with [`ListQueueEnvironmentsOutput`](crate::operation::list_queue_environments::ListQueueEnvironmentsOutput) with field(s):
    ///   - [`environments(Vec::<QueueEnvironmentSummary>)`](crate::operation::list_queue_environments::ListQueueEnvironmentsOutput::environments): <p>The environments to include in the queue environments list.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_queue_environments::ListQueueEnvironmentsOutput::next_token): <p>If Deadline Cloud returns <code>nextToken</code>, then there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. To retrieve the next page, call the operation again using the returned token. Keep all other arguments unchanged. If no results remain, then <code>nextToken</code> is set to <code>null</code>. Each pagination token expires after 24 hours. If you provide a token that isn't valid, then you receive an HTTP 400 <code>ValidationException</code> error.</p>
    /// - On failure, responds with [`SdkError<ListQueueEnvironmentsError>`](crate::operation::list_queue_environments::ListQueueEnvironmentsError)
    pub fn list_queue_environments(&self) -> crate::operation::list_queue_environments::builders::ListQueueEnvironmentsFluentBuilder {
        crate::operation::list_queue_environments::builders::ListQueueEnvironmentsFluentBuilder::new(self.handle.clone())
    }
}
