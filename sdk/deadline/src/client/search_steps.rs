// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`SearchSteps`](crate::operation::search_steps::builders::SearchStepsFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`farm_id(impl Into<String>)`](crate::operation::search_steps::builders::SearchStepsFluentBuilder::farm_id) / [`set_farm_id(Option<String>)`](crate::operation::search_steps::builders::SearchStepsFluentBuilder::set_farm_id):<br>required: **true**<br><p>The farm ID to use for the step search.</p><br>
    ///   - [`queue_ids(impl Into<String>)`](crate::operation::search_steps::builders::SearchStepsFluentBuilder::queue_ids) / [`set_queue_ids(Option<Vec::<String>>)`](crate::operation::search_steps::builders::SearchStepsFluentBuilder::set_queue_ids):<br>required: **true**<br><p>The queue IDs in the step search.</p><br>
    ///   - [`job_id(impl Into<String>)`](crate::operation::search_steps::builders::SearchStepsFluentBuilder::job_id) / [`set_job_id(Option<String>)`](crate::operation::search_steps::builders::SearchStepsFluentBuilder::set_job_id):<br>required: **false**<br><p>The job ID to use in the step search.</p><br>
    ///   - [`filter_expressions(SearchGroupedFilterExpressions)`](crate::operation::search_steps::builders::SearchStepsFluentBuilder::filter_expressions) / [`set_filter_expressions(Option<SearchGroupedFilterExpressions>)`](crate::operation::search_steps::builders::SearchStepsFluentBuilder::set_filter_expressions):<br>required: **false**<br><p>The filter expression, <code>AND</code> or <code>OR</code>, to use when searching among a group of search strings in a resource. You can use two groupings per search each within parenthesis <code>()</code>.</p><br>
    ///   - [`sort_expressions(SearchSortExpression)`](crate::operation::search_steps::builders::SearchStepsFluentBuilder::sort_expressions) / [`set_sort_expressions(Option<Vec::<SearchSortExpression>>)`](crate::operation::search_steps::builders::SearchStepsFluentBuilder::set_sort_expressions):<br>required: **false**<br><p>The search terms for a resource.</p><br>
    ///   - [`item_offset(i32)`](crate::operation::search_steps::builders::SearchStepsFluentBuilder::item_offset) / [`set_item_offset(Option<i32>)`](crate::operation::search_steps::builders::SearchStepsFluentBuilder::set_item_offset):<br>required: **true**<br><p>Defines how far into the scrollable list to start the return of results.</p><br>
    ///   - [`page_size(i32)`](crate::operation::search_steps::builders::SearchStepsFluentBuilder::page_size) / [`set_page_size(Option<i32>)`](crate::operation::search_steps::builders::SearchStepsFluentBuilder::set_page_size):<br>required: **false**<br><p>Specifies the number of items per page for the resource.</p><br>
    /// - On success, responds with [`SearchStepsOutput`](crate::operation::search_steps::SearchStepsOutput) with field(s):
    ///   - [`steps(Vec::<StepSearchSummary>)`](crate::operation::search_steps::SearchStepsOutput::steps): <p>The steps in the search.</p>
    ///   - [`next_item_offset(Option<i32>)`](crate::operation::search_steps::SearchStepsOutput::next_item_offset): <p>The next incremental starting point after the defined <code>itemOffset</code>.</p>
    ///   - [`total_results(i32)`](crate::operation::search_steps::SearchStepsOutput::total_results): <p>The total number of results in the search.</p>
    /// - On failure, responds with [`SdkError<SearchStepsError>`](crate::operation::search_steps::SearchStepsError)
    pub fn search_steps(&self) -> crate::operation::search_steps::builders::SearchStepsFluentBuilder {
        crate::operation::search_steps::builders::SearchStepsFluentBuilder::new(self.handle.clone())
    }
}
