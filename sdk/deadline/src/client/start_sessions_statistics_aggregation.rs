// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`StartSessionsStatisticsAggregation`](crate::operation::start_sessions_statistics_aggregation::builders::StartSessionsStatisticsAggregationFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`farm_id(impl Into<String>)`](crate::operation::start_sessions_statistics_aggregation::builders::StartSessionsStatisticsAggregationFluentBuilder::farm_id) / [`set_farm_id(Option<String>)`](crate::operation::start_sessions_statistics_aggregation::builders::StartSessionsStatisticsAggregationFluentBuilder::set_farm_id):<br>required: **true**<br><p>The identifier of the farm that contains queues or fleets to return statistics for.</p><br>
    ///   - [`resource_ids(SessionsStatisticsResources)`](crate::operation::start_sessions_statistics_aggregation::builders::StartSessionsStatisticsAggregationFluentBuilder::resource_ids) / [`set_resource_ids(Option<SessionsStatisticsResources>)`](crate::operation::start_sessions_statistics_aggregation::builders::StartSessionsStatisticsAggregationFluentBuilder::set_resource_ids):<br>required: **true**<br><p>A list of fleet IDs or queue IDs to gather statistics for.</p><br>
    ///   - [`start_time(DateTime)`](crate::operation::start_sessions_statistics_aggregation::builders::StartSessionsStatisticsAggregationFluentBuilder::start_time) / [`set_start_time(Option<DateTime>)`](crate::operation::start_sessions_statistics_aggregation::builders::StartSessionsStatisticsAggregationFluentBuilder::set_start_time):<br>required: **true**<br><p>The Linux timestamp of the date and time that the statistics start.</p><br>
    ///   - [`end_time(DateTime)`](crate::operation::start_sessions_statistics_aggregation::builders::StartSessionsStatisticsAggregationFluentBuilder::end_time) / [`set_end_time(Option<DateTime>)`](crate::operation::start_sessions_statistics_aggregation::builders::StartSessionsStatisticsAggregationFluentBuilder::set_end_time):<br>required: **true**<br><p>The Linux timestamp of the date and time that the statistics end.</p><br>
    ///   - [`timezone(impl Into<String>)`](crate::operation::start_sessions_statistics_aggregation::builders::StartSessionsStatisticsAggregationFluentBuilder::timezone) / [`set_timezone(Option<String>)`](crate::operation::start_sessions_statistics_aggregation::builders::StartSessionsStatisticsAggregationFluentBuilder::set_timezone):<br>required: **false**<br><p>The timezone to use for the statistics. Use UTC notation such as "UTC+8."</p><br>
    ///   - [`period(Period)`](crate::operation::start_sessions_statistics_aggregation::builders::StartSessionsStatisticsAggregationFluentBuilder::period) / [`set_period(Option<Period>)`](crate::operation::start_sessions_statistics_aggregation::builders::StartSessionsStatisticsAggregationFluentBuilder::set_period):<br>required: **false**<br><p>The period to aggregate the statistics.</p><br>
    ///   - [`group_by(UsageGroupByField)`](crate::operation::start_sessions_statistics_aggregation::builders::StartSessionsStatisticsAggregationFluentBuilder::group_by) / [`set_group_by(Option<Vec::<UsageGroupByField>>)`](crate::operation::start_sessions_statistics_aggregation::builders::StartSessionsStatisticsAggregationFluentBuilder::set_group_by):<br>required: **true**<br><p>The field to use to group the statistics.</p><br>
    ///   - [`statistics(UsageStatistic)`](crate::operation::start_sessions_statistics_aggregation::builders::StartSessionsStatisticsAggregationFluentBuilder::statistics) / [`set_statistics(Option<Vec::<UsageStatistic>>)`](crate::operation::start_sessions_statistics_aggregation::builders::StartSessionsStatisticsAggregationFluentBuilder::set_statistics):<br>required: **true**<br><p>One to four statistics to return.</p><br>
    /// - On success, responds with [`StartSessionsStatisticsAggregationOutput`](crate::operation::start_sessions_statistics_aggregation::StartSessionsStatisticsAggregationOutput) with field(s):
    ///   - [`aggregation_id(String)`](crate::operation::start_sessions_statistics_aggregation::StartSessionsStatisticsAggregationOutput::aggregation_id): <p>A unique identifier for the aggregated statistics. Use this identifier with the <code>GetAggregatedStatisticsForSessions</code> operation to return the statistics.</p>
    /// - On failure, responds with [`SdkError<StartSessionsStatisticsAggregationError>`](crate::operation::start_sessions_statistics_aggregation::StartSessionsStatisticsAggregationError)
    pub fn start_sessions_statistics_aggregation(
        &self,
    ) -> crate::operation::start_sessions_statistics_aggregation::builders::StartSessionsStatisticsAggregationFluentBuilder {
        crate::operation::start_sessions_statistics_aggregation::builders::StartSessionsStatisticsAggregationFluentBuilder::new(self.handle.clone())
    }
}
