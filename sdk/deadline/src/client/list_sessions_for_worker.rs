// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListSessionsForWorker`](crate::operation::list_sessions_for_worker::builders::ListSessionsForWorkerFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_sessions_for_worker::builders::ListSessionsForWorkerFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`farm_id(impl Into<String>)`](crate::operation::list_sessions_for_worker::builders::ListSessionsForWorkerFluentBuilder::farm_id) / [`set_farm_id(Option<String>)`](crate::operation::list_sessions_for_worker::builders::ListSessionsForWorkerFluentBuilder::set_farm_id):<br>required: **true**<br><p>The farm ID for the session.</p><br>
    ///   - [`fleet_id(impl Into<String>)`](crate::operation::list_sessions_for_worker::builders::ListSessionsForWorkerFluentBuilder::fleet_id) / [`set_fleet_id(Option<String>)`](crate::operation::list_sessions_for_worker::builders::ListSessionsForWorkerFluentBuilder::set_fleet_id):<br>required: **true**<br><p>The fleet ID for the session.</p><br>
    ///   - [`worker_id(impl Into<String>)`](crate::operation::list_sessions_for_worker::builders::ListSessionsForWorkerFluentBuilder::worker_id) / [`set_worker_id(Option<String>)`](crate::operation::list_sessions_for_worker::builders::ListSessionsForWorkerFluentBuilder::set_worker_id):<br>required: **true**<br><p>The worker ID for the session.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_sessions_for_worker::builders::ListSessionsForWorkerFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_sessions_for_worker::builders::ListSessionsForWorkerFluentBuilder::set_next_token):<br>required: **false**<br><p>The token for the next set of results, or <code>null</code> to start from the beginning.</p><br>
    ///   - [`max_results(i32)`](crate::operation::list_sessions_for_worker::builders::ListSessionsForWorkerFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_sessions_for_worker::builders::ListSessionsForWorkerFluentBuilder::set_max_results):<br>required: **false**<br><p>The maximum number of results to return. Use this parameter with <code>NextToken</code> to get results as a set of sequential pages.</p><br>
    /// - On success, responds with [`ListSessionsForWorkerOutput`](crate::operation::list_sessions_for_worker::ListSessionsForWorkerOutput) with field(s):
    ///   - [`sessions(Vec::<WorkerSessionSummary>)`](crate::operation::list_sessions_for_worker::ListSessionsForWorkerOutput::sessions): <p>The sessions in the response.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_sessions_for_worker::ListSessionsForWorkerOutput::next_token): <p>The token for the next set of results, or <code>null</code> to start from the beginning.</p>
    /// - On failure, responds with [`SdkError<ListSessionsForWorkerError>`](crate::operation::list_sessions_for_worker::ListSessionsForWorkerError)
    pub fn list_sessions_for_worker(&self) -> crate::operation::list_sessions_for_worker::builders::ListSessionsForWorkerFluentBuilder {
        crate::operation::list_sessions_for_worker::builders::ListSessionsForWorkerFluentBuilder::new(self.handle.clone())
    }
}
