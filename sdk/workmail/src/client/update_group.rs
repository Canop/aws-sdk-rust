// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateGroup`](crate::operation::update_group::builders::UpdateGroupFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`organization_id(impl Into<String>)`](crate::operation::update_group::builders::UpdateGroupFluentBuilder::organization_id) / [`set_organization_id(Option<String>)`](crate::operation::update_group::builders::UpdateGroupFluentBuilder::set_organization_id): <p>The identifier for the organization under which the group exists.</p>
    ///   - [`group_id(impl Into<String>)`](crate::operation::update_group::builders::UpdateGroupFluentBuilder::group_id) / [`set_group_id(Option<String>)`](crate::operation::update_group::builders::UpdateGroupFluentBuilder::set_group_id): <p>The identifier for the group to be updated.</p>  <p>The identifier can accept <i>GroupId</i>, <i>Groupname</i>, or <i>email</i>. The following identity formats are available:</p>  <ul>   <li> <p>Group ID: 12345678-1234-1234-1234-123456789012 or S-1-1-12-1234567890-123456789-123456789-1234</p> </li>   <li> <p>Email address: group@domain.tld</p> </li>   <li> <p>Group name: group</p> </li>  </ul>
    ///   - [`hidden_from_global_address_list(bool)`](crate::operation::update_group::builders::UpdateGroupFluentBuilder::hidden_from_global_address_list) / [`set_hidden_from_global_address_list(Option<bool>)`](crate::operation::update_group::builders::UpdateGroupFluentBuilder::set_hidden_from_global_address_list): <p>If enabled, the group is hidden from the global address list.</p>
    /// - On success, responds with [`UpdateGroupOutput`](crate::operation::update_group::UpdateGroupOutput)
    /// - On failure, responds with [`SdkError<UpdateGroupError>`](crate::operation::update_group::UpdateGroupError)
    pub fn update_group(&self) -> crate::operation::update_group::builders::UpdateGroupFluentBuilder {
        crate::operation::update_group::builders::UpdateGroupFluentBuilder::new(self.handle.clone())
    }
}
