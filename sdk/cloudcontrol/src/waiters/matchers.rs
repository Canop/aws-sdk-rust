// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Matcher union: {"output":{"path":"ProgressEvent.OperationStatus","expected":"SUCCESS","comparator":"stringEquals"}}
pub(crate) fn match_get_resource_request_status_53fa245f9b2ca2da7(
    _result: ::std::result::Result<
        &crate::operation::get_resource_request_status::GetResourceRequestStatusOutput,
        &crate::operation::get_resource_request_status::GetResourceRequestStatusError,
    >,
) -> bool {
    fn path_traversal<'a>(
        _output: &'a crate::operation::get_resource_request_status::GetResourceRequestStatusOutput,
    ) -> ::std::option::Option<&'a crate::types::OperationStatus> {
        let _fld_1 = _output.progress_event.as_ref()?;
        let _fld_2 = _fld_1.operation_status.as_ref()?;
        ::std::option::Option::Some(_fld_2)
    }
    _result
        .as_ref()
        .ok()
        .and_then(|output| path_traversal(output))
        .map(|value| {
            let _tmp_2 = value.as_str();
            let right = "SUCCESS";
            let _cmp_1 = _tmp_2 == right;
            _cmp_1
        })
        .unwrap_or_default()
}

/// Matcher union: {"output":{"path":"ProgressEvent.OperationStatus","expected":"FAILED","comparator":"stringEquals"}}
pub(crate) fn match_get_resource_request_status_0341c7b549789ff49(
    _result: ::std::result::Result<
        &crate::operation::get_resource_request_status::GetResourceRequestStatusOutput,
        &crate::operation::get_resource_request_status::GetResourceRequestStatusError,
    >,
) -> bool {
    fn path_traversal<'a>(
        _output: &'a crate::operation::get_resource_request_status::GetResourceRequestStatusOutput,
    ) -> ::std::option::Option<&'a crate::types::OperationStatus> {
        let _fld_1 = _output.progress_event.as_ref()?;
        let _fld_2 = _fld_1.operation_status.as_ref()?;
        ::std::option::Option::Some(_fld_2)
    }
    _result
        .as_ref()
        .ok()
        .and_then(|output| path_traversal(output))
        .map(|value| {
            let _tmp_2 = value.as_str();
            let right = "FAILED";
            let _cmp_1 = _tmp_2 == right;
            _cmp_1
        })
        .unwrap_or_default()
}

/// Matcher union: {"output":{"path":"ProgressEvent.OperationStatus","expected":"CANCEL_COMPLETE","comparator":"stringEquals"}}
pub(crate) fn match_get_resource_request_status_4379bbe82396b1d09(
    _result: ::std::result::Result<
        &crate::operation::get_resource_request_status::GetResourceRequestStatusOutput,
        &crate::operation::get_resource_request_status::GetResourceRequestStatusError,
    >,
) -> bool {
    fn path_traversal<'a>(
        _output: &'a crate::operation::get_resource_request_status::GetResourceRequestStatusOutput,
    ) -> ::std::option::Option<&'a crate::types::OperationStatus> {
        let _fld_1 = _output.progress_event.as_ref()?;
        let _fld_2 = _fld_1.operation_status.as_ref()?;
        ::std::option::Option::Some(_fld_2)
    }
    _result
        .as_ref()
        .ok()
        .and_then(|output| path_traversal(output))
        .map(|value| {
            let _tmp_2 = value.as_str();
            let right = "CANCEL_COMPLETE";
            let _cmp_1 = _tmp_2 == right;
            _cmp_1
        })
        .unwrap_or_default()
}
