// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub use crate::operation::list_evaluation_form_versions::_list_evaluation_form_versions_output::ListEvaluationFormVersionsOutputBuilder;

pub use crate::operation::list_evaluation_form_versions::_list_evaluation_form_versions_input::ListEvaluationFormVersionsInputBuilder;

/// Fluent builder constructing a request to `ListEvaluationFormVersions`.
/// 
/// <p>Lists versions of an evaluation form in the specified Amazon Connect instance.</p>
#[derive(std::clone::Clone, std::fmt::Debug)]
pub struct ListEvaluationFormVersionsFluentBuilder {
    handle: std::sync::Arc<crate::client::Handle>,
                    inner: crate::operation::list_evaluation_form_versions::builders::ListEvaluationFormVersionsInputBuilder,
}
impl ListEvaluationFormVersionsFluentBuilder  {
    /// Creates a new `ListEvaluationFormVersions`.
    pub(crate) fn new(handle: std::sync::Arc<crate::client::Handle>) -> Self {
        Self {
            handle, inner: Default::default(),
        }
    }
    /// Consume this builder, creating a customizable operation that can be modified before being
                    /// sent. The operation's inner [http::Request] can be modified as well.
                    pub async fn customize(self) -> std::result::Result<
                        crate::client::customize::CustomizableOperation<crate::operation::list_evaluation_form_versions::ListEvaluationFormVersions, aws_http::retry::AwsResponseRetryClassifier,>,
                        aws_smithy_http::result::SdkError<crate::operation::list_evaluation_form_versions::ListEvaluationFormVersionsError>
                    >  {
                        let handle = self.handle.clone();
                        let operation = self.inner.build().map_err(aws_smithy_http::result::SdkError::construction_failure)?
                            .make_operation(&handle.conf)
                            .await
                            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
                        Ok(crate::client::customize::CustomizableOperation { handle, operation })
                    }
    
                    /// Sends the request and returns the response.
                    ///
                    /// If an error occurs, an `SdkError` will be returned with additional details that
                    /// can be matched against.
                    ///
                    /// By default, any retryable failures will be retried twice. Retry behavior
                    /// is configurable with the [RetryConfig](aws_smithy_types::retry::RetryConfig), which can be
                    /// set when configuring the client.
                    pub async fn send(self) -> std::result::Result<crate::operation::list_evaluation_form_versions::ListEvaluationFormVersionsOutput, aws_smithy_http::result::SdkError<crate::operation::list_evaluation_form_versions::ListEvaluationFormVersionsError>>
                     {
                        let op = self.inner.build().map_err(aws_smithy_http::result::SdkError::construction_failure)?
                            .make_operation(&self.handle.conf)
                            .await
                            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
                        self.handle.client.call(op).await
                    }
    /// Create a paginator for this request
                            ///
                            /// Paginators are used by calling [`send().await`](crate::operation::list_evaluation_form_versions::paginator::ListEvaluationFormVersionsPaginator::send) which returns a `Stream`.
                            pub fn into_paginator(self) -> crate::operation::list_evaluation_form_versions::paginator::ListEvaluationFormVersionsPaginator {
                                crate::operation::list_evaluation_form_versions::paginator::ListEvaluationFormVersionsPaginator::new(self.handle, self.inner)
                            }
    /// <p>The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.</p>
    pub fn instance_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.instance_id(input.into());
        self
    }
    /// <p>The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.</p>
    pub fn set_instance_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.inner = self.inner.set_instance_id(input);
        self
    }
    /// <p>The unique identifier for the evaluation form.</p>
    pub fn evaluation_form_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.evaluation_form_id(input.into());
        self
    }
    /// <p>The unique identifier for the evaluation form.</p>
    pub fn set_evaluation_form_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.inner = self.inner.set_evaluation_form_id(input);
        self
    }
    /// <p>The maximum number of results to return per page.</p>
    pub fn max_results(mut self, input: i32) -> Self {
        self.inner = self.inner.max_results(input);
        self
    }
    /// <p>The maximum number of results to return per page.</p>
    pub fn set_max_results(mut self, input: std::option::Option<i32>) -> Self {
        self.inner = self.inner.set_max_results(input);
        self
    }
    /// <p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.next_token(input.into());
        self
    }
    /// <p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.inner = self.inner.set_next_token(input);
        self
    }
}

