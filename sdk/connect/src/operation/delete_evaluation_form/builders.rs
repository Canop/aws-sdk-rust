// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub use crate::operation::delete_evaluation_form::_delete_evaluation_form_output::DeleteEvaluationFormOutputBuilder;

pub use crate::operation::delete_evaluation_form::_delete_evaluation_form_input::DeleteEvaluationFormInputBuilder;

/// Fluent builder constructing a request to `DeleteEvaluationForm`.
/// 
/// <p>Deletes an evaluation form in the specified Amazon Connect instance. </p> 
/// <ul> 
/// <li> <p>If the version property is provided, only the specified version of the evaluation form is deleted.</p> </li> 
/// <li> <p>If no version is provided, then the full form (all versions) is deleted.</p> </li> 
/// </ul>
#[derive(std::clone::Clone, std::fmt::Debug)]
pub struct DeleteEvaluationFormFluentBuilder {
    handle: std::sync::Arc<crate::client::Handle>,
                    inner: crate::operation::delete_evaluation_form::builders::DeleteEvaluationFormInputBuilder,
}
impl DeleteEvaluationFormFluentBuilder  {
    /// Creates a new `DeleteEvaluationForm`.
    pub(crate) fn new(handle: std::sync::Arc<crate::client::Handle>) -> Self {
        Self {
            handle, inner: Default::default(),
        }
    }
    /// Consume this builder, creating a customizable operation that can be modified before being
                    /// sent. The operation's inner [http::Request] can be modified as well.
                    pub async fn customize(self) -> std::result::Result<
                        crate::client::customize::CustomizableOperation<crate::operation::delete_evaluation_form::DeleteEvaluationForm, aws_http::retry::AwsResponseRetryClassifier,>,
                        aws_smithy_http::result::SdkError<crate::operation::delete_evaluation_form::DeleteEvaluationFormError>
                    >  {
                        let handle = self.handle.clone();
                        let operation = self.inner.build().map_err(aws_smithy_http::result::SdkError::construction_failure)?
                            .make_operation(&handle.conf)
                            .await
                            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
                        Ok(crate::client::customize::CustomizableOperation { handle, operation })
                    }
    
                    /// Sends the request and returns the response.
                    ///
                    /// If an error occurs, an `SdkError` will be returned with additional details that
                    /// can be matched against.
                    ///
                    /// By default, any retryable failures will be retried twice. Retry behavior
                    /// is configurable with the [RetryConfig](aws_smithy_types::retry::RetryConfig), which can be
                    /// set when configuring the client.
                    pub async fn send(self) -> std::result::Result<crate::operation::delete_evaluation_form::DeleteEvaluationFormOutput, aws_smithy_http::result::SdkError<crate::operation::delete_evaluation_form::DeleteEvaluationFormError>>
                     {
                        let op = self.inner.build().map_err(aws_smithy_http::result::SdkError::construction_failure)?
                            .make_operation(&self.handle.conf)
                            .await
                            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
                        self.handle.client.call(op).await
                    }
    /// <p>The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.</p>
    pub fn instance_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.instance_id(input.into());
        self
    }
    /// <p>The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.</p>
    pub fn set_instance_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.inner = self.inner.set_instance_id(input);
        self
    }
    /// <p>The unique identifier for the evaluation form.</p>
    pub fn evaluation_form_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.evaluation_form_id(input.into());
        self
    }
    /// <p>The unique identifier for the evaluation form.</p>
    pub fn set_evaluation_form_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.inner = self.inner.set_evaluation_form_id(input);
        self
    }
    /// <p>The unique identifier for the evaluation form.</p>
    pub fn evaluation_form_version(mut self, input: i32) -> Self {
        self.inner = self.inner.evaluation_form_version(input);
        self
    }
    /// <p>The unique identifier for the evaluation form.</p>
    pub fn set_evaluation_form_version(mut self, input: std::option::Option<i32>) -> Self {
        self.inner = self.inner.set_evaluation_form_version(input);
        self
    }
}

