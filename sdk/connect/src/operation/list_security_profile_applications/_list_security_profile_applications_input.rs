// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ListSecurityProfileApplicationsInput {
    /// <p>The security profile identifier.</p>
    pub security_profile_id: ::std::option::Option<::std::string::String>,
    /// <p>The instance identifier.</p>
    pub instance_id: ::std::option::Option<::std::string::String>,
    /// <p>The token for the next set of results. The next set of results can be retrieved by using the token value returned in the previous response when making the next request.</p>
    pub next_token: ::std::option::Option<::std::string::String>,
    /// <p>The maximum number of results to return per page.</p>
    pub max_results: ::std::option::Option<i32>,
}
impl ListSecurityProfileApplicationsInput {
    /// <p>The security profile identifier.</p>
    pub fn security_profile_id(&self) -> ::std::option::Option<&str> {
        self.security_profile_id.as_deref()
    }
    /// <p>The instance identifier.</p>
    pub fn instance_id(&self) -> ::std::option::Option<&str> {
        self.instance_id.as_deref()
    }
    /// <p>The token for the next set of results. The next set of results can be retrieved by using the token value returned in the previous response when making the next request.</p>
    pub fn next_token(&self) -> ::std::option::Option<&str> {
        self.next_token.as_deref()
    }
    /// <p>The maximum number of results to return per page.</p>
    pub fn max_results(&self) -> ::std::option::Option<i32> {
        self.max_results
    }
}
impl ListSecurityProfileApplicationsInput {
    /// Creates a new builder-style object to manufacture [`ListSecurityProfileApplicationsInput`](crate::operation::list_security_profile_applications::ListSecurityProfileApplicationsInput).
    pub fn builder() -> crate::operation::list_security_profile_applications::builders::ListSecurityProfileApplicationsInputBuilder {
        crate::operation::list_security_profile_applications::builders::ListSecurityProfileApplicationsInputBuilder::default()
    }
}

/// A builder for [`ListSecurityProfileApplicationsInput`](crate::operation::list_security_profile_applications::ListSecurityProfileApplicationsInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ListSecurityProfileApplicationsInputBuilder {
    pub(crate) security_profile_id: ::std::option::Option<::std::string::String>,
    pub(crate) instance_id: ::std::option::Option<::std::string::String>,
    pub(crate) next_token: ::std::option::Option<::std::string::String>,
    pub(crate) max_results: ::std::option::Option<i32>,
}
impl ListSecurityProfileApplicationsInputBuilder {
    /// <p>The security profile identifier.</p>
    pub fn security_profile_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.security_profile_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The security profile identifier.</p>
    pub fn set_security_profile_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.security_profile_id = input;
        self
    }
    /// <p>The security profile identifier.</p>
    pub fn get_security_profile_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.security_profile_id
    }
    /// <p>The instance identifier.</p>
    pub fn instance_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.instance_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The instance identifier.</p>
    pub fn set_instance_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.instance_id = input;
        self
    }
    /// <p>The instance identifier.</p>
    pub fn get_instance_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.instance_id
    }
    /// <p>The token for the next set of results. The next set of results can be retrieved by using the token value returned in the previous response when making the next request.</p>
    pub fn next_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.next_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The token for the next set of results. The next set of results can be retrieved by using the token value returned in the previous response when making the next request.</p>
    pub fn set_next_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// <p>The token for the next set of results. The next set of results can be retrieved by using the token value returned in the previous response when making the next request.</p>
    pub fn get_next_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.next_token
    }
    /// <p>The maximum number of results to return per page.</p>
    pub fn max_results(mut self, input: i32) -> Self {
        self.max_results = ::std::option::Option::Some(input);
        self
    }
    /// <p>The maximum number of results to return per page.</p>
    pub fn set_max_results(mut self, input: ::std::option::Option<i32>) -> Self {
        self.max_results = input;
        self
    }
    /// <p>The maximum number of results to return per page.</p>
    pub fn get_max_results(&self) -> &::std::option::Option<i32> {
        &self.max_results
    }
    /// Consumes the builder and constructs a [`ListSecurityProfileApplicationsInput`](crate::operation::list_security_profile_applications::ListSecurityProfileApplicationsInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::list_security_profile_applications::ListSecurityProfileApplicationsInput,
        ::aws_smithy_http::operation::error::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::list_security_profile_applications::ListSecurityProfileApplicationsInput {
                security_profile_id: self.security_profile_id,
                instance_id: self.instance_id,
                next_token: self.next_token,
                max_results: self.max_results,
            },
        )
    }
}
