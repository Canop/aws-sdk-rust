// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetSourceRepositoryCloneUrlsInput {
    /// <p>The name of the space.</p>
    pub space_name: ::std::string::String,
    /// <p>The name of the project in the space.</p>
    pub project_name: ::std::string::String,
    /// <p>The name of the source repository.</p>
    pub source_repository_name: ::std::string::String,
}
impl GetSourceRepositoryCloneUrlsInput {
    /// <p>The name of the space.</p>
    pub fn space_name(&self) -> &str {
        use std::ops::Deref;
        self.space_name.deref()
    }
    /// <p>The name of the project in the space.</p>
    pub fn project_name(&self) -> &str {
        use std::ops::Deref;
        self.project_name.deref()
    }
    /// <p>The name of the source repository.</p>
    pub fn source_repository_name(&self) -> &str {
        use std::ops::Deref;
        self.source_repository_name.deref()
    }
}
impl GetSourceRepositoryCloneUrlsInput {
    /// Creates a new builder-style object to manufacture [`GetSourceRepositoryCloneUrlsInput`](crate::operation::get_source_repository_clone_urls::GetSourceRepositoryCloneUrlsInput).
    pub fn builder() -> crate::operation::get_source_repository_clone_urls::builders::GetSourceRepositoryCloneUrlsInputBuilder {
        crate::operation::get_source_repository_clone_urls::builders::GetSourceRepositoryCloneUrlsInputBuilder::default()
    }
}

/// A builder for [`GetSourceRepositoryCloneUrlsInput`](crate::operation::get_source_repository_clone_urls::GetSourceRepositoryCloneUrlsInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct GetSourceRepositoryCloneUrlsInputBuilder {
    pub(crate) space_name: ::std::option::Option<::std::string::String>,
    pub(crate) project_name: ::std::option::Option<::std::string::String>,
    pub(crate) source_repository_name: ::std::option::Option<::std::string::String>,
}
impl GetSourceRepositoryCloneUrlsInputBuilder {
    /// <p>The name of the space.</p>
    /// This field is required.
    pub fn space_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.space_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the space.</p>
    pub fn set_space_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.space_name = input;
        self
    }
    /// <p>The name of the space.</p>
    pub fn get_space_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.space_name
    }
    /// <p>The name of the project in the space.</p>
    /// This field is required.
    pub fn project_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.project_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the project in the space.</p>
    pub fn set_project_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.project_name = input;
        self
    }
    /// <p>The name of the project in the space.</p>
    pub fn get_project_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.project_name
    }
    /// <p>The name of the source repository.</p>
    /// This field is required.
    pub fn source_repository_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.source_repository_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the source repository.</p>
    pub fn set_source_repository_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.source_repository_name = input;
        self
    }
    /// <p>The name of the source repository.</p>
    pub fn get_source_repository_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.source_repository_name
    }
    /// Consumes the builder and constructs a [`GetSourceRepositoryCloneUrlsInput`](crate::operation::get_source_repository_clone_urls::GetSourceRepositoryCloneUrlsInput).
    /// This method will fail if any of the following fields are not set:
    /// - [`space_name`](crate::operation::get_source_repository_clone_urls::builders::GetSourceRepositoryCloneUrlsInputBuilder::space_name)
    /// - [`project_name`](crate::operation::get_source_repository_clone_urls::builders::GetSourceRepositoryCloneUrlsInputBuilder::project_name)
    /// - [`source_repository_name`](crate::operation::get_source_repository_clone_urls::builders::GetSourceRepositoryCloneUrlsInputBuilder::source_repository_name)
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::get_source_repository_clone_urls::GetSourceRepositoryCloneUrlsInput,
        ::aws_smithy_http::operation::error::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::get_source_repository_clone_urls::GetSourceRepositoryCloneUrlsInput {
            space_name: self.space_name.ok_or_else(|| {
                ::aws_smithy_http::operation::error::BuildError::missing_field(
                    "space_name",
                    "space_name was not specified but it is required when building GetSourceRepositoryCloneUrlsInput",
                )
            })?,
            project_name: self.project_name.ok_or_else(|| {
                ::aws_smithy_http::operation::error::BuildError::missing_field(
                    "project_name",
                    "project_name was not specified but it is required when building GetSourceRepositoryCloneUrlsInput",
                )
            })?,
            source_repository_name: self.source_repository_name.ok_or_else(|| {
                ::aws_smithy_http::operation::error::BuildError::missing_field(
                    "source_repository_name",
                    "source_repository_name was not specified but it is required when building GetSourceRepositoryCloneUrlsInput",
                )
            })?,
        })
    }
}
