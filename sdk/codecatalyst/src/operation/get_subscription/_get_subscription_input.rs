// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetSubscriptionInput {
    /// <p>The name of the space.</p>
    pub space_name: ::std::string::String,
}
impl GetSubscriptionInput {
    /// <p>The name of the space.</p>
    pub fn space_name(&self) -> &str {
        use std::ops::Deref;
        self.space_name.deref()
    }
}
impl GetSubscriptionInput {
    /// Creates a new builder-style object to manufacture [`GetSubscriptionInput`](crate::operation::get_subscription::GetSubscriptionInput).
    pub fn builder() -> crate::operation::get_subscription::builders::GetSubscriptionInputBuilder {
        crate::operation::get_subscription::builders::GetSubscriptionInputBuilder::default()
    }
}

/// A builder for [`GetSubscriptionInput`](crate::operation::get_subscription::GetSubscriptionInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct GetSubscriptionInputBuilder {
    pub(crate) space_name: ::std::option::Option<::std::string::String>,
}
impl GetSubscriptionInputBuilder {
    /// <p>The name of the space.</p>
    /// This field is required.
    pub fn space_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.space_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the space.</p>
    pub fn set_space_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.space_name = input;
        self
    }
    /// <p>The name of the space.</p>
    pub fn get_space_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.space_name
    }
    /// Consumes the builder and constructs a [`GetSubscriptionInput`](crate::operation::get_subscription::GetSubscriptionInput).
    /// This method will fail if any of the following fields are not set:
    /// - [`space_name`](crate::operation::get_subscription::builders::GetSubscriptionInputBuilder::space_name)
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::get_subscription::GetSubscriptionInput, ::aws_smithy_http::operation::error::BuildError> {
        ::std::result::Result::Ok(crate::operation::get_subscription::GetSubscriptionInput {
            space_name: self.space_name.ok_or_else(|| {
                ::aws_smithy_http::operation::error::BuildError::missing_field(
                    "space_name",
                    "space_name was not specified but it is required when building GetSubscriptionInput",
                )
            })?,
        })
    }
}
