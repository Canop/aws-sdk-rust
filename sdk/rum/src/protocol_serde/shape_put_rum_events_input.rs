// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_put_rum_events_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::put_rum_events::PutRumEventsInput,
) -> Result<(), ::aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.app_monitor_details {
        #[allow(unused_mut)]
        let mut object_2 = object.key("AppMonitorDetails").start_object();
        crate::protocol_serde::shape_app_monitor_details::ser_app_monitor_details(&mut object_2, var_1)?;
        object_2.finish();
    }
    {
        object.key("BatchId").string(input.batch_id.as_str());
    }
    {
        let mut array_3 = object.key("RumEvents").start_array();
        for item_4 in &input.rum_events {
            {
                #[allow(unused_mut)]
                let mut object_5 = array_3.value().start_object();
                crate::protocol_serde::shape_rum_event::ser_rum_event(&mut object_5, item_4)?;
                object_5.finish();
            }
        }
        array_3.finish();
    }
    if let Some(var_6) = &input.user_details {
        #[allow(unused_mut)]
        let mut object_7 = object.key("UserDetails").start_object();
        crate::protocol_serde::shape_user_details::ser_user_details(&mut object_7, var_6)?;
        object_7.finish();
    }
    Ok(())
}
