// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateArchive`](crate::operation::create_archive::builders::CreateArchiveFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`client_token(impl Into<String>)`](crate::operation::create_archive::builders::CreateArchiveFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::create_archive::builders::CreateArchiveFluentBuilder::set_client_token):<br>required: **false**<br><p>A unique token Amazon SES uses to recognize retries of this request.</p><br>
    ///   - [`archive_name(impl Into<String>)`](crate::operation::create_archive::builders::CreateArchiveFluentBuilder::archive_name) / [`set_archive_name(Option<String>)`](crate::operation::create_archive::builders::CreateArchiveFluentBuilder::set_archive_name):<br>required: **true**<br><p>A unique name for the new archive.</p><br>
    ///   - [`retention(ArchiveRetention)`](crate::operation::create_archive::builders::CreateArchiveFluentBuilder::retention) / [`set_retention(Option<ArchiveRetention>)`](crate::operation::create_archive::builders::CreateArchiveFluentBuilder::set_retention):<br>required: **false**<br><p>The period for retaining emails in the archive before automatic deletion.</p><br>
    ///   - [`kms_key_arn(impl Into<String>)`](crate::operation::create_archive::builders::CreateArchiveFluentBuilder::kms_key_arn) / [`set_kms_key_arn(Option<String>)`](crate::operation::create_archive::builders::CreateArchiveFluentBuilder::set_kms_key_arn):<br>required: **false**<br><p>The Amazon Resource Name (ARN) of the KMS key for encrypting emails in the archive.</p><br>
    ///   - [`tags(Tag)`](crate::operation::create_archive::builders::CreateArchiveFluentBuilder::tags) / [`set_tags(Option<Vec::<Tag>>)`](crate::operation::create_archive::builders::CreateArchiveFluentBuilder::set_tags):<br>required: **false**<br><p>The tags used to organize, track, or control access for the resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.</p><br>
    /// - On success, responds with [`CreateArchiveOutput`](crate::operation::create_archive::CreateArchiveOutput) with field(s):
    ///   - [`archive_id(String)`](crate::operation::create_archive::CreateArchiveOutput::archive_id): <p>The unique identifier for the newly created archive.</p>
    /// - On failure, responds with [`SdkError<CreateArchiveError>`](crate::operation::create_archive::CreateArchiveError)
    pub fn create_archive(&self) -> crate::operation::create_archive::builders::CreateArchiveFluentBuilder {
        crate::operation::create_archive::builders::CreateArchiveFluentBuilder::new(self.handle.clone())
    }
}
