// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateAddonSubscription`](crate::operation::create_addon_subscription::builders::CreateAddonSubscriptionFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`client_token(impl Into<String>)`](crate::operation::create_addon_subscription::builders::CreateAddonSubscriptionFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::create_addon_subscription::builders::CreateAddonSubscriptionFluentBuilder::set_client_token):<br>required: **false**<br><p>A unique token that Amazon SES uses to recognize subsequent retries of the same request.</p><br>
    ///   - [`addon_name(impl Into<String>)`](crate::operation::create_addon_subscription::builders::CreateAddonSubscriptionFluentBuilder::addon_name) / [`set_addon_name(Option<String>)`](crate::operation::create_addon_subscription::builders::CreateAddonSubscriptionFluentBuilder::set_addon_name):<br>required: **true**<br><p>The name of the Add On to subscribe to. You can only have one subscription for each Add On name.</p><br>
    ///   - [`tags(Tag)`](crate::operation::create_addon_subscription::builders::CreateAddonSubscriptionFluentBuilder::tags) / [`set_tags(Option<Vec::<Tag>>)`](crate::operation::create_addon_subscription::builders::CreateAddonSubscriptionFluentBuilder::set_tags):<br>required: **false**<br><p>The tags used to organize, track, or control access for the resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.</p><br>
    /// - On success, responds with [`CreateAddonSubscriptionOutput`](crate::operation::create_addon_subscription::CreateAddonSubscriptionOutput) with field(s):
    ///   - [`addon_subscription_id(String)`](crate::operation::create_addon_subscription::CreateAddonSubscriptionOutput::addon_subscription_id): <p>The unique ID of the Add On subscription created by this API.</p>
    /// - On failure, responds with [`SdkError<CreateAddonSubscriptionError>`](crate::operation::create_addon_subscription::CreateAddonSubscriptionError)
    pub fn create_addon_subscription(&self) -> crate::operation::create_addon_subscription::builders::CreateAddonSubscriptionFluentBuilder {
        crate::operation::create_addon_subscription::builders::CreateAddonSubscriptionFluentBuilder::new(self.handle.clone())
    }
}
