// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateProblem`](crate::operation::update_problem::builders::UpdateProblemFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`problem_id(impl Into<String>)`](crate::operation::update_problem::builders::UpdateProblemFluentBuilder::problem_id) / [`set_problem_id(Option<String>)`](crate::operation::update_problem::builders::UpdateProblemFluentBuilder::set_problem_id): <p>The ID of the problem.</p>
    ///   - [`update_status(UpdateStatus)`](crate::operation::update_problem::builders::UpdateProblemFluentBuilder::update_status) / [`set_update_status(Option<UpdateStatus>)`](crate::operation::update_problem::builders::UpdateProblemFluentBuilder::set_update_status): <p>The status of the problem. Arguments can be passed for only problems that show a status of <code>RECOVERING</code>.</p>
    ///   - [`visibility(Visibility)`](crate::operation::update_problem::builders::UpdateProblemFluentBuilder::visibility) / [`set_visibility(Option<Visibility>)`](crate::operation::update_problem::builders::UpdateProblemFluentBuilder::set_visibility): <p>The visibility of a problem. When you pass a value of <code>IGNORED</code>, the problem is removed from the default view, and all notifications for the problem are suspended. When <code>VISIBLE</code> is passed, the <code>IGNORED</code> action is reversed.</p>
    /// - On success, responds with [`UpdateProblemOutput`](crate::operation::update_problem::UpdateProblemOutput)
    /// - On failure, responds with [`SdkError<UpdateProblemError>`](crate::operation::update_problem::UpdateProblemError)
    pub fn update_problem(&self) -> crate::operation::update_problem::builders::UpdateProblemFluentBuilder {
        crate::operation::update_problem::builders::UpdateProblemFluentBuilder::new(self.handle.clone())
    }
}
