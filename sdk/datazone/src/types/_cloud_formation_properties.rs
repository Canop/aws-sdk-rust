// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Part of the provisioning properties of the environment blueprint.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CloudFormationProperties {
    /// <p>The template URL of the cloud formation provisioning properties of the environment blueprint.</p>
    pub template_url: ::std::option::Option<::std::string::String>,
}
impl CloudFormationProperties {
    /// <p>The template URL of the cloud formation provisioning properties of the environment blueprint.</p>
    pub fn template_url(&self) -> ::std::option::Option<&str> {
        self.template_url.as_deref()
    }
}
impl CloudFormationProperties {
    /// Creates a new builder-style object to manufacture [`CloudFormationProperties`](crate::types::CloudFormationProperties).
    pub fn builder() -> crate::types::builders::CloudFormationPropertiesBuilder {
        crate::types::builders::CloudFormationPropertiesBuilder::default()
    }
}

/// A builder for [`CloudFormationProperties`](crate::types::CloudFormationProperties).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct CloudFormationPropertiesBuilder {
    pub(crate) template_url: ::std::option::Option<::std::string::String>,
}
impl CloudFormationPropertiesBuilder {
    /// <p>The template URL of the cloud formation provisioning properties of the environment blueprint.</p>
    pub fn template_url(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.template_url = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The template URL of the cloud formation provisioning properties of the environment blueprint.</p>
    pub fn set_template_url(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.template_url = input;
        self
    }
    /// <p>The template URL of the cloud formation provisioning properties of the environment blueprint.</p>
    pub fn get_template_url(&self) -> &::std::option::Option<::std::string::String> {
        &self.template_url
    }
    /// Consumes the builder and constructs a [`CloudFormationProperties`](crate::types::CloudFormationProperties).
    pub fn build(self) -> crate::types::CloudFormationProperties {
        crate::types::CloudFormationProperties {
            template_url: self.template_url,
        }
    }
}
