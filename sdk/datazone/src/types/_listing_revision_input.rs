// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A revision to be made to an asset published in a Amazon DataZone catalog.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ListingRevisionInput {
    /// <p>An identifier of revision to be made to an asset published in a Amazon DataZone catalog.</p>
    pub identifier: ::std::option::Option<::std::string::String>,
    /// <p>The details of a revision to be made to an asset published in a Amazon DataZone catalog.</p>
    pub revision: ::std::option::Option<::std::string::String>,
}
impl ListingRevisionInput {
    /// <p>An identifier of revision to be made to an asset published in a Amazon DataZone catalog.</p>
    pub fn identifier(&self) -> ::std::option::Option<&str> {
        self.identifier.as_deref()
    }
    /// <p>The details of a revision to be made to an asset published in a Amazon DataZone catalog.</p>
    pub fn revision(&self) -> ::std::option::Option<&str> {
        self.revision.as_deref()
    }
}
impl ListingRevisionInput {
    /// Creates a new builder-style object to manufacture [`ListingRevisionInput`](crate::types::ListingRevisionInput).
    pub fn builder() -> crate::types::builders::ListingRevisionInputBuilder {
        crate::types::builders::ListingRevisionInputBuilder::default()
    }
}

/// A builder for [`ListingRevisionInput`](crate::types::ListingRevisionInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ListingRevisionInputBuilder {
    pub(crate) identifier: ::std::option::Option<::std::string::String>,
    pub(crate) revision: ::std::option::Option<::std::string::String>,
}
impl ListingRevisionInputBuilder {
    /// <p>An identifier of revision to be made to an asset published in a Amazon DataZone catalog.</p>
    pub fn identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>An identifier of revision to be made to an asset published in a Amazon DataZone catalog.</p>
    pub fn set_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.identifier = input;
        self
    }
    /// <p>An identifier of revision to be made to an asset published in a Amazon DataZone catalog.</p>
    pub fn get_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.identifier
    }
    /// <p>The details of a revision to be made to an asset published in a Amazon DataZone catalog.</p>
    pub fn revision(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.revision = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The details of a revision to be made to an asset published in a Amazon DataZone catalog.</p>
    pub fn set_revision(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.revision = input;
        self
    }
    /// <p>The details of a revision to be made to an asset published in a Amazon DataZone catalog.</p>
    pub fn get_revision(&self) -> &::std::option::Option<::std::string::String> {
        &self.revision
    }
    /// Consumes the builder and constructs a [`ListingRevisionInput`](crate::types::ListingRevisionInput).
    pub fn build(self) -> crate::types::ListingRevisionInput {
        crate::types::ListingRevisionInput {
            identifier: self.identifier,
            revision: self.revision,
        }
    }
}
