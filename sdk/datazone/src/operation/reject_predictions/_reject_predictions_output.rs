// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct RejectPredictionsOutput {
    /// <p></p>
    pub domain_id: ::std::option::Option<::std::string::String>,
    /// <p></p>
    pub asset_id: ::std::option::Option<::std::string::String>,
    /// <p></p>
    pub asset_revision: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl RejectPredictionsOutput {
    /// <p></p>
    pub fn domain_id(&self) -> ::std::option::Option<&str> {
        self.domain_id.as_deref()
    }
    /// <p></p>
    pub fn asset_id(&self) -> ::std::option::Option<&str> {
        self.asset_id.as_deref()
    }
    /// <p></p>
    pub fn asset_revision(&self) -> ::std::option::Option<&str> {
        self.asset_revision.as_deref()
    }
}
impl ::aws_http::request_id::RequestId for RejectPredictionsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl RejectPredictionsOutput {
    /// Creates a new builder-style object to manufacture [`RejectPredictionsOutput`](crate::operation::reject_predictions::RejectPredictionsOutput).
    pub fn builder() -> crate::operation::reject_predictions::builders::RejectPredictionsOutputBuilder {
        crate::operation::reject_predictions::builders::RejectPredictionsOutputBuilder::default()
    }
}

/// A builder for [`RejectPredictionsOutput`](crate::operation::reject_predictions::RejectPredictionsOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct RejectPredictionsOutputBuilder {
    pub(crate) domain_id: ::std::option::Option<::std::string::String>,
    pub(crate) asset_id: ::std::option::Option<::std::string::String>,
    pub(crate) asset_revision: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl RejectPredictionsOutputBuilder {
    /// <p></p>
    pub fn domain_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.domain_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p></p>
    pub fn set_domain_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.domain_id = input;
        self
    }
    /// <p></p>
    pub fn get_domain_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.domain_id
    }
    /// <p></p>
    pub fn asset_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.asset_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p></p>
    pub fn set_asset_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.asset_id = input;
        self
    }
    /// <p></p>
    pub fn get_asset_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.asset_id
    }
    /// <p></p>
    pub fn asset_revision(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.asset_revision = ::std::option::Option::Some(input.into());
        self
    }
    /// <p></p>
    pub fn set_asset_revision(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.asset_revision = input;
        self
    }
    /// <p></p>
    pub fn get_asset_revision(&self) -> &::std::option::Option<::std::string::String> {
        &self.asset_revision
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`RejectPredictionsOutput`](crate::operation::reject_predictions::RejectPredictionsOutput).
    pub fn build(self) -> crate::operation::reject_predictions::RejectPredictionsOutput {
        crate::operation::reject_predictions::RejectPredictionsOutput {
            domain_id: self.domain_id,
            asset_id: self.asset_id,
            asset_revision: self.asset_revision,
            _request_id: self._request_id,
        }
    }
}
