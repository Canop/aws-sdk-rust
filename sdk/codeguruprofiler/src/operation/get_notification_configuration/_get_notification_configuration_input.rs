// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The structure representing the GetNotificationConfigurationRequest.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetNotificationConfigurationInput {
    /// <p>The name of the profiling group we want to get the notification configuration for.</p>
    pub profiling_group_name: ::std::string::String,
}
impl GetNotificationConfigurationInput {
    /// <p>The name of the profiling group we want to get the notification configuration for.</p>
    pub fn profiling_group_name(&self) -> &str {
        use std::ops::Deref;
        self.profiling_group_name.deref()
    }
}
impl GetNotificationConfigurationInput {
    /// Creates a new builder-style object to manufacture [`GetNotificationConfigurationInput`](crate::operation::get_notification_configuration::GetNotificationConfigurationInput).
    pub fn builder() -> crate::operation::get_notification_configuration::builders::GetNotificationConfigurationInputBuilder {
        crate::operation::get_notification_configuration::builders::GetNotificationConfigurationInputBuilder::default()
    }
}

/// A builder for [`GetNotificationConfigurationInput`](crate::operation::get_notification_configuration::GetNotificationConfigurationInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct GetNotificationConfigurationInputBuilder {
    pub(crate) profiling_group_name: ::std::option::Option<::std::string::String>,
}
impl GetNotificationConfigurationInputBuilder {
    /// <p>The name of the profiling group we want to get the notification configuration for.</p>
    /// This field is required.
    pub fn profiling_group_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.profiling_group_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the profiling group we want to get the notification configuration for.</p>
    pub fn set_profiling_group_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.profiling_group_name = input;
        self
    }
    /// <p>The name of the profiling group we want to get the notification configuration for.</p>
    pub fn get_profiling_group_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.profiling_group_name
    }
    /// Consumes the builder and constructs a [`GetNotificationConfigurationInput`](crate::operation::get_notification_configuration::GetNotificationConfigurationInput).
    /// This method will fail if any of the following fields are not set:
    /// - [`profiling_group_name`](crate::operation::get_notification_configuration::builders::GetNotificationConfigurationInputBuilder::profiling_group_name)
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::get_notification_configuration::GetNotificationConfigurationInput,
        ::aws_smithy_http::operation::error::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::get_notification_configuration::GetNotificationConfigurationInput {
            profiling_group_name: self.profiling_group_name.ok_or_else(|| {
                ::aws_smithy_http::operation::error::BuildError::missing_field(
                    "profiling_group_name",
                    "profiling_group_name was not specified but it is required when building GetNotificationConfigurationInput",
                )
            })?,
        })
    }
}
