// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct PutBandwidthRateLimitScheduleInput {
    /// <p>The Amazon Resource Name (ARN) of the gateway. Use the <a href="https://docs.aws.amazon.com/aws-backup/latest/devguide/API_BGW_ListGateways.html"> <code>ListGateways</code> </a> operation to return a list of gateways for your account and Amazon Web Services Region.</p>
    pub gateway_arn: ::std::string::String,
    /// <p>An array containing bandwidth rate limit schedule intervals for a gateway. When no bandwidth rate limit intervals have been scheduled, the array is empty.</p>
    pub bandwidth_rate_limit_intervals: ::std::vec::Vec<crate::types::BandwidthRateLimitInterval>,
}
impl PutBandwidthRateLimitScheduleInput {
    /// <p>The Amazon Resource Name (ARN) of the gateway. Use the <a href="https://docs.aws.amazon.com/aws-backup/latest/devguide/API_BGW_ListGateways.html"> <code>ListGateways</code> </a> operation to return a list of gateways for your account and Amazon Web Services Region.</p>
    pub fn gateway_arn(&self) -> &str {
        use std::ops::Deref;
        self.gateway_arn.deref()
    }
    /// <p>An array containing bandwidth rate limit schedule intervals for a gateway. When no bandwidth rate limit intervals have been scheduled, the array is empty.</p>
    pub fn bandwidth_rate_limit_intervals(&self) -> &[crate::types::BandwidthRateLimitInterval] {
        use std::ops::Deref;
        self.bandwidth_rate_limit_intervals.deref()
    }
}
impl PutBandwidthRateLimitScheduleInput {
    /// Creates a new builder-style object to manufacture [`PutBandwidthRateLimitScheduleInput`](crate::operation::put_bandwidth_rate_limit_schedule::PutBandwidthRateLimitScheduleInput).
    pub fn builder() -> crate::operation::put_bandwidth_rate_limit_schedule::builders::PutBandwidthRateLimitScheduleInputBuilder {
        crate::operation::put_bandwidth_rate_limit_schedule::builders::PutBandwidthRateLimitScheduleInputBuilder::default()
    }
}

/// A builder for [`PutBandwidthRateLimitScheduleInput`](crate::operation::put_bandwidth_rate_limit_schedule::PutBandwidthRateLimitScheduleInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct PutBandwidthRateLimitScheduleInputBuilder {
    pub(crate) gateway_arn: ::std::option::Option<::std::string::String>,
    pub(crate) bandwidth_rate_limit_intervals: ::std::option::Option<::std::vec::Vec<crate::types::BandwidthRateLimitInterval>>,
}
impl PutBandwidthRateLimitScheduleInputBuilder {
    /// <p>The Amazon Resource Name (ARN) of the gateway. Use the <a href="https://docs.aws.amazon.com/aws-backup/latest/devguide/API_BGW_ListGateways.html"> <code>ListGateways</code> </a> operation to return a list of gateways for your account and Amazon Web Services Region.</p>
    /// This field is required.
    pub fn gateway_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.gateway_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the gateway. Use the <a href="https://docs.aws.amazon.com/aws-backup/latest/devguide/API_BGW_ListGateways.html"> <code>ListGateways</code> </a> operation to return a list of gateways for your account and Amazon Web Services Region.</p>
    pub fn set_gateway_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.gateway_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the gateway. Use the <a href="https://docs.aws.amazon.com/aws-backup/latest/devguide/API_BGW_ListGateways.html"> <code>ListGateways</code> </a> operation to return a list of gateways for your account and Amazon Web Services Region.</p>
    pub fn get_gateway_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.gateway_arn
    }
    /// Appends an item to `bandwidth_rate_limit_intervals`.
    ///
    /// To override the contents of this collection use [`set_bandwidth_rate_limit_intervals`](Self::set_bandwidth_rate_limit_intervals).
    ///
    /// <p>An array containing bandwidth rate limit schedule intervals for a gateway. When no bandwidth rate limit intervals have been scheduled, the array is empty.</p>
    pub fn bandwidth_rate_limit_intervals(mut self, input: crate::types::BandwidthRateLimitInterval) -> Self {
        let mut v = self.bandwidth_rate_limit_intervals.unwrap_or_default();
        v.push(input);
        self.bandwidth_rate_limit_intervals = ::std::option::Option::Some(v);
        self
    }
    /// <p>An array containing bandwidth rate limit schedule intervals for a gateway. When no bandwidth rate limit intervals have been scheduled, the array is empty.</p>
    pub fn set_bandwidth_rate_limit_intervals(
        mut self,
        input: ::std::option::Option<::std::vec::Vec<crate::types::BandwidthRateLimitInterval>>,
    ) -> Self {
        self.bandwidth_rate_limit_intervals = input;
        self
    }
    /// <p>An array containing bandwidth rate limit schedule intervals for a gateway. When no bandwidth rate limit intervals have been scheduled, the array is empty.</p>
    pub fn get_bandwidth_rate_limit_intervals(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::BandwidthRateLimitInterval>> {
        &self.bandwidth_rate_limit_intervals
    }
    /// Consumes the builder and constructs a [`PutBandwidthRateLimitScheduleInput`](crate::operation::put_bandwidth_rate_limit_schedule::PutBandwidthRateLimitScheduleInput).
    /// This method will fail if any of the following fields are not set:
    /// - [`gateway_arn`](crate::operation::put_bandwidth_rate_limit_schedule::builders::PutBandwidthRateLimitScheduleInputBuilder::gateway_arn)
    /// - [`bandwidth_rate_limit_intervals`](crate::operation::put_bandwidth_rate_limit_schedule::builders::PutBandwidthRateLimitScheduleInputBuilder::bandwidth_rate_limit_intervals)
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::put_bandwidth_rate_limit_schedule::PutBandwidthRateLimitScheduleInput,
        ::aws_smithy_http::operation::error::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::put_bandwidth_rate_limit_schedule::PutBandwidthRateLimitScheduleInput {
            gateway_arn: self.gateway_arn.ok_or_else(|| {
                ::aws_smithy_http::operation::error::BuildError::missing_field(
                    "gateway_arn",
                    "gateway_arn was not specified but it is required when building PutBandwidthRateLimitScheduleInput",
                )
            })?,
            bandwidth_rate_limit_intervals: self.bandwidth_rate_limit_intervals.ok_or_else(|| {
                ::aws_smithy_http::operation::error::BuildError::missing_field(
                    "bandwidth_rate_limit_intervals",
                    "bandwidth_rate_limit_intervals was not specified but it is required when building PutBandwidthRateLimitScheduleInput",
                )
            })?,
        })
    }
}
