// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct PutHypervisorPropertyMappingsInput {
    /// <p>The Amazon Resource Name (ARN) of the hypervisor.</p>
    pub hypervisor_arn: ::std::string::String,
    /// <p>This action requests the mappings of on-premises VMware tags to the Amazon Web Services tags.</p>
    pub vmware_to_aws_tag_mappings: ::std::vec::Vec<crate::types::VmwareToAwsTagMapping>,
    /// <p>The Amazon Resource Name (ARN) of the IAM role.</p>
    pub iam_role_arn: ::std::string::String,
}
impl PutHypervisorPropertyMappingsInput {
    /// <p>The Amazon Resource Name (ARN) of the hypervisor.</p>
    pub fn hypervisor_arn(&self) -> &str {
        use std::ops::Deref;
        self.hypervisor_arn.deref()
    }
    /// <p>This action requests the mappings of on-premises VMware tags to the Amazon Web Services tags.</p>
    pub fn vmware_to_aws_tag_mappings(&self) -> &[crate::types::VmwareToAwsTagMapping] {
        use std::ops::Deref;
        self.vmware_to_aws_tag_mappings.deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the IAM role.</p>
    pub fn iam_role_arn(&self) -> &str {
        use std::ops::Deref;
        self.iam_role_arn.deref()
    }
}
impl PutHypervisorPropertyMappingsInput {
    /// Creates a new builder-style object to manufacture [`PutHypervisorPropertyMappingsInput`](crate::operation::put_hypervisor_property_mappings::PutHypervisorPropertyMappingsInput).
    pub fn builder() -> crate::operation::put_hypervisor_property_mappings::builders::PutHypervisorPropertyMappingsInputBuilder {
        crate::operation::put_hypervisor_property_mappings::builders::PutHypervisorPropertyMappingsInputBuilder::default()
    }
}

/// A builder for [`PutHypervisorPropertyMappingsInput`](crate::operation::put_hypervisor_property_mappings::PutHypervisorPropertyMappingsInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct PutHypervisorPropertyMappingsInputBuilder {
    pub(crate) hypervisor_arn: ::std::option::Option<::std::string::String>,
    pub(crate) vmware_to_aws_tag_mappings: ::std::option::Option<::std::vec::Vec<crate::types::VmwareToAwsTagMapping>>,
    pub(crate) iam_role_arn: ::std::option::Option<::std::string::String>,
}
impl PutHypervisorPropertyMappingsInputBuilder {
    /// <p>The Amazon Resource Name (ARN) of the hypervisor.</p>
    /// This field is required.
    pub fn hypervisor_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.hypervisor_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the hypervisor.</p>
    pub fn set_hypervisor_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.hypervisor_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the hypervisor.</p>
    pub fn get_hypervisor_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.hypervisor_arn
    }
    /// Appends an item to `vmware_to_aws_tag_mappings`.
    ///
    /// To override the contents of this collection use [`set_vmware_to_aws_tag_mappings`](Self::set_vmware_to_aws_tag_mappings).
    ///
    /// <p>This action requests the mappings of on-premises VMware tags to the Amazon Web Services tags.</p>
    pub fn vmware_to_aws_tag_mappings(mut self, input: crate::types::VmwareToAwsTagMapping) -> Self {
        let mut v = self.vmware_to_aws_tag_mappings.unwrap_or_default();
        v.push(input);
        self.vmware_to_aws_tag_mappings = ::std::option::Option::Some(v);
        self
    }
    /// <p>This action requests the mappings of on-premises VMware tags to the Amazon Web Services tags.</p>
    pub fn set_vmware_to_aws_tag_mappings(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::VmwareToAwsTagMapping>>) -> Self {
        self.vmware_to_aws_tag_mappings = input;
        self
    }
    /// <p>This action requests the mappings of on-premises VMware tags to the Amazon Web Services tags.</p>
    pub fn get_vmware_to_aws_tag_mappings(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::VmwareToAwsTagMapping>> {
        &self.vmware_to_aws_tag_mappings
    }
    /// <p>The Amazon Resource Name (ARN) of the IAM role.</p>
    /// This field is required.
    pub fn iam_role_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.iam_role_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the IAM role.</p>
    pub fn set_iam_role_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.iam_role_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the IAM role.</p>
    pub fn get_iam_role_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.iam_role_arn
    }
    /// Consumes the builder and constructs a [`PutHypervisorPropertyMappingsInput`](crate::operation::put_hypervisor_property_mappings::PutHypervisorPropertyMappingsInput).
    /// This method will fail if any of the following fields are not set:
    /// - [`hypervisor_arn`](crate::operation::put_hypervisor_property_mappings::builders::PutHypervisorPropertyMappingsInputBuilder::hypervisor_arn)
    /// - [`vmware_to_aws_tag_mappings`](crate::operation::put_hypervisor_property_mappings::builders::PutHypervisorPropertyMappingsInputBuilder::vmware_to_aws_tag_mappings)
    /// - [`iam_role_arn`](crate::operation::put_hypervisor_property_mappings::builders::PutHypervisorPropertyMappingsInputBuilder::iam_role_arn)
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::put_hypervisor_property_mappings::PutHypervisorPropertyMappingsInput,
        ::aws_smithy_http::operation::error::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::put_hypervisor_property_mappings::PutHypervisorPropertyMappingsInput {
            hypervisor_arn: self.hypervisor_arn.ok_or_else(|| {
                ::aws_smithy_http::operation::error::BuildError::missing_field(
                    "hypervisor_arn",
                    "hypervisor_arn was not specified but it is required when building PutHypervisorPropertyMappingsInput",
                )
            })?,
            vmware_to_aws_tag_mappings: self.vmware_to_aws_tag_mappings.ok_or_else(|| {
                ::aws_smithy_http::operation::error::BuildError::missing_field(
                    "vmware_to_aws_tag_mappings",
                    "vmware_to_aws_tag_mappings was not specified but it is required when building PutHypervisorPropertyMappingsInput",
                )
            })?,
            iam_role_arn: self.iam_role_arn.ok_or_else(|| {
                ::aws_smithy_http::operation::error::BuildError::missing_field(
                    "iam_role_arn",
                    "iam_role_arn was not specified but it is required when building PutHypervisorPropertyMappingsInput",
                )
            })?,
        })
    }
}
