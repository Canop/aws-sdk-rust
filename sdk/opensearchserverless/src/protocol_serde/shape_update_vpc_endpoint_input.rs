// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_update_vpc_endpoint_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::update_vpc_endpoint::UpdateVpcEndpointInput,
) -> Result<(), ::aws_smithy_http::operation::error::SerializationError> {
    {
        object.key("id").string(input.id.as_str());
    }
    if let Some(var_1) = &input.add_subnet_ids {
        let mut array_2 = object.key("addSubnetIds").start_array();
        for item_3 in var_1 {
            {
                array_2.value().string(item_3.as_str());
            }
        }
        array_2.finish();
    }
    if let Some(var_4) = &input.remove_subnet_ids {
        let mut array_5 = object.key("removeSubnetIds").start_array();
        for item_6 in var_4 {
            {
                array_5.value().string(item_6.as_str());
            }
        }
        array_5.finish();
    }
    if let Some(var_7) = &input.add_security_group_ids {
        let mut array_8 = object.key("addSecurityGroupIds").start_array();
        for item_9 in var_7 {
            {
                array_8.value().string(item_9.as_str());
            }
        }
        array_8.finish();
    }
    if let Some(var_10) = &input.remove_security_group_ids {
        let mut array_11 = object.key("removeSecurityGroupIds").start_array();
        for item_12 in var_10 {
            {
                array_11.value().string(item_12.as_str());
            }
        }
        array_11.finish();
    }
    if let Some(var_13) = &input.client_token {
        object.key("clientToken").string(var_13.as_str());
    }
    Ok(())
}
