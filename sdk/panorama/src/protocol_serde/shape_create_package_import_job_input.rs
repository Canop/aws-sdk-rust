// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_create_package_import_job_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::create_package_import_job::CreatePackageImportJobInput,
) -> Result<(), ::aws_smithy_http::operation::error::SerializationError> {
    {
        object.key("ClientToken").string(input.client_token.as_str());
    }
    if let Some(var_1) = &input.input_config {
        #[allow(unused_mut)]
        let mut object_2 = object.key("InputConfig").start_object();
        crate::protocol_serde::shape_package_import_job_input_config::ser_package_import_job_input_config(&mut object_2, var_1)?;
        object_2.finish();
    }
    if let Some(var_3) = &input.job_tags {
        let mut array_4 = object.key("JobTags").start_array();
        for item_5 in var_3 {
            {
                #[allow(unused_mut)]
                let mut object_6 = array_4.value().start_object();
                crate::protocol_serde::shape_job_resource_tags::ser_job_resource_tags(&mut object_6, item_5)?;
                object_6.finish();
            }
        }
        array_4.finish();
    }
    {
        object.key("JobType").string(input.job_type.as_str());
    }
    if let Some(var_7) = &input.output_config {
        #[allow(unused_mut)]
        let mut object_8 = object.key("OutputConfig").start_object();
        crate::protocol_serde::shape_package_import_job_output_config::ser_package_import_job_output_config(&mut object_8, var_7)?;
        object_8.finish();
    }
    Ok(())
}
