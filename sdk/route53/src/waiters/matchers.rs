// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Matcher union: {"output":{"path":"ChangeInfo.Status","expected":"INSYNC","comparator":"stringEquals"}}
pub(crate) fn match_get_change_5b3a50e9573dc87da(
    _result: ::std::result::Result<&crate::operation::get_change::GetChangeOutput, &crate::operation::get_change::GetChangeError>,
) -> bool {
    fn path_traversal<'a>(_output: &'a crate::operation::get_change::GetChangeOutput) -> ::std::option::Option<&'a crate::types::ChangeStatus> {
        let _fld_1 = _output.change_info.as_ref()?;
        let _fld_2 = &_fld_1.status;
        ::std::option::Option::Some(_fld_2)
    }
    _result
        .as_ref()
        .ok()
        .and_then(|output| path_traversal(output))
        .map(|value| {
            let _tmp_2 = value.as_str();
            let right = "INSYNC";
            let _cmp_1 = _tmp_2 == right;
            _cmp_1
        })
        .unwrap_or_default()
}
