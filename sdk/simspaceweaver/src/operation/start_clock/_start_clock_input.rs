// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct StartClockInput {
    /// <p>The name of the simulation.</p>
    pub simulation: ::std::string::String,
}
impl StartClockInput {
    /// <p>The name of the simulation.</p>
    pub fn simulation(&self) -> &str {
        use std::ops::Deref;
        self.simulation.deref()
    }
}
impl StartClockInput {
    /// Creates a new builder-style object to manufacture [`StartClockInput`](crate::operation::start_clock::StartClockInput).
    pub fn builder() -> crate::operation::start_clock::builders::StartClockInputBuilder {
        crate::operation::start_clock::builders::StartClockInputBuilder::default()
    }
}

/// A builder for [`StartClockInput`](crate::operation::start_clock::StartClockInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct StartClockInputBuilder {
    pub(crate) simulation: ::std::option::Option<::std::string::String>,
}
impl StartClockInputBuilder {
    /// <p>The name of the simulation.</p>
    /// This field is required.
    pub fn simulation(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.simulation = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the simulation.</p>
    pub fn set_simulation(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.simulation = input;
        self
    }
    /// <p>The name of the simulation.</p>
    pub fn get_simulation(&self) -> &::std::option::Option<::std::string::String> {
        &self.simulation
    }
    /// Consumes the builder and constructs a [`StartClockInput`](crate::operation::start_clock::StartClockInput).
    /// This method will fail if any of the following fields are not set:
    /// - [`simulation`](crate::operation::start_clock::builders::StartClockInputBuilder::simulation)
    pub fn build(self) -> ::std::result::Result<crate::operation::start_clock::StartClockInput, ::aws_smithy_http::operation::error::BuildError> {
        ::std::result::Result::Ok(crate::operation::start_clock::StartClockInput {
            simulation: self.simulation.ok_or_else(|| {
                ::aws_smithy_http::operation::error::BuildError::missing_field(
                    "simulation",
                    "simulation was not specified but it is required when building StartClockInput",
                )
            })?,
        })
    }
}
